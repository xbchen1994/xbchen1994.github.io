<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>QE-14</title>
    <link href="/2020/11/12/QE_14/"/>
    <url>/2020/11/12/QE_14/</url>
    
    <content type="html"><![CDATA[<p>Band structure of 2<em>d</em> materials, <em>e.g.</em>, Graphene. </p><span id="more"></span><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><p>Optimized the lattice constant.</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs nix">&amp;CONTROL<br>    <span class="hljs-attr">calculation=&#x27;vc-relax&#x27;</span><br>    <span class="hljs-attr">prefix=&#x27;graphene&#x27;</span><br>    <span class="hljs-attr">restart_mode=&#x27;from_scratch&#x27;</span><br>    <span class="hljs-attr">outdir=&#x27;./outdir&#x27;</span><br>    <span class="hljs-attr">pseudo_dir</span> = &#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;<br>    <span class="hljs-attr">forc_conv_thr=1.0d-4</span><br>    <span class="hljs-attr">etot_conv_thr=1.0d-6</span><br>/<br>&amp;SYSTEM<br>    <span class="hljs-attr">ibrav</span> = <span class="hljs-number">12</span>, <span class="hljs-attr">a</span> = <span class="hljs-number">2.460</span>, <span class="hljs-attr">b</span> = <span class="hljs-number">2.460</span>, <span class="hljs-attr">c=</span> <span class="hljs-number">20</span>, <span class="hljs-attr">cosab=-0.500000,</span><br>    <span class="hljs-attr">nat</span> = <span class="hljs-number">2</span>, <span class="hljs-attr">ntyp</span> = <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">ecutwfc</span> = <span class="hljs-number">40.0</span> ,<br>    <span class="hljs-attr">ecutrho</span> = <span class="hljs-number">400.0</span> ,<br>    <span class="hljs-attr">occupations</span> = &#x27;smearing&#x27;, <span class="hljs-attr">degauss</span> = <span class="hljs-number">0.0001</span>, <span class="hljs-attr">smearing</span> = &#x27;marzari-vanderbilt&#x27;<br>/<br>&amp;ELECTRONS<br>    <span class="hljs-attr">conv_thr</span> = <span class="hljs-number">1.0</span>d-<span class="hljs-number">8</span>,<br>    <span class="hljs-attr">mixing_beta</span> = <span class="hljs-number">0.3</span>,<br>/<br>&amp;IONS<br>    <span class="hljs-attr">ion_dynamics=&#x27;bfgs&#x27;</span><br>/<br>&amp;CELL<br>    <span class="hljs-attr">press_conv_thr</span> = <span class="hljs-number">0.5</span>D0<br>    <span class="hljs-attr">cell_dynamics</span> = bfgs,<br>    <span class="hljs-attr">cell_dofree</span> = &#x27;<span class="hljs-number">2</span>Dxy&#x27;<br>/<br>ATOMIC_SPECIES<br>C <span class="hljs-number">12.0107</span> C.pbe-n-kjpaw_psl.<span class="hljs-number">1.0</span>.<span class="hljs-number">0</span>.UPF<br>ATOMIC_POSITIONS crystal<br>C <span class="hljs-number">0.000000000</span> <span class="hljs-number">0.000000000</span> <span class="hljs-number">0.250000000</span><br>C <span class="hljs-number">0.333333333</span> <span class="hljs-number">0.666666667</span> <span class="hljs-number">0.250000000</span><br>K_POINTS automatic<br><span class="hljs-number">12</span> <span class="hljs-number">12</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p><em>New tags</em>:</p><ol><li><code>ibrav = 12</code></li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">12</span>          Monoclinic P, unique axis c     celldm(<span class="hljs-number">2</span>)=b/a<br>                                             <span class="hljs-attribute">celldm</span>(<span class="hljs-number">3</span>)=c/a,<br>                                             <span class="hljs-attribute">celldm</span>(<span class="hljs-number">4</span>)=cos(ab)<br>      <span class="hljs-attribute">v1</span>=(a,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), v<span class="hljs-number">2</span>=(b*cos(gamma),b*sin(gamma),<span class="hljs-number">0</span>),  v<span class="hljs-number">3</span> = (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,c)<br>      <span class="hljs-attribute">where</span> gamma is the angle between axis a and b.<br></code></pre></td></tr></table></figure><p>and if we use a, b, c, the unit is $\overset{\circ}{A}$.<br>2. <code>press_conv_thr</code>: Convergence threshold on the pressure for variable cell relaxation, and the default value is 0.5D0 Kbar.<br>3. <code>cell_dofree = &#39;2Dxy&#39;</code>: only x and y components are allowed to change</p><p>And we find the relaxed structure file in <code>.out</code> file.</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dns">Begin final coordinates<br>     new unit-cell volume =    <span class="hljs-number">710.60309</span> a.u.^<span class="hljs-number">3</span> (   <span class="hljs-number">105.30051</span> Ang^<span class="hljs-number">3</span> )<br>     density =      <span class="hljs-number">0.37881</span> g/cm^<span class="hljs-number">3</span><br><br>CELL_PARAMETERS (alat=  <span class="hljs-number">4.64872629</span>)<br>   <span class="hljs-number">1</span>.<span class="hljs-number">002304830</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>  -<span class="hljs-number">0.501152415</span>   <span class="hljs-number">0</span>.<span class="hljs-number">868021445</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">8.130081301</span><br><br>ATOMIC_POSITIONS (crystal)<br>C             <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">2500000000</span><br>C             <span class="hljs-number">0</span>.<span class="hljs-number">3333333330</span>        <span class="hljs-number">0</span>.<span class="hljs-number">6666666670</span>        <span class="hljs-number">0</span>.<span class="hljs-number">2500000000</span><br>End final coordinates<br></code></pre></td></tr></table></figure><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><p>The self-consistent calculation. </p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs dns">&amp;CONTROL<br>    calculation=&#x27;scf&#x27;<br>    prefix=&#x27;graphene&#x27;<br>    restart_mode=&#x27;from_scratch&#x27;<br>    outdir=&#x27;./outdir&#x27;<br>    pseudo_dir = &#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;<br>/<br>&amp;SYSTEM<br>    ibrav = <span class="hljs-number">0</span>, celldm(<span class="hljs-number">1</span>) = <span class="hljs-number">4.64872629</span><br>    nat = <span class="hljs-number">2</span>, ntyp = <span class="hljs-number">1</span>,<br>    ecutwfc = <span class="hljs-number">40</span>.<span class="hljs-number">0</span> ,<br>    ecutrho = <span class="hljs-number">400</span>.<span class="hljs-number">0</span> ,<br>    occupations = &#x27;smearing&#x27;, degauss = <span class="hljs-number">0</span>.<span class="hljs-number">0001</span>, smearing = &#x27;marzari-vanderbilt&#x27;<br>/<br>&amp;ELECTRONS<br>    conv_thr = <span class="hljs-number">1</span>.<span class="hljs-number">0d</span>-<span class="hljs-number">10</span>,<br>    mixing_beta = <span class="hljs-number">0</span>.<span class="hljs-number">3</span>,<br>/<br>ATOMIC_SPECIES<br>C <span class="hljs-number">12</span>.<span class="hljs-number">0107</span> C.pbe-n-kjpaw_psl.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.UPF<br>CELL_PARAMETERS alat<br>   <span class="hljs-number">1</span>.<span class="hljs-number">002304830</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>  -<span class="hljs-number">0.501152415</span>   <span class="hljs-number">0</span>.<span class="hljs-number">868021445</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">8.130081301</span><br>ATOMIC_POSITIONS crystal<br>C             <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">2500000000</span><br>C             <span class="hljs-number">0</span>.<span class="hljs-number">3333333330</span>        <span class="hljs-number">0</span>.<span class="hljs-number">6666666670</span>        <span class="hljs-number">0</span>.<span class="hljs-number">2500000000</span><br>K_POINTS automatic<br><span class="hljs-number">12 12 1 0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>Here we cancel the symmetry and use the structure file in the previous step. </p><h3 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a>STEP 3</h3><p>The nscf calculation to obtain the more accurate Fermi energy. </p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Change <span class="hljs-keyword">the</span> calculations <span class="hljs-built_in">to</span> be nscf, <span class="hljs-keyword">and</span> modify <span class="hljs-keyword">the</span> k-mesh <span class="hljs-built_in">to</span> be <span class="hljs-number">24</span> <span class="hljs-number">24</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>Here the Fermi energy is -2.3461 eV in scf calculation and -2.3461 eV in nscf calculation, so 12,12,1 k-mesh is enough, so this step can be neglected. </p><h3 id="STEP-4"><a href="#STEP-4" class="headerlink" title="STEP 4"></a>STEP 4</h3><p>Band structure calculations.</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs dns">&amp;CONTROL<br>    calculation=&#x27;bands&#x27;<br>    prefix=&#x27;graphene&#x27;<br>    restart_mode=&#x27;from_scratch&#x27;<br>    outdir=&#x27;./outdir&#x27;<br>    pseudo_dir = &#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;<br>/<br>&amp;SYSTEM<br>    ibrav = <span class="hljs-number">0</span>, celldm(<span class="hljs-number">1</span>) = <span class="hljs-number">4.64872629</span><br>    nat = <span class="hljs-number">2</span>, ntyp = <span class="hljs-number">1</span>,<br>    ecutwfc = <span class="hljs-number">40</span>.<span class="hljs-number">0</span> ,<br>    ecutrho = <span class="hljs-number">400</span>.<span class="hljs-number">0</span> ,<br>    occupations = &#x27;smearing&#x27;, degauss = <span class="hljs-number">0</span>.<span class="hljs-number">0001</span>, smearing = &#x27;marzari-vanderbilt&#x27;<br>/<br>&amp;ELECTRONS<br>    conv_thr = <span class="hljs-number">1</span>.<span class="hljs-number">0d</span>-<span class="hljs-number">10</span>,<br>    mixing_beta = <span class="hljs-number">0</span>.<span class="hljs-number">3</span>,<br>/<br>ATOMIC_SPECIES<br>C <span class="hljs-number">12</span>.<span class="hljs-number">0107</span> C.pbe-n-kjpaw_psl.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.UPF<br>CELL_PARAMETERS alat<br>   <span class="hljs-number">1</span>.<span class="hljs-number">002304830</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>  -<span class="hljs-number">0.501152415</span>   <span class="hljs-number">0</span>.<span class="hljs-number">868021445</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">8.130081301</span><br>ATOMIC_POSITIONS crystal<br>C             <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">2500000000</span><br>C             <span class="hljs-number">0</span>.<span class="hljs-number">3333333330</span>        <span class="hljs-number">0</span>.<span class="hljs-number">6666666670</span>        <span class="hljs-number">0</span>.<span class="hljs-number">2500000000</span><br>K_POINTS crystal_b<br><span class="hljs-number">4</span><br><span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span> <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">30</span> ! G<br>-<span class="hljs-number">0</span>.<span class="hljs-number">333333333</span> <span class="hljs-number">0</span>.<span class="hljs-number">666666667</span> <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">30</span> ! K<br><span class="hljs-number">0</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">0</span>.<span class="hljs-number">500000000</span> <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">30</span> ! M<br><span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span> <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">30</span> ! G<br></code></pre></td></tr></table></figure><h3 id="STEP-5"><a href="#STEP-5" class="headerlink" title="STEP 5"></a>STEP 5</h3><p>post-processing from bands output using <code>bands.x</code></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta">&amp;bands</span><br>outdir = &#x27;./outdir&#x27;<br>prefix = &#x27;graphene&#x27;<br>filband = &#x27;graphene.bands.dat&#x27;<br>/<br></code></pre></td></tr></table></figure><h3 id="STEP-6"><a href="#STEP-6" class="headerlink" title="STEP 6"></a>STEP 6</h3><p>plot band using <code>plotband.x</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">graphene<span class="hljs-selector-class">.bands</span>.dat<br>-<span class="hljs-number">25</span> <span class="hljs-number">12</span><br>graphene<span class="hljs-selector-class">.bands</span>.xmgr<br>graphene<span class="hljs-selector-class">.bands</span>.ps<br>-<span class="hljs-number">2.3461</span> <br><span class="hljs-number">5</span> -<span class="hljs-number">2.3461</span> <br></code></pre></td></tr></table></figure><p><strong>HINT</strong>: This post-processing can not use parallel computing. </p><p>Here is the band structure of graphene, and we can find the Dirac point is located at K point. </p><p><img src="/Users/chen/blog_hexo/source/_posts/Graphene.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-13</title>
    <link href="/2020/11/12/QE_13/"/>
    <url>/2020/11/12/QE_13/</url>
    
    <content type="html"><![CDATA[<p>Calculation of light absorption spectrum of Benzene $C_{6}H_{6}$ molecular using TDDFT.</p><span id="more"></span><p>TDDFT calculations in QE <strong>DO NOT</strong> support PAW.</p><p>You should go to <a href="www.pseudo-dojo.org">Pseudo-dojo</a> to download new PP. </p><p>We choose <code>nc-sr-04/pbe/stringent/upf</code> and then download. </p><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><p>Ionic relaxation. </p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs dns"> &amp;CONTROL<br>    calculation = &#x27;relax&#x27;<br>    prefix = &#x27;C6H6&#x27;<br>    outdir = &#x27;./outdir&#x27;<br>    pseudo_dir = &#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/pseudo_dojo&#x27;<br>    ! pseudo_dir = &#x27;/home/anonymous/quantumEspresso_2019/nc-sr-<span class="hljs-number">04</span>_pbe_stringent_upf&#x27;<br>    etot_conv_thr = <span class="hljs-number">1</span>e-<span class="hljs-number">5</span><br>    forc_conv_thr = <span class="hljs-number">1</span>e-<span class="hljs-number">4</span><br> /<br> &amp;SYSTEM<br>    ibrav = <span class="hljs-number">6</span>,<br>    celldm(<span class="hljs-number">1</span>) = <span class="hljs-number">32</span>.<span class="hljs-number">0</span>,<br>    celldm(<span class="hljs-number">3</span>) = <span class="hljs-number">0</span>.<span class="hljs-number">83</span>,<br>    nat = <span class="hljs-number">12</span>,<br>    ntyp = <span class="hljs-number">2</span>,<br>    ecutwfc = <span class="hljs-number">30</span>,<br> /<br> &amp;ELECTRONS<br>    conv_thr =  <span class="hljs-number">1</span>.<span class="hljs-number">0d</span>-<span class="hljs-number">8</span><br> /<br> &amp;IONS<br> /<br><br>ATOMIC_SPECIES<br> C  <span class="hljs-number">12</span>.<span class="hljs-number">0107</span>  C.upf<br> H  <span class="hljs-number">1.00784</span>  H.upf<br><br>ATOMIC_POSITIONS angstrom<br>C   <span class="hljs-number">5.633200899</span>   <span class="hljs-number">6</span>.<span class="hljs-number">320861303</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>C   <span class="hljs-number">6</span>.<span class="hljs-number">847051545</span>   <span class="hljs-number">8</span>.<span class="hljs-number">422621957</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>C   <span class="hljs-number">8</span>.<span class="hljs-number">060751351</span>   <span class="hljs-number">7</span>.<span class="hljs-number">721904557</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>C   <span class="hljs-number">8</span>.<span class="hljs-number">060707879</span>   <span class="hljs-number">6</span>.<span class="hljs-number">320636665</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>C   <span class="hljs-number">6</span>.<span class="hljs-number">846898786</span>   <span class="hljs-number">5</span>.<span class="hljs-number">620067381</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>C   <span class="hljs-number">5</span>.<span class="hljs-number">633279551</span>   <span class="hljs-number">7.722134449</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>H   <span class="hljs-number">6.847254360</span>   <span class="hljs-number">9.512254789</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>H   <span class="hljs-number">9</span>.<span class="hljs-number">004364510</span>   <span class="hljs-number">8</span>.<span class="hljs-number">266639340</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>H   <span class="hljs-number">9</span>.<span class="hljs-number">004297495</span>   <span class="hljs-number">5</span>.<span class="hljs-number">775895755</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>H   <span class="hljs-number">6</span>.<span class="hljs-number">846845929</span>   <span class="hljs-number">4</span>.<span class="hljs-number">530522778</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>H   <span class="hljs-number">4</span>.<span class="hljs-number">689556006</span>   <span class="hljs-number">5.776237709</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br>H   <span class="hljs-number">4</span>.<span class="hljs-number">689791688</span>   <span class="hljs-number">8</span>.<span class="hljs-number">267023318</span>   <span class="hljs-number">5</span>.<span class="hljs-number">000000000</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span><br><br>K_POINTS gamma<br></code></pre></td></tr></table></figure><p><em>New tags</em>:</p><ol><li><code>ibrav = 6</code>: </li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ibrav</span> = <span class="hljs-number">6</span>   Tetragonal P (st)   celldm(<span class="hljs-number">3</span>)=c/a<br>      <span class="hljs-attribute">v1</span> = a(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>),  v<span class="hljs-number">2</span> = a(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),  v<span class="hljs-number">3</span> = a(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,c/a)<br></code></pre></td></tr></table></figure><p>and the <strong>unit</strong> is Bohr.<br>2. <code>ecutwfc</code>: if you use USPP, you should additionally set the <code>ecutpho</code> to be more than eight times the number of <code>ecutwfc</code>. </p><p>Result:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Begin</span> final coordinates<br><br><span class="hljs-attribute">ATOMIC_POSITIONS</span> (angstrom)<br><span class="hljs-attribute">C</span>             <span class="hljs-number">5</span>.<span class="hljs-number">6349072530</span>        <span class="hljs-number">6</span>.<span class="hljs-number">3219732663</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">C</span>             <span class="hljs-number">6</span>.<span class="hljs-number">8471064692</span>        <span class="hljs-number">8</span>.<span class="hljs-number">4203756088</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">C</span>             <span class="hljs-number">8</span>.<span class="hljs-number">0590688968</span>        <span class="hljs-number">7</span>.<span class="hljs-number">7208084975</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">C</span>             <span class="hljs-number">8</span>.<span class="hljs-number">0589783279</span>        <span class="hljs-number">6</span>.<span class="hljs-number">3217775219</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">C</span>             <span class="hljs-number">6</span>.<span class="hljs-number">8468944163</span>        <span class="hljs-number">5</span>.<span class="hljs-number">6223943554</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">C</span>             <span class="hljs-number">5</span>.<span class="hljs-number">6350162132</span>        <span class="hljs-number">7</span>.<span class="hljs-number">7210074050</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">H</span>             <span class="hljs-number">6</span>.<span class="hljs-number">8472239652</span>        <span class="hljs-number">9</span>.<span class="hljs-number">5241227823</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">H</span>             <span class="hljs-number">9</span>.<span class="hljs-number">0149595312</span>        <span class="hljs-number">8</span>.<span class="hljs-number">2725861346</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">H</span>             <span class="hljs-number">9</span>.<span class="hljs-number">0148270307</span>        <span class="hljs-number">5</span>.<span class="hljs-number">7699205361</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">H</span>             <span class="hljs-number">6</span>.<span class="hljs-number">8468186394</span>        <span class="hljs-number">4</span>.<span class="hljs-number">5186488926</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">H</span>             <span class="hljs-number">4</span>.<span class="hljs-number">6789926355</span>        <span class="hljs-number">5</span>.<span class="hljs-number">7702489027</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">H</span>             <span class="hljs-number">4</span>.<span class="hljs-number">6792066205</span>        <span class="hljs-number">8</span>.<span class="hljs-number">2729360977</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br><span class="hljs-attribute">End</span> final coordinates<br></code></pre></td></tr></table></figure><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs dns"> &amp;CONTROL<br>    calculation = &#x27;scf&#x27;<br>    prefix = &#x27;C6H6&#x27;<br>    outdir = &#x27;./outdir&#x27;<br>    pseudo_dir = &#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/pseudo_dojo&#x27;<br>    ! pseudo_dir = &#x27;/home/anonymous/quantumEspresso_2019/nc-sr-<span class="hljs-number">04</span>_pbe_stringent_upf&#x27;<br> /<br> &amp;SYSTEM<br>    ibrav = <span class="hljs-number">6</span>,<br>    celldm(<span class="hljs-number">1</span>) = <span class="hljs-number">32</span>.<span class="hljs-number">0</span>,<br>    celldm(<span class="hljs-number">3</span>) = <span class="hljs-number">0</span>.<span class="hljs-number">83</span>,<br>    nat = <span class="hljs-number">12</span>,<br>    ntyp = <span class="hljs-number">2</span>,<br>    ecutwfc = <span class="hljs-number">40</span>,<br>    ecutrho = <span class="hljs-number">320</span><br> /<br> &amp;ELECTRONS<br>    conv_thr =  <span class="hljs-number">1</span>.<span class="hljs-number">0d</span>-<span class="hljs-number">10</span><br> /<br><br>ATOMIC_SPECIES<br> C  <span class="hljs-number">12</span>.<span class="hljs-number">0107</span>  C.upf<br> H  <span class="hljs-number">1.00784</span>  H.upf<br><br>ATOMIC_POSITIONS angstrom<br>C             <span class="hljs-number">5</span>.<span class="hljs-number">6349072530</span>        <span class="hljs-number">6</span>.<span class="hljs-number">3219732663</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br>C             <span class="hljs-number">6</span>.<span class="hljs-number">8471064692</span>        <span class="hljs-number">8</span>.<span class="hljs-number">4203756088</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br>C             <span class="hljs-number">8</span>.<span class="hljs-number">0590688968</span>        <span class="hljs-number">7</span>.<span class="hljs-number">7208084975</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br>C             <span class="hljs-number">8</span>.<span class="hljs-number">0589783279</span>        <span class="hljs-number">6</span>.<span class="hljs-number">3217775219</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>   <br>C             <span class="hljs-number">6</span>.<span class="hljs-number">8468944163</span>        <span class="hljs-number">5</span>.<span class="hljs-number">6223943554</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br>C             <span class="hljs-number">5</span>.<span class="hljs-number">6350162132</span>        <span class="hljs-number">7</span>.<span class="hljs-number">7210074050</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br>H             <span class="hljs-number">6</span>.<span class="hljs-number">8472239652</span>        <span class="hljs-number">9</span>.<span class="hljs-number">5241227823</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>   <br>H             <span class="hljs-number">9</span>.<span class="hljs-number">0149595312</span>        <span class="hljs-number">8</span>.<span class="hljs-number">2725861346</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br>H             <span class="hljs-number">9</span>.<span class="hljs-number">0148270307</span>        <span class="hljs-number">5</span>.<span class="hljs-number">7699205361</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br>H             <span class="hljs-number">6</span>.<span class="hljs-number">8468186394</span>        <span class="hljs-number">4</span>.<span class="hljs-number">5186488926</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br>H             <span class="hljs-number">4</span>.<span class="hljs-number">6789926355</span>        <span class="hljs-number">5</span>.<span class="hljs-number">7702489027</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br>H             <span class="hljs-number">4.6792066205</span>        <span class="hljs-number">8</span>.<span class="hljs-number">2729360977</span>        <span class="hljs-number">5</span>.<span class="hljs-number">0000000000</span>    <br><br>K_POINTS gamma<br></code></pre></td></tr></table></figure><h3 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a>STEP 3</h3><p>TDDFT calculations. </p><p>Input file: C6H6.2_tl.in</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta">&amp;LR_INPUT</span><br>  prefix = &#x27;C6H6&#x27;<br>  outdir = &#x27;./outdir&#x27;<br>/<br><br><span class="hljs-meta">&amp;LR_CONTROL</span><br>  itermax = <span class="hljs-number">500</span> <br>  ipol = <span class="hljs-number">4</span> <br>/<br></code></pre></td></tr></table></figure><p><em>New tags:</em></p><ol><li><code>itermax</code>: Number of Lanczos iterations to be performed.</li><li><code>ipol</code>： Determines the number of zeta coefficients to be calculated<br>for a given polarization direction. 1 = x; 2 = y; 3 = z; 4 = x,y,z</li></ol><p>Then we use <code>yhbatch -N 1 -n 24 -p bigdata ./qe.sh turbo_lanczos.x</code></p><h3 id="STEP-4"><a href="#STEP-4" class="headerlink" title="STEP 4"></a>STEP 4</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nix">&amp;LR_INPUT<br>  <span class="hljs-attr">prefix</span> = &#x27;C6H6&#x27;<br>  <span class="hljs-attr">outdir</span> = &#x27;./outdir&#x27;<br>  <span class="hljs-attr">itermax0</span> = <span class="hljs-number">500</span><br>  <span class="hljs-attr">itermax</span> = <span class="hljs-number">10000</span><br>  <span class="hljs-attr">extrapolation</span> = &#x27;osc&#x27;<br>  <span class="hljs-attr">epsil</span> = <span class="hljs-number">0.01</span><br>  <span class="hljs-attr">units</span> = <span class="hljs-number">1</span><br>  <span class="hljs-attr">start</span> = <span class="hljs-number">0.0</span><br>  <span class="hljs-attr">end</span> = <span class="hljs-number">50.0</span><br>  <span class="hljs-attr">increment</span> = <span class="hljs-number">0.01</span><br>  <span class="hljs-attr">ipol</span> = <span class="hljs-number">4</span><br>/<br></code></pre></td></tr></table></figure><p><em>New Tags</em>:</p><ol><li><code>itermax0</code>: Number of Lanczos coefficients to be read from the file. (Same with that of <code>itermax</code> in STEP 3)</li><li><code>itermax</code>: The total number of Lanczos coefficients that will be considered in the calculation of the polarizability/absorption coefficient. If itermax &gt; itermax0, the Lanczos coefficients in between itermax0+1 and itermax will be extrapolated.</li><li><code>extrapolation</code>: Sets the extrapolation scheme. ‘osc’ = biconstant extrapolation, ‘constant’ = constant extrapolation and ‘no’ = no extrapolation.</li><li><code>epsil</code>: The broadening/damping term (in Rydberg units).</li><li><code>units</code>：  The unit system used for the output and the start, end and increment input parameters.<figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>= Rydbergs, <span class="hljs-number">1</span> = Electron volts <span class="hljs-keyword">and</span> <span class="hljs-number">2</span> = Nanometres per electron volts.<br></code></pre></td></tr></table></figure></li><li><code>start/end</code>: The polarizability and the absorption coefficient are computed starting from (/up to) this value. </li><li><code>increment</code>: Incremental step used to define the mesh between start and end. </li><li>For the unit, the <code>start/end/increment</code> tag use the <code>units</code> set.</li></ol><p>Then we use <code>yhbatch -N 1 -n 24 -p bigdata ./qe.sh turbo_spectrum.x</code></p><p>We plot the <code>C6H6.plot_S.data</code> file: </p><p><img src="/Users/chen/blog_hexo/source/_posts/Lightabsorp.png"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-12</title>
    <link href="/2020/11/11/QE_12/"/>
    <url>/2020/11/11/QE_12/</url>
    
    <content type="html"><![CDATA[<p>Calculation of non-collinear $\alpha-Fe$. </p><span id="more"></span><p>Here is the Input file:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;scf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;fe&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=3, celldm(1) =5.095843399, <br>    <span class="hljs-attribute">nat</span>=1, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>,smearing=&#x27;marzari-vanderbilt&#x27;,degauss=0.01<br>    noncolin = .<span class="hljs-literal">true</span>.<br>    starting_magnetization(1) = 0.1<br>    angle1(1) = 90.0<br>    angle2(1) = 0.0 <br>    ! Here the spin is along x direction, but <span class="hljs-keyword">in</span> cubic system, x =y =z;<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>    mixing_beta = 0.3<br>/<br>ATOMIC_SPECIES<br> Fe  55.845  Fe.pbe-spn-kjpaw_psl.0.2.1.UPF<br>ATOMIC_POSITIONS (alat)<br> Fe 0.00 0.00 0.00<br>K_POINTS (automatic)<br>  10 10 10 0 0 0<br></code></pre></td></tr></table></figure><p><em>New Tags</em>:</p><ol><li><code>noncolin = .true.</code>: no need to set <code>nspin</code></li><li><code>angle1(1)</code>: the angle with respect to <em>z</em>-axis</li><li><code>angle2(1)</code>: the angle between the project spin in <em>xy</em>-plane and the <em>x</em>-axis</li><li><code>mixing_beta</code>: decrease <code>mixing_beta</code> can increase the convergence, however slower. </li></ol><p>Also, we use the <code>pw.x</code>. (This is different with VASP.)</p><p>Below is part of output file:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-code">    total magnetization       =     1.93     0.00     0.00 Bohr mag/cell</span><br><span class="hljs-code">    absolute magnetization    =     2.01 Bohr mag/cell</span><br><br><span class="hljs-code">    iteration # 10     ecut=    40.00 Ry     beta= 0.30</span><br><span class="hljs-code">    Davidson diagonalization with overlap</span><br><span class="hljs-code">    ethr =  4.86E-10,  avg # of iterations =  2.0</span><br><br>==============================================================================<br><span class="hljs-code">    atom number    1 relative position :    0.0000   0.0000   0.0000</span><br><span class="hljs-code">    charge :    14.301163</span><br><span class="hljs-code">    magnetization :          1.953124   -0.000000    0.000000</span><br><span class="hljs-code">    magnetization/charge:    0.136571   -0.000000    0.000000</span><br><span class="hljs-code">    polar coord.: r, theta, phi [deg] :     1.953124   90.000000    0.000000</span><br><br>==============================================================================<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-11</title>
    <link href="/2020/11/11/QE_11/"/>
    <url>/2020/11/11/QE_11/</url>
    
    <content type="html"><![CDATA[<p>Calculation of spin-polarized $\alpha-Fe$. </p><span id="more"></span><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><p>First, we perform the optimization of lattice constant. </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;vc-relax&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;fe&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>    etot_conv_thr = 1e-6<br>    forc_conv_thr = 1e-5<br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=3, celldm(1) =5.416911045, <br>    <span class="hljs-attribute">nat</span>=1, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>,smearing=&#x27;marzari-vanderbilt&#x27;,degauss=0.01<br>    nspin = 2<br>    starting_magnetization(1)=0.1<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>&amp;ions<br>/<br>&amp;cell<br>    <span class="hljs-attribute">cell_dofree</span>=<span class="hljs-string">&#x27;ibrav&#x27;</span><br>/<br>ATOMIC_SPECIES<br> Fe  55.845  Fe.pbe-spn-kjpaw_psl.0.2.1.UPF<br>ATOMIC_POSITIONS (alat)<br> Fe 0.00 0.00 0.00<br>K_POINTS (automatic)<br>  8 8 8 0 0 0<br></code></pre></td></tr></table></figure><p>New tags:</p><ol><li><code>ibrav=3</code>: corresponding to body center cubic. </li><li><code>nspin=2</code>: collinear spin polarized.</li><li><code>starting_magnetization(1)=0.1</code>: the origin M of first type atom is set to be 0.1 $\mu_{B}$.</li></ol><p>And we can find below in the output. </p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dns">Begin final coordinates<br>     new unit-cell volume =     <span class="hljs-number">66.16346</span> a.u.^<span class="hljs-number">3</span> (     <span class="hljs-number">9.80441</span> Ang^<span class="hljs-number">3</span> )<br>     density =      <span class="hljs-number">9.45827</span> g/cm^<span class="hljs-number">3</span><br><br>CELL_PARAMETERS (alat=  <span class="hljs-number">5.41691104</span>)<br>   <span class="hljs-number">0</span>.<span class="hljs-number">470364324</span>   <span class="hljs-number">0</span>.<span class="hljs-number">470364324</span>   <span class="hljs-number">0</span>.<span class="hljs-number">470364324</span><br>  -<span class="hljs-number">0</span>.<span class="hljs-number">470364324</span>   <span class="hljs-number">0</span>.<span class="hljs-number">470364324</span>   <span class="hljs-number">0</span>.<span class="hljs-number">470364324</span><br>  -<span class="hljs-number">0</span>.<span class="hljs-number">470364324</span>  -<span class="hljs-number">0</span>.<span class="hljs-number">470364324</span>   <span class="hljs-number">0</span>.<span class="hljs-number">470364324</span><br><br>ATOMIC_POSITIONS (alat)<br>Fe            <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span><br>End final coordinates<br></code></pre></td></tr></table></figure><p>The optimized lattice constant is 5.0958 Bohr ( 5.4169 in ref). </p><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><p>Do the scf.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;scf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;fe&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=3, celldm(1) =5.095843399, <br>    <span class="hljs-attribute">nat</span>=1, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>,smearing=&#x27;marzari-vanderbilt&#x27;,degauss=0.01<br>    nspin = 2<br>    starting_magnetization(1)=0.1<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Fe  55.845  Fe.pbe-spn-kjpaw_psl.0.2.1.UPF<br>ATOMIC_POSITIONS (alat)<br> Fe 0.00 0.00 0.00<br>K_POINTS (automatic)<br>  10 10 10 0 0 0<br></code></pre></td></tr></table></figure><p>In the output, the magnetic moment is obtained. </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Magnetic</span> moment per site:<br><span class="hljs-attribute">atom</span>:    <span class="hljs-number">1</span>    charge:   <span class="hljs-number">14</span>.<span class="hljs-number">3011</span>    magn:    <span class="hljs-number">1</span>.<span class="hljs-number">9522</span>    constr:    <span class="hljs-number">0</span>.<span class="hljs-number">0000</span><br></code></pre></td></tr></table></figure><p>Besides, we can find the range of the band (energy). </p><h3 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a>STEP 3</h3><p>Do the nscf. </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;nscf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;fe&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=3, celldm(1) =5.09578335795351, <br>    <span class="hljs-attribute">nat</span>=1, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>,smearing=&#x27;marzari-vanderbilt&#x27;,degauss=0.01<br>    nspin = 2<br>    starting_magnetization(1)=0.1<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Fe  55.845  Fe.pbe-spn-kjpaw_psl.0.2.1.UPF<br>ATOMIC_POSITIONS (alat)<br> Fe 0.00 0.00 0.00<br>K_POINTS (automatic)<br> 20 20 20 0 0 0<br></code></pre></td></tr></table></figure><h3 id="STEP-4"><a href="#STEP-4" class="headerlink" title="STEP 4"></a>STEP 4</h3><p>Calculate the density of states.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;DOS<br>    <span class="hljs-attribute">prefix</span>=<span class="hljs-string">&#x27;fe&#x27;</span><br>    <span class="hljs-attribute">outdir</span>=<span class="hljs-string">&#x27;./outdir/&#x27;</span><br>    <span class="hljs-attribute">fildos</span>=<span class="hljs-string">&#x27;fe.dos.dat&#x27;</span><br>    <span class="hljs-attribute">emin</span>=-65<br>    <span class="hljs-attribute">emax</span>=50<br>/<br></code></pre></td></tr></table></figure><p><img src="/Users/chen/blog_hexo/source/_posts/Fedos.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-10</title>
    <link href="/2020/11/10/QE_10/"/>
    <url>/2020/11/10/QE_10/</url>
    
    <content type="html"><![CDATA[<p>Calculation of metal, <em>e.g.</em>, Al-pdos. </p><span id="more"></span><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><p>Also, the scf.  </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;scf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;al&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=1, celldm(1) =7.631664366184, <br>    <span class="hljs-attribute">nat</span>=4, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>,smearing=&#x27;gaussian&#x27;,degauss=0.01<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Al  26.981539  Al.pbe-n-kjpaw_psl.1.0.0.UPF<br>ATOMIC_POSITIONS (alat)<br> Al 0.00 0.00 0.00<br> Al 0.50 0.00 0.50<br> Al 0.50 0.50 0.00<br> Al 0.00 0.50 0.50<br>K_POINTS (automatic)<br>  10 10 10 0 0 0<br></code></pre></td></tr></table></figure><h3 id="STEP2"><a href="#STEP2" class="headerlink" title="STEP2"></a>STEP2</h3><p>Also, the more dense k-mesh for nscf.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;nscf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;al&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=1, celldm(1) =7.631664366184, <br>    <span class="hljs-attribute">nat</span>=4, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>,smearing=&#x27;gaussian&#x27;,degauss=0.01<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Al  26.981539  Al.pbe-n-kjpaw_psl.1.0.0.UPF<br>ATOMIC_POSITIONS (alat)<br> Al 0.00 0.00 0.00<br> Al 0.50 0.00 0.50<br> Al 0.50 0.50 0.00<br> Al 0.00 0.50 0.50<br>K_POINTS (automatic)<br>  20 20 20 0 0 0<br></code></pre></td></tr></table></figure><h3 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a>STEP 3</h3><p>Here we perform the projected dos using <code>projwfc.x</code>. </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;projwfc<br>    <span class="hljs-attribute">prefix</span>=<span class="hljs-string">&#x27;al&#x27;</span><br>    <span class="hljs-attribute">outdir</span>=<span class="hljs-string">&#x27;./outdir/&#x27;</span><br>    lwrite_overlaps = .<span class="hljs-literal">true</span>.<br>    <span class="hljs-attribute">filpdos</span>=<span class="hljs-string">&#x27;al.pdos.dat&#x27;</span><br>    <span class="hljs-attribute">emin</span>=-15<br>    <span class="hljs-attribute">emax</span>=35<br>/<br></code></pre></td></tr></table></figure><p>And we will see many files named <code>al.pdos.dat.pdos_atm#...</code>. </p><p>We can use the <code>sumpdos.x</code> to get the element resolved dos. </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">yhrun <span class="hljs-regexp">/BIGDATA1/</span>app<span class="hljs-regexp">/Quantum_Espresso/</span><span class="hljs-number">6.5</span>-icc-<span class="hljs-number">18</span><span class="hljs-regexp">/bin/</span>sumpdos.x al.pdos.dat.pdos_atm<span class="hljs-comment">#*\(Al\)* &gt; atom_Al_tot.dat</span><br>yhrun <span class="hljs-regexp">/BIGDATA1/</span>app<span class="hljs-regexp">/Quantum_Espresso/</span><span class="hljs-number">6.5</span>-icc-<span class="hljs-number">18</span><span class="hljs-regexp">/bin/</span>sumpdos.x al.pdos.dat.pdos_atm<span class="hljs-comment">#*\(Al\)*\(s\) &gt; atom_Al_s.dat</span><br>yhrun <span class="hljs-regexp">/BIGDATA1/</span>app<span class="hljs-regexp">/Quantum_Espresso/</span><span class="hljs-number">6.5</span>-icc-<span class="hljs-number">18</span><span class="hljs-regexp">/bin/</span>sumpdos.x al.pdos.dat.pdos_atm<span class="hljs-comment">#*\(Al\)*\(p\) &gt; atom_Al_p.dat</span><br></code></pre></td></tr></table></figure><p>For more details about output file, you can visit <a href="http://www.quantum-espresso.org/Doc/INPUT_PROJWFC.html">here</a>. </p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-09</title>
    <link href="/2020/11/10/QE_09/"/>
    <url>/2020/11/10/QE_09/</url>
    
    <content type="html"><![CDATA[<p>Calculation of metal, <em>e.g.</em>, Al. </p><span id="more"></span><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><p>Optimization of lattice constant.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;vc-relax&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;al&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>    etot_conv_thr = 1e-6<br>    forc_conv_thr = 1e-5<br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =7.652, <br>    <span class="hljs-attribute">nat</span>=1, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>,smearing=&#x27;gaussian&#x27;,degauss=0.01<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>&amp;ions<br>/<br>&amp;cell<br>    <span class="hljs-attribute">cell_dofree</span>=<span class="hljs-string">&#x27;ibrav&#x27;</span><br>/<br>ATOMIC_SPECIES<br> Al  26.981539  Al.pbe-n-kjpaw_psl.1.0.0.UPF<br>ATOMIC_POSITIONS (alat)<br> Al 0.00 0.00 0.00<br>K_POINTS (automatic)<br>  10 10 10 0 0 0<br></code></pre></td></tr></table></figure><p><strong>Notes</strong>: </p><ol><li><code>ecutrho</code> is the energy cutoff for charge density, which is in default 4 times of <code>ecutwfc</code>. </li><li><code>smearing</code> is necessary to avoid the oscillaion, which is harmful to the convergence. </li></ol><p>And you can find the final structure in the .out file.</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dns">Begin final coordinates<br>     new unit-cell volume =    <span class="hljs-number">111.12142</span> a.u.^<span class="hljs-number">3</span> (    <span class="hljs-number">16.46650</span> Ang^<span class="hljs-number">3</span> )<br>     density =      <span class="hljs-number">2.72091</span> g/cm^<span class="hljs-number">3</span><br><br>CELL_PARAMETERS (alat=  <span class="hljs-number">7.65200000</span>)<br>  -<span class="hljs-number">0.498671221</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0.498671221</span><br>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0.498671221</span>   <span class="hljs-number">0.498671221</span><br>  -<span class="hljs-number">0.498671221</span>   <span class="hljs-number">0.498671221</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br><br>ATOMIC_POSITIONS (alat)<br>Al            <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span><br>End final coordinates<br></code></pre></td></tr></table></figure><p>The density of fcc Al is 2.72091 $g/cm^{3}$ (which is 2.7 in ref), and the lattice constant is 7.63166 $Bohr$ (7.652 in ref). </p><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><p>Self-consistent calculations to obtain the wfc.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;scf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;al&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =7.631664366184, <br>    <span class="hljs-attribute">nat</span>=1, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>,smearing=&#x27;gaussian&#x27;,degauss=0.01<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Al  26.981539  Al.pbe-n-kjpaw_psl.1.0.0.UPF<br>ATOMIC_POSITIONS (alat)<br> Al 0.00 0.00 0.00<br>K_POINTS (automatic)<br>  10 10 10 0 0 0<br></code></pre></td></tr></table></figure><h3 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a>STEP 3</h3><p>The k-point interpolation method to obtain dos. (enough dense k-grid)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;nscf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;al&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =7.631664366184, <br>    <span class="hljs-attribute">nat</span>=1, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>,smearing=&#x27;gaussian&#x27;,degauss=0.01<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Al  26.981539  Al.pbe-n-kjpaw_psl.1.0.0.UPF<br>ATOMIC_POSITIONS (alat)<br> Al 0.00 0.00 0.00<br>K_POINTS (automatic)<br> 30 30 30 0 0 0<br></code></pre></td></tr></table></figure><h3 id="STEP-4"><a href="#STEP-4" class="headerlink" title="STEP 4"></a>STEP 4</h3><p>Use the <code>dos.x</code> to obtain density of states. </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;DOS<br>    <span class="hljs-attribute">prefix</span>=<span class="hljs-string">&#x27;al&#x27;</span><br>    <span class="hljs-attribute">outdir</span>=<span class="hljs-string">&#x27;./outdir/&#x27;</span><br>    <span class="hljs-attribute">fildos</span>=<span class="hljs-string">&#x27;al.dos.dat&#x27;</span><br>    <span class="hljs-attribute">emin</span>=-15<br>    <span class="hljs-attribute">emax</span>=35<br>/<br></code></pre></td></tr></table></figure><p>And below is the dos of Al. </p><p><img src="/Users/chen/blog_hexo/source/_posts/Aldos.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-08</title>
    <link href="/2020/11/10/QE_08/"/>
    <url>/2020/11/10/QE_08/</url>
    
    <content type="html"><![CDATA[<p>下面以NH3为例，计算NEB (umbrella inversion barrier)</p><span id="more"></span><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;relax&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;nh3&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>    etot_conv_thr = 1e-6<br>    forc_conv_thr = 1e-5<br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=1, celldm(1) =10, <br>    <span class="hljs-attribute">nat</span>=4, <span class="hljs-attribute">ntyp</span>=2,<br>    <span class="hljs-attribute">ecutwfc</span>=50<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>&amp;ions<br>/<br>ATOMIC_SPECIES<br> N  14.0067  N.pbe-n-radius_5.UPF<br> H  1.00784  H.pbe-rrkjus_psl.1.0.0.UPF<br><br>ATOMIC_POSITIONS (angstrom)<br> N 0.0000 0.0000 0.379 0 0 1<br> H 0.4380 0.8250 0.000 1 1 0<br> H 0.4950 -0.792 0.000 1 1 0<br> H -0.934 -0.033 0.000 1 1 0<br>K_POINTS (automatic)<br>  1 1 1 0 0 0<br></code></pre></td></tr></table></figure><p>use <code>pw.x</code> to relax the ions. </p><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs dns">BEGIN<br>BEGIN_PATH_INPUT<br>&amp;PATH<br>  restart_mode      = &#x27;from_scratch&#x27;<br>  string_method     = &#x27;neb&#x27;,<br>  nstep_path        = <span class="hljs-number">50</span>,<br>  ds                = <span class="hljs-number">1</span>.D0,<br>  opt_scheme        = &quot;broyden&quot;,<br>  num_of_images     = <span class="hljs-number">12</span>,<br>  CI_scheme         = &quot;no-CI&quot;,<br>  path_thr          = <span class="hljs-number">0</span>.<span class="hljs-number">05</span>D0,<br>/<br>END_PATH_INPUT<br>BEGIN_ENGINE_INPUT<br>&amp;CONTROL<br>  prefix         = &quot;nh3.<span class="hljs-number">2</span>&quot;<br>  outdir         = &quot;./outdir&quot;,<br>  pseudo_dir = &#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;<br>  ! pseudo_dir     = &quot;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&quot;,<br>/<br>&amp;SYSTEM<br>  ibrav                  = <span class="hljs-number">1</span>,<br>  celldm(<span class="hljs-number">1</span>)              = <span class="hljs-number">10</span>, <br>  nat                    = <span class="hljs-number">4</span>,<br>  ntyp                   = <span class="hljs-number">2</span>,<br>  ecutwfc                = <span class="hljs-number">50</span>,<br>/<br>&amp;ELECTRONS<br>  conv_thr    = <span class="hljs-number">1</span>.D-<span class="hljs-number">8</span>,<br>/<br>&amp;IONS<br>/<br>ATOMIC_SPECIES<br> N  <span class="hljs-number">14</span>.<span class="hljs-number">0067</span>  N.pbe-n-radius_5.UPF<br> H  <span class="hljs-number">1.00784</span>  H.pbe-rrkjus_psl.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.UPF<br>BEGIN_POSITIONS<br>FIRST_IMAGE<br>ATOMIC_POSITIONS (angstrom)<br>N        <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">393388867</span>    <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">1</span><br>H        <span class="hljs-number">0.242745664</span>   <span class="hljs-number">0.905006184</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br>H        <span class="hljs-number">0</span>.<span class="hljs-number">662743889</span>  -<span class="hljs-number">0</span>.<span class="hljs-number">663017048</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br>H       -<span class="hljs-number">0</span>.<span class="hljs-number">905089034</span>  -<span class="hljs-number">0.242454521</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br>LAST_IMAGE<br>ATOMIC_POSITIONS (angstrom)<br>N        <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   -<span class="hljs-number">0</span>.<span class="hljs-number">393388867</span>    <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">1</span><br>H        <span class="hljs-number">0.242745664</span>   <span class="hljs-number">0.905006184</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br>H        <span class="hljs-number">0</span>.<span class="hljs-number">662743889</span>  -<span class="hljs-number">0</span>.<span class="hljs-number">663017048</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br>H       -<span class="hljs-number">0</span>.<span class="hljs-number">905089034</span>  -<span class="hljs-number">0.242454521</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span><br>END_POSITIONS<br>K_POINTS (automatic)<br> <span class="hljs-number">1 1 1 0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br>END_ENGINE_INPUT<br>END<br></code></pre></td></tr></table></figure><p><strong>Note</strong>: The first image is the structure file from relaxed output and the last image is the inverted relaxed output. </p><p>use <code>neb.x</code>. </p><p><strong>Hint</strong> (This is different from other package before.)</p><p><code>yhrun -N 1 -n 2 /BIGDATA1/app/Quantum_Espresso/6.5-icc-18/bin/neb.x -inp nh3.2_neb.in &gt; nh3.2_neb.out</code></p><p><em>OR</em> change the qe.sh as </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">export</span> PATH=/BIGDATA1/app/Quantum_Espresso/6.5-icc-18/bin/:<span class="hljs-variable">$PATH</span><br>yhrun -N <span class="hljs-variable">$SLURM_NNODES</span> -n <span class="hljs-variable">$SLURM_NTASKS</span> <span class="hljs-variable">$1</span> -inp nh3.2_neb.in &gt;&amp; nh3.2_neb.out<br></code></pre></td></tr></table></figure><p>and then <code>yhbatch -N 1 -n 24 -p bigdata ./qe.sh neb.x</code></p><p>Then we can find <code>activation energy (-&gt;) =   0.237019 eV</code> in the <code>nh3.2_neb.out</code>, which is the inversion energy barrier. </p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-07</title>
    <link href="/2020/11/10/QE_07/"/>
    <url>/2020/11/10/QE_07/</url>
    
    <content type="html"><![CDATA[<p>下面以Si为例，DFPT计算声子谱。</p><span id="more"></span><p>This procedure is similar with that in previous article. The difference is in <strong>STEP 4</strong>.</p><p>calculation of phonon frequency at any given list of q-vectors (to get DOS or dispersion)</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs dns">&amp;input<br>  asr = &#x27;simple&#x27;<br>  amass(<span class="hljs-number">1</span>) = <span class="hljs-number">28</span>.<span class="hljs-number">0855</span><br>  flfrc = &#x27;si.k444.fc&#x27;<br>  flfrq = &#x27;si.freq&#x27;<br>  q_in_band_form = .true.<br>  q_in_cryst_coord = .true.<br>/<br><span class="hljs-number">5</span><br>  <span class="hljs-number">0.0000 0</span>.<span class="hljs-number">0000</span> <span class="hljs-number">0.0000 30</span> !Gamma<br>  -<span class="hljs-number">0.500 0</span>.<span class="hljs-number">0000</span> -<span class="hljs-number">0.500 10</span> !X<br>  <span class="hljs-number">0.0000 0</span>.<span class="hljs-number">3750</span> -<span class="hljs-number">0.375 20</span> !K<br>  <span class="hljs-number">0.0000 0</span>.<span class="hljs-number">0000</span> <span class="hljs-number">0.0000 30</span> !Gamma<br>  <span class="hljs-number">0.0000 0</span>.<span class="hljs-number">5000</span> <span class="hljs-number">0.0000 1</span> !L<br></code></pre></td></tr></table></figure><p>Also, <code>matdyn.x si.4_matdyn_2_dispersion.in</code></p><h3 id="STEP-5"><a href="#STEP-5" class="headerlink" title="STEP 5"></a>STEP 5</h3><p>use <code>plotband.x</code> to obtain the data of <code>si.freq</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">si.freq<br><span class="hljs-number">0</span> <span class="hljs-number">550</span><br>si<span class="hljs-selector-class">.phonon</span><span class="hljs-selector-class">.bands</span>.xmgr<br>si<span class="hljs-selector-class">.phonon</span><span class="hljs-selector-class">.bands</span>.ps<br><span class="hljs-number">0</span><br><span class="hljs-number">50</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p><img src="/Users/chen/blog_hexo/source/_posts/PhonDisp.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-06</title>
    <link href="/2020/11/08/QE_06/"/>
    <url>/2020/11/08/QE_06/</url>
    
    <content type="html"><![CDATA[<p>下面以Si为例，DFPT计算声子态密度。</p><span id="more"></span><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><p><code>pw.x si.1_scf.in</code></p><p>The input file is the same with <strong>STEP 1</strong> in QE_05.</p><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><p>Calculations of dynamical matrices on q-vector in reciprocal space.<br><code>ph.x si.2_ph.in</code></p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs nix">phonon calculation.<br>&amp;inputph<br>  <span class="hljs-attr">outdir</span> = &#x27;./outdir&#x27;<br>  <span class="hljs-attr">prefix</span> = &#x27;si&#x27;,<br>  <span class="hljs-attr">tr2_ph</span> = <span class="hljs-number">1.0</span>d-<span class="hljs-number">14</span><br>  <span class="hljs-attr">ldisp</span> = .<span class="hljs-literal">true</span>.<br>  amass(<span class="hljs-number">1</span>) = <span class="hljs-number">28.0855</span><br>  <span class="hljs-attr">nq1</span> = <span class="hljs-number">4</span>, <span class="hljs-attr">nq2</span> = <span class="hljs-number">4</span>, <span class="hljs-attr">nq3</span> = <span class="hljs-number">4</span><br>  <span class="hljs-attr">fildyn</span> = &#x27;si.dyn&#x27;<br>/<br></code></pre></td></tr></table></figure><h3 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a>STEP 3</h3><p>calculation of interatomic force constants in real space (Fourier transform of the output from <strong>STEP 2</strong>)<br><code>q2r.x si.3_q2r.in</code></p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sml">&amp;input<br>  fildyn = <span class="hljs-symbol">&#x27;si</span>.dyn&#x27;<br>  zasr = <span class="hljs-symbol">&#x27;simple&#x27;</span><br>  flfrc = <span class="hljs-symbol">&#x27;si</span>.k444.fc&#x27;<br>/<br></code></pre></td></tr></table></figure><h3 id="STEP-4"><a href="#STEP-4" class="headerlink" title="STEP 4"></a>STEP 4</h3><p>calculation of phonon frequency at any given list of q-vectors (to get DOS or dispersion)</p><p><code>matdyn.x si.4_matdyn_1_DOS.in</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;input<br>  asr = <span class="hljs-string">&#x27;simple&#x27;</span><br>  dos = .<span class="hljs-literal">true</span>.<br>  amass(1) = 28.0855<br>  flfrc = <span class="hljs-string">&#x27;si.k444.fc&#x27;</span><br>  fldos = <span class="hljs-string">&#x27;si.phdos&#x27;</span><br>  <span class="hljs-attribute">nk1</span>=50, <span class="hljs-attribute">nk2</span>=50, <span class="hljs-attribute">nk3</span>=50<br>/<br></code></pre></td></tr></table></figure><p>After this step, the si.phdos is obtained and we can plot this. </p><h3 id="STEP-5"><a href="#STEP-5" class="headerlink" title="STEP 5"></a>STEP 5</h3><p><code>gnuplot &#39;si.5_plot_dos.gnu&#39;</code></p><p><img src="/Users/chen/blog_hexo/source/_posts/PhonDos.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-05</title>
    <link href="/2020/11/08/QE_05/"/>
    <url>/2020/11/08/QE_05/</url>
    
    <content type="html"><![CDATA[<p>下面以Si为例，DFPT计算Gamma点声子谱。</p><span id="more"></span><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><p>依旧是pw.x进行自洽</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;scf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;si&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =10.410909236, <br>    <span class="hljs-attribute">nat</span>=2, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=50<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-10<br>/<br>ATOMIC_SPECIES<br> Si  28.0855  Si.pbe-n-rrkjus_psl.1.0.0.UPF<br><br>ATOMIC_POSITIONS (alat)<br> Si 0.00 0.00 0.00<br> Si 0.25 0.25 0.25<br>K_POINTS (automatic)<br>  6 6 6 1 1 1<br></code></pre></td></tr></table></figure><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs nix">phonon calculation at Gamma point.<br>&amp;inputph<br>  <span class="hljs-attr">outdir</span> = &#x27;./outdir&#x27;<br>  <span class="hljs-attr">prefix</span> = &#x27;si&#x27;,<br>  <span class="hljs-attr">tr2_ph</span> = <span class="hljs-number">1.0</span>d-<span class="hljs-number">14</span><br>  <span class="hljs-attr">epsil</span> = .<span class="hljs-literal">true</span>. !仅Gamma点时ture，用于计算介电常数<br>  amass(<span class="hljs-number">1</span>) = <span class="hljs-number">28.0855</span><br>  <span class="hljs-attr">fildyn</span> = &#x27;si.dyn&#x27;<br>/<br><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>Use <strong>ph.x</strong> to calculate. </p><p><strong>TH-2的6.7有bug，换成6.5计算</strong>(STEP1就用6.5重新计算)<br>qe.sh如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">export</span> PATH=/BIGDATA1/app/Quantum_Espresso/6.5-icc-18/bin/:<span class="hljs-variable">$PATH</span><br>yhrun -N <span class="hljs-variable">$SLURM_NNODES</span> -n <span class="hljs-variable">$SLURM_NTASKS</span> <span class="hljs-variable">$1</span> &lt; si.2_ph.in &gt;&amp; si.2_ph.out<br></code></pre></td></tr></table></figure><p>output: </p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">Dielectric constant in cartesian axis <br><br>(      <span class="hljs-number">13.220442521</span>      -<span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>      -<span class="hljs-number">0</span>.<span class="hljs-number">000000000</span> )<br>(      -<span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>      <span class="hljs-number">13.220442521</span>      -<span class="hljs-number">0</span>.<span class="hljs-number">000000000</span> )<br>(      -<span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>      -<span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>      <span class="hljs-number">13.220442521</span> )<br></code></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs perl">fre<span class="hljs-string">q (    1)</span> =      -<span class="hljs-number">0</span>.<span class="hljs-number">574103</span> [THz] =     -<span class="hljs-number">19.150028</span> [cm-<span class="hljs-number">1</span>]<br>fre<span class="hljs-string">q (    2)</span> =      -<span class="hljs-number">0</span>.<span class="hljs-number">574103</span> [THz] =     -<span class="hljs-number">19.150028</span> [cm-<span class="hljs-number">1</span>]<br>fre<span class="hljs-string">q (    3)</span> =      -<span class="hljs-number">0</span>.<span class="hljs-number">574103</span> [THz] =     -<span class="hljs-number">19.150028</span> [cm-<span class="hljs-number">1</span>]<br>fre<span class="hljs-string">q (    4)</span> =      <span class="hljs-number">14.762433</span> [THz] =     <span class="hljs-number">492.421761</span> [cm-<span class="hljs-number">1</span>]<br>fre<span class="hljs-string">q (    5)</span> =      <span class="hljs-number">14.762433</span> [THz] =     <span class="hljs-number">492.421761</span> [cm-<span class="hljs-number">1</span>]<br>fre<span class="hljs-string">q (    6)</span> =      <span class="hljs-number">14.762433</span> [THz] =     <span class="hljs-number">492.421761</span> [cm-<span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><p>Then the dielectric constant is 13.220442521 (11.7 in ref), the first order Raman peak ($cm^{-1}$) is 492.421761 (520 in ref)</p><p>From symmetry analysis, there are six modes around $\Gamma$ point (including two TA, one LA, two TO, one LO). </p><p>The first order Raman peak is the optical mode at $\Gamma$ point. (inelastic process involving emission of phonon or absorption of phonon), which is k-negligible. </p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-04</title>
    <link href="/2020/11/08/QE_04/"/>
    <url>/2020/11/08/QE_04/</url>
    
    <content type="html"><![CDATA[<p>下面以Si晶体为例，计算能带结构。</p><span id="more"></span><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;scf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;si&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =10.410909236, <br>    <span class="hljs-attribute">nat</span>=2, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">nbnd</span>=8<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;smearing&#x27;</span>, <span class="hljs-attribute">smearing</span>=<span class="hljs-string">&#x27;gaussian&#x27;</span>,degauss=0.005<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Si  28.0855  Si.pbe-n-rrkjus_psl.1.0.0.UPF<br><br>ATOMIC_POSITIONS (alat)<br> Si 0.00 0.00 0.00<br> Si 0.25 0.25 0.25<br>K_POINTS (automatic)<br>  8 8 8 0 0 0<br></code></pre></td></tr></table></figure><p>In <code>si.0_scf.out</code>, we can get the LUMO and HOMO:<br><code>highest occupied, lowest unoccupied level (ev):     5.7618    6.4467</code><br>(not very dense k-mesh)</p><p>We need to add the smearing as the $E_{f}$ can be everywhere in the gap. (However, in this way, we cannot get the HOMO and LUMO.)<br><code>the Fermi energy is     6.1499 ev</code></p><p>However, we do not use the smearing in <strong>STEP 1</strong>.</p><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;nscf&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;si&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span>    <br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =10.410909236, <br>    <span class="hljs-attribute">nat</span>=2, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;tetrahedra&#x27;</span><br>    <span class="hljs-attribute">nbnd</span>=8<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Si  28.0855  Si.pbe-n-rrkjus_psl.1.0.0.UPF<br><br>ATOMIC_POSITIONS (alat)<br> Si 0.00 0.00 0.00<br> Si 0.25 0.25 0.25<br>K_POINTS (automatic)<br>  12 12 12 0 0 0<br></code></pre></td></tr></table></figure><p>And we get the Fermi energy again.<br><code>the Fermi energy is     6.1330 ev</code></p><h3 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a>STEP 3</h3><p>Cal the band structure with pw.x</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;bands&#x27;</span><br>    <span class="hljs-attribute">restart_mode</span>=<span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;si&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span>    <br>    ! pseudo_dir = <span class="hljs-string">&#x27;/home/anonymous/quantumEspresso_2019/SSSP_precision_pseudos&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =10.410909236, <br>    <span class="hljs-attribute">nat</span>=2, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=40<br>    <span class="hljs-attribute">ecutrho</span>=320<br>    <span class="hljs-attribute">nbnd</span>=8<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Si  28.0855  Si.pbe-n-rrkjus_psl.1.0.0.UPF<br><br>ATOMIC_POSITIONS (alat)<br> Si 0.00 0.00 0.00<br> Si 0.25 0.25 0.25<br>K_POINTS &#123;crystal_b&#125;<br>5<br>  0.0000 0.5000 0.0000 20 !L<br>  0.0000 0.0000 0.0000 30 !Gamma<br>  -0.500 0.0000 -0.500 10 !X<br>  -0.375 0.2500 -0.375 30 !U<br>  0.0000 0.0000 0.0000 20 !Gamma<br></code></pre></td></tr></table></figure><p>Compared with calculations before, we change the type of calculation and the Kpoints with line-mode.</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dns">K_POINTS &#123;crystal_b&#125;<br><span class="hljs-number">5</span><br>  <span class="hljs-number">0.0000 0</span>.<span class="hljs-number">5000</span> <span class="hljs-number">0.0000 20</span> !L<br>  <span class="hljs-number">0.0000 0</span>.<span class="hljs-number">0000</span> <span class="hljs-number">0.0000 30</span> !Gamma<br>  -<span class="hljs-number">0.500 0</span>.<span class="hljs-number">0000</span> -<span class="hljs-number">0.500 10</span> !X<br>  -<span class="hljs-number">0.375 0</span>.<span class="hljs-number">2500</span> -<span class="hljs-number">0.375 30</span> !U<br>  <span class="hljs-number">0.0000 0</span>.<span class="hljs-number">0000</span> <span class="hljs-number">0.0000 20</span> !Gamma<br></code></pre></td></tr></table></figure><p>The second line refers to the number of high-symmetry $k$ we used.The ‘20’ in third line means that there are 20 points from $L$ to $\Gamma$. </p><p>In this method, the band structure is calculated but not readable, so we need post-process. </p><h3 id="STEP-4"><a href="#STEP-4" class="headerlink" title="STEP 4"></a>STEP 4</h3><p>Before three steps, we use the <strong>pw.x</strong>, now we use the <strong>bands.x</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;bands<br>  <span class="hljs-attribute">outdir</span>=<span class="hljs-string">&#x27;./outdir/&#x27;</span><br>  <span class="hljs-attribute">prefix</span>=<span class="hljs-string">&#x27;si&#x27;</span><br>  <span class="hljs-attribute">filband</span>=<span class="hljs-string">&#x27;si.bands.dat&#x27;</span><br>/<br></code></pre></td></tr></table></figure><p>Then we get the file <code>si.bands.dat</code></p><h3 id="STEP-5"><a href="#STEP-5" class="headerlink" title="STEP 5"></a>STEP 5</h3><p>Use the plotband.x</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">si<span class="hljs-selector-class">.bands</span>.dat<br>-<span class="hljs-number">7</span> <span class="hljs-number">16</span> !（范围）<br>si<span class="hljs-selector-class">.bands</span>.xmgr<br>si<span class="hljs-selector-class">.bands</span>.ps<br><span class="hljs-number">6.1330</span> ! (Fermi E)<br><span class="hljs-number">2</span> <span class="hljs-number">6.1330</span> ！ (刻度间隔，费米能)<br></code></pre></td></tr></table></figure><p><img src="/Users/chen/blog_hexo/source/_posts/SiBand.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-03</title>
    <link href="/2020/11/08/QE_03/"/>
    <url>/2020/11/08/QE_03/</url>
    
    <content type="html"><![CDATA[<p>下面以Si晶体为例，计算态密度。</p><span id="more"></span><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><p>Input file: </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;scf&#x27;</span><br>    restart_mode = <span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;si&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =10.4109, <br>    <span class="hljs-attribute">nat</span>=2, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=50<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Si  28.0855  Si.pbe-n-rrkjus_psl.1.0.0.UPF<br><br>ATOMIC_POSITIONS (alat)<br> Si 0.00 0.00 0.00 <br> Si 0.25 0.25 0.25 <br>K_POINTS (automatic)<br>  8 8 8 0 0 0<br></code></pre></td></tr></table></figure><p>We increase the energy cutoff and the k-grid density to get the self-consistent charge density. </p><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><p>Input file:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;nscf&#x27;</span><br>    restart_mode = <span class="hljs-string">&#x27;from_scratch&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;si&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =10.4109, <br>    <span class="hljs-attribute">nat</span>=2, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=50<br>    <span class="hljs-attribute">occupations</span>=<span class="hljs-string">&#x27;tetrahedra&#x27;</span><br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>ATOMIC_SPECIES<br> Si  28.0855  Si.pbe-n-rrkjus_psl.1.0.0.UPF<br><br>ATOMIC_POSITIONS (alat)<br> Si 0.00 0.00 0.00 <br> Si 0.25 0.25 0.25 <br>K_POINTS (automatic)<br>  12 12 12 0 0 0<br></code></pre></td></tr></table></figure><p>New tags:<br>‘occupations’: </p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs oxygene"><span class="hljs-string">&#x27;smearing&#x27;</span> :<br>gaussian smearing <span class="hljs-keyword">for</span> metals;<br>see variables smearing <span class="hljs-keyword">and</span> degauss<br>            <br><span class="hljs-string">&#x27;tetrahedra&#x27;</span> :<br>Tetrahedron <span class="hljs-function"><span class="hljs-keyword">method</span>, <span class="hljs-title">Bloechl</span>&#x27;<span class="hljs-title">s</span> <span class="hljs-title">version</span>:</span><br>P.E. Bloechl, PRB <span class="hljs-number">49</span>, <span class="hljs-number">16223</span> (<span class="hljs-number">1994</span>)<br>Requires uniform grid <span class="hljs-keyword">of</span> k-points, <span class="hljs-keyword">to</span> be<br>automatically generated (see card K_POINTS).<br>Well suited <span class="hljs-keyword">for</span> calculation <span class="hljs-keyword">of</span> DOS,<br>less so (because <span class="hljs-keyword">not</span> variational) <span class="hljs-keyword">for</span><br>force/optimization/dynamics calculations.<br>            <br><span class="hljs-string">&#x27;tetrahedra_lin&#x27;</span> :<br>Original linear tetrahedron <span class="hljs-keyword">method</span>.<br><span class="hljs-keyword">To</span> be used only <span class="hljs-keyword">as</span> a <span class="hljs-keyword">reference</span>;<br>the optimized tetrahedron <span class="hljs-function"><span class="hljs-keyword">method</span> <span class="hljs-title">is</span> <span class="hljs-title">more</span> <span class="hljs-title">efficient</span>.</span><br><span class="hljs-function">            </span><br><span class="hljs-function">&#x27;<span class="hljs-title">tetrahedra_opt</span>&#x27; :</span><br>Optimized tetrahedron <span class="hljs-function"><span class="hljs-keyword">method</span>:</span><br>see M. Kawamura, PRB <span class="hljs-number">89</span>, <span class="hljs-number">094515</span> (<span class="hljs-number">2014</span>).<br>Can be used <span class="hljs-keyword">for</span> phonon calculations <span class="hljs-keyword">as</span> well.<br>            <br><span class="hljs-string">&#x27;fixed&#x27;</span> :<br><span class="hljs-keyword">for</span> insulators <span class="hljs-keyword">with</span> a gap<br>            <br><span class="hljs-string">&#x27;from_input&#x27;</span> :<br>The occupation are <span class="hljs-keyword">read</span> <span class="hljs-keyword">from</span> input file,<br>card OCCUPATIONS. Option valid only <span class="hljs-keyword">for</span> a<br>single k-point, requires nbnd <span class="hljs-keyword">to</span> be <span class="hljs-keyword">set</span><br><span class="hljs-keyword">in</span> input. Occupations should be consistent<br><span class="hljs-keyword">with</span> the value <span class="hljs-keyword">of</span> tot_charge.<br></code></pre></td></tr></table></figure><p>We increased the energy cutoff for wavefunctions and the k-mesh. Here we can obtain the E-fermi in *.out by <code>$grep Fermi si.2_nscf.out$</code>:<br><code>the Fermi energy is     6.1331 ev</code></p><h3 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a>STEP 3</h3><p>We do the dos calculation using dos.x. Before two steps are using pw.x. </p><p>Input file:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;DOS<br>    <span class="hljs-attribute">prefix</span>=<span class="hljs-string">&#x27;si&#x27;</span><br>    <span class="hljs-attribute">outdir</span>=<span class="hljs-string">&#x27;./outdir/&#x27;</span><br>    <span class="hljs-attribute">fildos</span>=<span class="hljs-string">&#x27;si.dos.dat&#x27;</span><br>    <span class="hljs-attribute">emin</span>=-9.0<br>    <span class="hljs-attribute">emax</span>=16.0<br>/<br></code></pre></td></tr></table></figure><p>Tags:<br>‘prefix’: prefix of input file produced by pw.x<br>‘outdir’: directory containing the input data, i.e. the same as in pw.x<br>‘fildos’: output file containing DOS(E)<br>‘emin,emax’: min, max energy (eV) for DOS plot<br>‘DeltaE’: energy grid step (eV)</p><p>After <code>yhbatch -N 1 -n 24 -p bigdata ./qe.sh dos.x</code>, we obtain the <code>si.dos.dat</code> file, and we plot this: </p><p><img src="/Users/chen/blog_hexo/source/_posts/Sidos.png" alt="Sidos"></p><p>And we find the energy gap is around 0.75 eV (underestimated by DFT compared with experimental 1.17 eV)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-02</title>
    <link href="/2020/11/08/QE_02/"/>
    <url>/2020/11/08/QE_02/</url>
    
    <content type="html"><![CDATA[<p>下面以Si晶体为例，进行晶格常数优化。</p><span id="more"></span><p>Input file: </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;vc-relax&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;si&#x27;</span><br>    outdir = <span class="hljs-string">&#x27;./outdir&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>    etot_conv_thr = 1e-5<br>    forc_conv_thr = 1e-4<br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=2, celldm(1) =14, <br>    <span class="hljs-attribute">nat</span>=2, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=30<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-7<br>/<br>&amp;ions<br>/<br>&amp;cell<br>    <span class="hljs-attribute">cell_dofree</span>=<span class="hljs-string">&#x27;ibrav&#x27;</span><br>/<br>ATOMIC_SPECIES<br> Si  28.0855  Si.pbe-n-rrkjus_psl.1.0.0.UPF<br>ATOMIC_POSITIONS (alat)<br> Si 0.00 0.00 0.00 0 0 0 <br> Si 0.25 0.25 0.25 0 0 0<br>K_POINTS (automatic)<br>  4 4 4 0 0 0<br></code></pre></td></tr></table></figure><p>New Notes:<br>‘vc-relax’: Cell changed relax step.<br>‘outdir’: folder name for storing output<br>‘etot_conv_thr’: energy difference judge between two successive ionic steps<br>‘forc_conv_thr’: force difference judge between two successive ionic steps<br>‘cell_dofree=’ibrav’’: all axis and angles are moved, but the lattice remains consistent with the initial ibrav choice</p><p>Output: si.vc_relax.out</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dns">Begin final coordinates<br>     new unit-cell volume =    <span class="hljs-number">282.09879</span> a.u.^<span class="hljs-number">3</span> (    <span class="hljs-number">41.80273</span> Ang^<span class="hljs-number">3</span> )<br>     density =      <span class="hljs-number">2.23129</span> g/cm^<span class="hljs-number">3</span><br><br>CELL_PARAMETERS (alat= <span class="hljs-number">14.00000000</span>)<br>  -<span class="hljs-number">0</span>.<span class="hljs-number">371816826</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">371816826</span><br>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>   <span class="hljs-number">0</span>.<span class="hljs-number">371816826</span>   <span class="hljs-number">0</span>.<span class="hljs-number">371816826</span><br>  -<span class="hljs-number">0</span>.<span class="hljs-number">371816826</span>   <span class="hljs-number">0</span>.<span class="hljs-number">371816826</span>   <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br><br>ATOMIC_POSITIONS (alat)<br>Si            <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>    <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span><br>Si            <span class="hljs-number">0.1859084130</span>        <span class="hljs-number">0.1859084130</span>        <span class="hljs-number">0.1859084130</span>    <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span><br>End final coordinates<br></code></pre></td></tr></table></figure><p>Then we obtain the optimized lattice constant of 14.00000000*0.371816826*2 = 10.4109 Bohr<br>and the density is 2.23129 $g/cm^3$. </p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QE-01</title>
    <link href="/2020/11/07/QE_01/"/>
    <url>/2020/11/07/QE_01/</url>
    
    <content type="html"><![CDATA[<p>Some basis:<br><a href="https://www.materialscloud.org/discover/sssp/table/efficiency#sssp-license">SSSP</a>: potential for QE</p><p>We use the QE/6.7-gcc-5.4.0-MPI on TH-2 by “module load Quantum_Espresso/6.7-gcc-5.4.0-MPI”</p><p>Besides, the bash file we use is ‘qe.sh’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">export</span> PATH=/BIGDATA1/app/Quantum_Espresso/6.7-gcc-5.4.0/bin/:<span class="hljs-variable">$PATH</span><br>yhrun -N <span class="hljs-variable">$SLURM_NNODES</span> -n <span class="hljs-variable">$SLURM_NTASKS</span> <span class="hljs-variable">$1</span> &lt; h2.relax.in &gt;&amp; h2.relax.out<br></code></pre></td></tr></table></figure><span id="more"></span><p>We start from the H2 to obtain the equilibrium bond length. </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&amp;control<br>    calculation = <span class="hljs-string">&#x27;relax&#x27;</span><br>   <span class="hljs-built_in"> prefix </span>= <span class="hljs-string">&#x27;h2&#x27;</span><br>    pseudo_dir = <span class="hljs-string">&#x27;/BIGDATA1/ac_iphy_jrsun_1/soft/QE/SSSP&#x27;</span><br>/<br>&amp;system<br>    <span class="hljs-attribute">ibrav</span>=1, celldm(1) =20, <br>    <span class="hljs-attribute">nat</span>=2, <span class="hljs-attribute">ntyp</span>=1,<br>    <span class="hljs-attribute">ecutwfc</span>=30.0<br>/<br>&amp;electrons<br>    <span class="hljs-attribute">conv_thr</span>=1e-8<br>/<br>&amp;ions<br>    <span class="hljs-attribute">ion_dynamics</span>=<span class="hljs-string">&#x27;bfgs&#x27;</span><br>/<br>ATOMIC_SPECIES<br> H  1.00784  H.pbe-rrkjus_psl.1.0.0.UPF<br>ATOMIC_POSITIONS (angstrom)<br> H 0.00 0.00 0.00<br> H 1.00 0.00 0.00<br>K_POINTS (automatic)<br>  1 1 1 0 0 0<br></code></pre></td></tr></table></figure><p>Some note: (more detials can be found <a href="http://www.quantum-espresso.org/Doc/INPUT_PW.html#idm878">here</a>)<br>‘ibrav =1’ means that the Bravais-lattice is simple cubic with basis of $v_{1}=(a,0,0), v_{2}=(0,a,0), v_{3}=(0,0,a)$<br>‘celldm(1)=20’ means that lattice constant in Bohr. (1Bohr = 0.529 $\overset{\circ}{A}$)<br>‘nat=2’: number of atoms in the unit cell<br>‘ntype=2’: number of types of atoms in the unit cell<br>‘ecutwfc’: kinetic energy cutoff of wavefunction<br>‘conv_thr’: Convergence threshold for selfconsistency.<br>‘ion_dynamics’: Specify the type of ionic dynamics;<br><strong>‘bfgs’</strong>: BFGS quasi-newton algorithm,<br>based on the trust radius procedure,<br>for structural relaxation.<br><strong>‘damp’</strong>: quick-min Verlet dynamics for structural relaxation</p><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs puppet">ATOMIC_SPECIES<br>X Mass_X PseudoPot_X <br>Y Mass_Y PseudoPot_Y<br><span class="hljs-keyword">ATOMIC_POSITIONS</span> &#123;alat | bohr | crystal | angstrom | crystal_sg&#125;<br><span class="hljs-keyword">X</span> 0.0 0.0 0.0 x x x (可以备注x,0 fixed, 1 free)<br>Y 0.5 0.0 0.0<br><span class="hljs-keyword">K_POINTS</span> &#123;tpiba | automatic | crystal | gamma | tpiba_b | crystal_b | tpiba_c | crystal_c&#125;<br><span class="hljs-keyword">if</span> (gamma)<br>    nothing to read<br>if (automatic)<br>    nk1, nk2, nk3, k1, k2, k3<br>if (not automatic)<br>    nks<br>    xk_x, xk_y, xk_z, wk<br>!当ibrav=0时，设置此项<br>[<span class="hljs-keyword">CELL_PARAMETERS</span> &#123;alat | bohr| angstrom&#125;<br><span class="hljs-keyword">v11</span> <span class="hljs-keyword">v12</span> <span class="hljs-keyword">v13</span><br><span class="hljs-keyword">v21</span> <span class="hljs-keyword">v22</span> <span class="hljs-keyword">v23</span><br><span class="hljs-keyword">v31</span> <span class="hljs-keyword">v32</span> <span class="hljs-keyword">v33</span>]<br></code></pre></td></tr></table></figure><p>submit: <code>$yhbatch -N 1 -n 1 -p bigdata ./qe.sh pw.x</code></p><p>In h2.relax.out: </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Begin</span> final coordinates<br><br><span class="hljs-attribute">ATOMIC_POSITIONS</span> (angstrom)<br><span class="hljs-attribute">H</span>             <span class="hljs-number">0</span>.<span class="hljs-number">1233376814</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span><br><span class="hljs-attribute">H</span>             <span class="hljs-number">0</span>.<span class="hljs-number">8766623186</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>        <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span><br><span class="hljs-attribute">End</span> final coordinates<br></code></pre></td></tr></table></figure><p>Then we get the optimized hydrogen bond length. </p>]]></content>
    
    
    
    <tags>
      
      <tag>Physics</tag>
      
      <tag>QE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ML5</title>
    <link href="/2020/05/22/ML5/"/>
    <url>/2020/05/22/ML5/</url>
    
    <content type="html"><![CDATA[<p>Support Vector Machines (SVM)</p><span id="more"></span>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ML4</title>
    <link href="/2020/05/20/ML4/"/>
    <url>/2020/05/20/ML4/</url>
    
    <content type="html"><![CDATA[<p>Logistic Regression</p><span id="more"></span><p>本质是解决二分类问题，变量需满足伯努利分布（区分于线性回归-高斯分布）</p><h3 id="Hypothesis-Function"><a href="#Hypothesis-Function" class="headerlink" title="Hypothesis Function"></a><strong>Hypothesis Function</strong></h3><p>$f_{\theta}(x) = \frac{1}{1+e^{-\theta x}}$<br>物理含义 给定$x$和$\theta$条件下，y=1的概率，即$P(y=1|x,\theta)$</p><p>其对应的决策函数一般为$y^{*}=1, if P(y=1|x)&gt;C$, $C$为临界阈值，一般取0.5 (用于分类)</p><h3 id="Decision-Boundary"><a href="#Decision-Boundary" class="headerlink" title="Decision Boundary"></a>Decision Boundary</h3><p>比如边界为 $-3+x_{1}+x_{2}=0$<br>此时$f_{\theta}(x)=f(\theta_{0}+\theta_{1}x_{1}+\theta_{2}x_{2})$</p><p>又比如边界为 $-3+x_{1}^{2}+x_{2}^{2}=0$<br>此时$f_{\theta}(x)=f(\theta_{0}+\theta_{1}x_{1}+\theta_{2}x_{2})+\theta_{3}x_{1}^{2}+\theta_{4}x_{2}^{2})$</p><h3 id="Cost-Function-convex-func"><a href="#Cost-Function-convex-func" class="headerlink" title="Cost Function (convex func)"></a>Cost Function (convex func)</h3><p>用于衡量模型预测值$f_{\theta}(x)$与标准答案y之间的差异<br>$J(\theta)=-\frac{1}{m} \left[ \sum_{i=1}^{m} y_{i}logf_{\theta}(x_{i})+(1-y_{i}) log(1-f_{\theta}(x_{i}))\right]$</p><h3 id="Gradient-Descent-Algorithm"><a href="#Gradient-Descent-Algorithm" class="headerlink" title="Gradient Descent Algorithm"></a>Gradient Descent Algorithm</h3><p>梯度下降中的梯度指的是代价函数对各个参数的偏导数，偏导数的方向决定了在学习过程中参数下降的方向。(寻找最大值时用梯度上升)<br>即<br>$$<br>Want \ min_{\theta} J(\theta): \<br>Repeat \ \theta_{j}=\theta_{j}-\alpha(\frac{\partial}{\partial \theta_{j}}J(\theta)) \<br>=\theta_{j}- \frac{\alpha}{m} \sum_{i=1}^{m}x_{i,j}(f_{\theta}(x_{i}-y_{i}))<br>$$</p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ML3</title>
    <link href="/2020/05/18/ML3/"/>
    <url>/2020/05/18/ML3/</url>
    
    <content type="html"><![CDATA[<p>Naive Beyes Classifier</p><span id="more"></span><h3 id="朴素贝叶斯方法的学习与分类"><a href="#朴素贝叶斯方法的学习与分类" class="headerlink" title="朴素贝叶斯方法的学习与分类"></a>朴素贝叶斯方法的学习与分类</h3><p>设输入空间$\chi \subseteq {R}^{n}$为n维向量的集合，输出空间为类标记集合$\gamma={ c_{1}, c_{2},\cdots,c_{K} }$。输入为特征向量$x \in \chi$, 输出位类标记$y \in \gamma$。X是定义在输入空间$\chi$上的随机向量，Y是定义在输出空间$\gamma$上的随机向量。P(X,Y)为X和Y的联合概率分布。<br>训练数据集 $T = {(x_{1},y_{1}),(x_{2},y_{2}),\cdots,(x_{N},y_{N})}$由P(X,Y)独立同分布产生。<br>先验概率分布 $P(Y=c_{k}), k = 1,2,\cdots,K$<br>条件概率分布 $P(X=x|Y=c_{k})$<br>条件独立性假设，则$$P(X=x|Y=c_{k})=\prod_{j=1}^{n}P \left( \left. X^{(j)}=x^{(j)} \right| Y=c_{k}\right)$$<br>朴素贝叶斯方法实际上学习到生成数据的机制，属于生成模型。利用朴素贝叶斯分类时，对于给定的输入$x$，通过学习到的模型计算后验概率$$P(Y=c_{k}|X=x)=\frac{P(X=x|Y=c_{k})P(Y=c_{k})}{\sum_{k}P(X=x|Y=c_{k})P(Y=c_{k})}$$<br>分类器(后验概率最大化准则，即期望风险最小化准则)为:<br>$$<br>y = \arg \mathop{\max}<em>{c</em>{k}}P(Y=c_{k})\prod_{j}P \left( \left. X^{(j)}=x^{(j)} \right| Y=c_{k}\right)<br>$$</p><h3 id="朴素贝叶斯方法的参数估计"><a href="#朴素贝叶斯方法的参数估计" class="headerlink" title="朴素贝叶斯方法的参数估计"></a>朴素贝叶斯方法的参数估计</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Created on Tue May 18 19:02:27 2020</span><br><span class="hljs-string"></span><br><span class="hljs-string">@author: chen</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> functools <span class="hljs-keyword">import</span> reduce<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：创建实验样本</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    None</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    postingList - 样本词表</span><br><span class="hljs-string">    classVec - 类别标签向量</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">loadDataSet</span>():</span><br>    <span class="hljs-comment"># 切分的词条</span><br>    postingList = [[<span class="hljs-string">&#x27;my&#x27;</span>, <span class="hljs-string">&#x27;dog&#x27;</span>, <span class="hljs-string">&#x27;has&#x27;</span>, <span class="hljs-string">&#x27;flea&#x27;</span>, <span class="hljs-string">&#x27;problems&#x27;</span>, <span class="hljs-string">&#x27;help&#x27;</span>, <span class="hljs-string">&#x27;please&#x27;</span>],<br>                   [<span class="hljs-string">&#x27;maybe&#x27;</span>, <span class="hljs-string">&#x27;not&#x27;</span>, <span class="hljs-string">&#x27;take&#x27;</span>, <span class="hljs-string">&#x27;him&#x27;</span>, <span class="hljs-string">&#x27;to&#x27;</span>, <span class="hljs-string">&#x27;dog&#x27;</span>, <span class="hljs-string">&#x27;park&#x27;</span>, <span class="hljs-string">&#x27;stupid&#x27;</span>],<br>                   [<span class="hljs-string">&#x27;my&#x27;</span>, <span class="hljs-string">&#x27;dalmation&#x27;</span>, <span class="hljs-string">&#x27;is&#x27;</span>, <span class="hljs-string">&#x27;so&#x27;</span>, <span class="hljs-string">&#x27;cute&#x27;</span>, <span class="hljs-string">&#x27;I&#x27;</span>, <span class="hljs-string">&#x27;love&#x27;</span>, <span class="hljs-string">&#x27;him&#x27;</span>],<br>                   [<span class="hljs-string">&#x27;stop&#x27;</span>, <span class="hljs-string">&#x27;posting&#x27;</span>, <span class="hljs-string">&#x27;stupid&#x27;</span>, <span class="hljs-string">&#x27;worthless&#x27;</span>, <span class="hljs-string">&#x27;garbage&#x27;</span>],<br>                   [<span class="hljs-string">&#x27;mr&#x27;</span>, <span class="hljs-string">&#x27;licks&#x27;</span>, <span class="hljs-string">&#x27;ate&#x27;</span>, <span class="hljs-string">&#x27;my&#x27;</span>, <span class="hljs-string">&#x27;steak&#x27;</span>, <span class="hljs-string">&#x27;how&#x27;</span>, <span class="hljs-string">&#x27;to&#x27;</span>, <span class="hljs-string">&#x27;stop&#x27;</span>, <span class="hljs-string">&#x27;him&#x27;</span>],<br>                   [<span class="hljs-string">&#x27;quit&#x27;</span>, <span class="hljs-string">&#x27;buying&#x27;</span>, <span class="hljs-string">&#x27;worthless&#x27;</span>, <span class="hljs-string">&#x27;dog&#x27;</span>, <span class="hljs-string">&#x27;food&#x27;</span>, <span class="hljs-string">&#x27;stupid&#x27;</span>]]<br>    <span class="hljs-comment"># 类别标签，1代表侮辱性词汇，0代表不是</span><br>    classVec = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>]<br>    <span class="hljs-comment"># 返回样本词表，类别标签向量</span><br>    <span class="hljs-keyword">return</span> postingList, classVec<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：将切分的实验样本词条整理成不重复的词汇表</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    dataSet - 整理的样本数据集</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    vocabSet - 返回不重复的词汇表</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">createVocabList</span>(<span class="hljs-params">dataSet</span>):</span><br>    <span class="hljs-comment"># 创建一个空的不重复列表</span><br>    <span class="hljs-comment"># set是一个无序且不重复的元素集合</span><br>    vocabSet = <span class="hljs-built_in">set</span>([])<br>    <span class="hljs-keyword">for</span> document <span class="hljs-keyword">in</span> dataSet:<br>        <span class="hljs-comment"># 取并集</span><br>        vocabSet = vocabSet | <span class="hljs-built_in">set</span>(document)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">list</span>(vocabSet)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：根据vocabList词汇表，将inputSet向量化，向量的每个元素为1或0</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    vocabList - createVocabList返回的列表</span><br><span class="hljs-string">    inputSet - 切分的词条列表</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    returnVec - 文档向量，词集模型</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">setOfWords2Vec</span>(<span class="hljs-params">vocabList, inputSet</span>):</span><br>    <span class="hljs-comment"># 创建一个其中所含元素都为0的向量</span><br>    returnVec = [<span class="hljs-number">0</span>] * <span class="hljs-built_in">len</span>(vocabList)<br>    <span class="hljs-comment"># 遍历每个词条</span><br>    <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> inputSet:<br>        <span class="hljs-keyword">if</span> word <span class="hljs-keyword">in</span> vocabList:<br>            <span class="hljs-comment"># 如果词条存在于词汇表中，则置1</span><br>            <span class="hljs-comment"># index返回word出现在vocabList中的索引</span><br>            <span class="hljs-comment"># 若改为+=则就是基于词袋的模型</span><br>            returnVec[vocabList.index(word)] = <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;the word: %s is not in my Vocabulary&quot;</span> % word)<br>    <span class="hljs-comment"># 返回文档向量</span><br>    <span class="hljs-keyword">return</span> returnVec<br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：朴素贝叶斯分类器训练函数</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    trainMatrix - 训练文档矩阵，即setOfWords2Vec返回的returnVec构成的矩阵</span><br><span class="hljs-string">    trainCategory - 训练类标签向量，即loadDataSet返回的classVec</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    p0Vect - 侮辱类的条件概率数组</span><br><span class="hljs-string">    p1Vect - 非侮辱类的条件概率数组</span><br><span class="hljs-string">    pAbusive - 文档属于侮辱类的概率</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">trainNB0</span>(<span class="hljs-params">trainMatrix, trainCategory</span>):</span><br>    <span class="hljs-comment"># 计算训练文档数目</span><br>    numTrainDocs = <span class="hljs-built_in">len</span>(trainMatrix)<br>    <span class="hljs-comment"># 计算每篇文档的词条数目</span><br>    numWords = <span class="hljs-built_in">len</span>(trainMatrix[<span class="hljs-number">0</span>])<br>    <span class="hljs-comment"># 文档属于侮辱类的概率</span><br>    pAbusive = <span class="hljs-built_in">sum</span>(trainCategory)/<span class="hljs-built_in">float</span>(numTrainDocs)<br>    <span class="hljs-comment"># 创建numpy.zeros数组，词条出现数初始化为0</span><br>    <span class="hljs-comment"># p0Num = np.zeros(numWords)</span><br>    <span class="hljs-comment"># p1Num = np.zeros(numWords)</span><br>    <span class="hljs-comment"># 创建numpy.ones数组，词条出现数初始化为1,拉普拉斯平滑</span><br>    p0Num = np.ones(numWords)<br>    p1Num = np.ones(numWords)<br>    <span class="hljs-comment"># 分母初始化为0</span><br>    <span class="hljs-comment"># p0Denom = 0.0</span><br>    <span class="hljs-comment"># p1Denom = 0.0</span><br>    <span class="hljs-comment"># 分母初始化为2，拉普拉斯平滑</span><br>    p0Denom = <span class="hljs-number">2.0</span><br>    p1Denom = <span class="hljs-number">2.0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numTrainDocs):<br>        <span class="hljs-comment"># 统计属于侮辱类的条件概率所需的数据，即P(w0|1),P(w1|1),P(w2|1)...</span><br>        <span class="hljs-keyword">if</span> trainCategory[i] == <span class="hljs-number">1</span>:<br>            <span class="hljs-comment"># 统计所有侮辱类文档中每个单词出现的个数</span><br>            p1Num += trainMatrix[i]<br>            <span class="hljs-comment"># 统计一共出现的侮辱单词的个数</span><br>            p1Denom += <span class="hljs-built_in">sum</span>(trainMatrix[i])<br>        <span class="hljs-comment"># 统计属于非侮辱类的条件概率所需的数据，即P(w0|0),P(w1|0),P(w2|0)...</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># 统计所有非侮辱类文档中每个单词出现的个数</span><br>            p0Num += trainMatrix[i]<br>            <span class="hljs-comment"># 统计一共出现的非侮辱单词的个数</span><br>            p0Denom += <span class="hljs-built_in">sum</span>(trainMatrix[i])<br>    <span class="hljs-comment"># 每个侮辱类单词分别出现的概率</span><br>    <span class="hljs-comment"># p1Vect = p1Num / p1Denom</span><br>    <span class="hljs-comment"># 取对数，防止下溢出</span><br>    p1Vect = np.log(p1Num / p1Denom)<br>    <span class="hljs-comment"># 每个非侮辱类单词分别出现的概率</span><br>    <span class="hljs-comment"># p0Vect = p0Num / p0Denom</span><br>    <span class="hljs-comment"># 取对数，防止下溢出</span><br>    p0Vect = np.log(p0Num / p0Denom)<br>    <span class="hljs-comment"># 返回属于侮辱类的条件概率数组、属于非侮辱类的条件概率数组、文档属于侮辱类的概率</span><br>    <span class="hljs-keyword">return</span> p0Vect, p1Vect, pAbusive<br>                <br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：朴素贝叶斯分类器分类函数</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    vec2Classify - 待分类的词条数组</span><br><span class="hljs-string">    p0Vec - 侮辱类的条件概率数组</span><br><span class="hljs-string">    p1Vec - 非侮辱类的条件概率数组</span><br><span class="hljs-string">    pClass1 - 文档属于侮辱类的概率</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    0 - 属于非侮辱类</span><br><span class="hljs-string">    1 - 属于侮辱类</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">classifyNB</span>(<span class="hljs-params">vec2Classify, p0Vec, p1Vec, pClass1</span>):</span><br>    <span class="hljs-comment"># 对应元素相乘</span><br>    <span class="hljs-comment"># p1 = reduce(lambda x,y:x*y, vec2Classify * p1Vec) * pClass1</span><br>    <span class="hljs-comment"># p0 = reduce(lambda x,y:x*y, vec2Classify * p0Vec) * (1.0 - pClass1)</span><br>    <span class="hljs-comment"># 对应元素相乘，logA*B = logA + logB所以这里是累加</span><br>    p1 = <span class="hljs-built_in">sum</span>(vec2Classify * p1Vec) + np.log(pClass1)<br>    p0 = <span class="hljs-built_in">sum</span>(vec2Classify * p0Vec) + np.log(<span class="hljs-number">1.0</span> - pClass1)<br>    <span class="hljs-comment"># print(&#x27;p0:&#x27;, p0)</span><br>    <span class="hljs-comment"># print(&#x27;p1:&#x27;, p1)</span><br>    <span class="hljs-keyword">if</span> p1 &gt; p0:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：测试朴素贝叶斯分类器</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    None</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    None</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">testingNB</span>():</span><br>    <span class="hljs-comment"># 创建实验样本</span><br>    listOPosts, listclasses = loadDataSet()<br>    <span class="hljs-comment"># 创建词汇表,将输入文本中的不重复的单词进行提取组成单词向量</span><br>    myVocabList = createVocabList(listOPosts)<br>    trainMat = []<br>    <span class="hljs-keyword">for</span> postinDoc <span class="hljs-keyword">in</span> listOPosts:<br>        <span class="hljs-comment"># 将实验样本向量化若postinDoc中的单词在myVocabList出现则将returnVec该位置的索引置1</span><br>        <span class="hljs-comment"># 将6组数据list存储在trainMat中</span><br>        trainMat.append(setOfWords2Vec(myVocabList, postinDoc))<br>    <span class="hljs-comment"># 训练朴素贝叶斯分类器</span><br>    p0V, p1V, pAb = trainNB0(np.array(trainMat), np.array(listclasses))<br>    <span class="hljs-comment"># 测试样本1</span><br>    testEntry = [<span class="hljs-string">&#x27;love&#x27;</span>, <span class="hljs-string">&#x27;my&#x27;</span>, <span class="hljs-string">&#x27;dalmation&#x27;</span>]<br>    <span class="hljs-comment"># 测试样本向量化返回这三个单词出现位置的索引</span><br>    thisDoc = np.array(setOfWords2Vec(myVocabList, testEntry))<br>    <span class="hljs-keyword">if</span> classifyNB(thisDoc, p0V, p1V, pAb):<br>        <span class="hljs-comment"># 执行分类并打印结果</span><br>        <span class="hljs-built_in">print</span>(testEntry, <span class="hljs-string">&#x27;属于侮辱类&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># 执行分类并打印结果</span><br>        <span class="hljs-built_in">print</span>(testEntry, <span class="hljs-string">&#x27;属于非侮辱类&#x27;</span>)<br>    <span class="hljs-comment"># 测试样本2</span><br>    testEntry = [<span class="hljs-string">&#x27;stupid&#x27;</span>, <span class="hljs-string">&#x27;garbage&#x27;</span>]<br>    <span class="hljs-comment"># 将实验样本向量化</span><br>    thisDoc = np.array(setOfWords2Vec(myVocabList, testEntry))<br>    <span class="hljs-keyword">if</span> classifyNB(thisDoc, p0V, p1V, pAb):<br>        <span class="hljs-comment"># 执行分类并打印结果</span><br>        <span class="hljs-built_in">print</span>(testEntry, <span class="hljs-string">&#x27;属于侮辱类&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># 执行分类并打印结果</span><br>        <span class="hljs-built_in">print</span>(testEntry, <span class="hljs-string">&#x27;属于非侮辱类&#x27;</span>)<br>    <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    testingNB()<br>    <br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ML2</title>
    <link href="/2020/05/11/ML2/"/>
    <url>/2020/05/11/ML2/</url>
    
    <content type="html"><![CDATA[<p>Decision Tree</p><span id="more"></span><p>A. Information Gain - Shannon Entropy </p><p>Given a discrete random variable $X$, with possible outcomes $x_{1},x_{2},…,x_{n}$, which occur with probability $P(x_{1}),P(x_{2}),…,P(x_{n})$, the entropy of X is formally defined as:<br>$H(X) = -\sum_{i=1}^{N} P(x_{i})log_{2}P(x_{i})$</p><p>B. ID3 algorithm</p><ol><li>Calculate the entropy of every attribute $\alpha$ of the data set $S$.</li><li>Partition (“split”) the set $S$ into subsets using the attribute for which the resulting entropy after splitting is minimized; or, equivalently, information gain is maximum.</li><li>Make a decision tree node containing that attribute.</li><li>Recurse on subsets using the remaining attributes.</li><li>核心思想就是以<strong>信息增益</strong>来度量属性的选择，选择分裂后<strong>信息增益</strong>最大的属性进行分裂。该算法采用<strong>自顶向下的贪婪搜索遍历</strong>可能的决策空间。</li></ol><p>Pseudocode: </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">ID3 (Examples, Target_Attribute, Attributes)<br>    <span class="hljs-keyword">Create</span> a root node <span class="hljs-keyword">for</span> the tree<br>    <span class="hljs-keyword">If</span> <span class="hljs-keyword">all</span> examples are positive, <span class="hljs-keyword">Return</span> the single-node tree Root, <span class="hljs-keyword">with</span> label = +.<br>    <span class="hljs-keyword">If</span> <span class="hljs-keyword">all</span> examples are negative, <span class="hljs-keyword">Return</span> the single-node tree Root, <span class="hljs-keyword">with</span> label = -.<br>    <span class="hljs-keyword">If</span> number <span class="hljs-keyword">of</span> predicting attributes <span class="hljs-keyword">is</span> empty, <span class="hljs-keyword">then</span> <span class="hljs-keyword">Return</span> the single node tree Root,<br>    <span class="hljs-keyword">with</span> label = most common <span class="hljs-keyword">value</span> <span class="hljs-keyword">of</span> the target <span class="hljs-keyword">attribute</span> <span class="hljs-keyword">in</span> the examples.<br>    Otherwise <span class="hljs-keyword">Begin</span><br>        A ← The <span class="hljs-keyword">Attribute</span> that best classifies examples.<br>        Decision Tree <span class="hljs-keyword">attribute</span> <span class="hljs-keyword">for</span> Root = A.<br>        <span class="hljs-keyword">For</span> <span class="hljs-keyword">each</span> possible <span class="hljs-keyword">value</span>, vi, <span class="hljs-keyword">of</span> A,<br>            <span class="hljs-keyword">Add</span> a <span class="hljs-built_in">new</span> tree branch below Root, corresponding <span class="hljs-keyword">to</span> the test A = vi.<br>            Let Examples(vi) be the subset <span class="hljs-keyword">of</span> examples that have the <span class="hljs-keyword">value</span> vi <span class="hljs-keyword">for</span> A<br>            <span class="hljs-keyword">If</span> Examples(vi) <span class="hljs-keyword">is</span> empty<br>                <span class="hljs-keyword">Then</span> below this <span class="hljs-built_in">new</span> branch <span class="hljs-keyword">add</span> a leaf node <span class="hljs-keyword">with</span> label = most common target <span class="hljs-keyword">value</span> <span class="hljs-keyword">in</span> the examples<br>            <span class="hljs-keyword">Else</span> below this <span class="hljs-built_in">new</span> branch <span class="hljs-keyword">add</span> the subtree ID3 (Examples(vi), Target_Attribute, Attributes – &#123;A&#125;)<br>    <span class="hljs-keyword">End</span><br>    <span class="hljs-keyword">Return</span> Root<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Created on Tue May 11 20:07:48 2020</span><br><span class="hljs-string"></span><br><span class="hljs-string">@author: chen</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">from</span> math <span class="hljs-keyword">import</span> log<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：创建测试数据集</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    None</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    dataSet - 数据集</span><br><span class="hljs-string">    labels - 分类属性</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">createDataSet</span>():</span><br>    <span class="hljs-comment"># 数据集</span><br>    dataSet = [[<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;yes&#x27;</span>],<br>               [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;yes&#x27;</span>],<br>               [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;no&#x27;</span>],<br>               [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;no&#x27;</span>],<br>               [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;no&#x27;</span>]]<br>    <span class="hljs-comment"># 分类属性</span><br>    labels = [<span class="hljs-string">&#x27;no surfacing&#x27;</span>, <span class="hljs-string">&#x27;flippers&#x27;</span>]<br>    <span class="hljs-comment"># 返回数据集和分类属性</span><br>    <span class="hljs-keyword">return</span> dataSet, labels<br></code></pre></td></tr></table></figure><p>划分数据集（引入信息熵的概念）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：计算数据集的经验熵（香农熵）</span><br><span class="hljs-string">        Ent（D） = -SUM&#123;_i&#125;(p(xi)*Log2(p(xi)))</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    dataSet - 数据集</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    shannonEnt - 经验熵（香农熵）</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">calcShannonEnt</span>(<span class="hljs-params">dataSet</span>):</span><br>    <span class="hljs-comment"># 返回样本总量</span><br>    numEntires = <span class="hljs-built_in">len</span>(dataSet)<br>    <span class="hljs-comment"># 生成字典&#123;label:次数&#125;</span><br>    labelCounts = &#123;&#125;<br>    <span class="hljs-comment"># 遍历dataSet统计</span><br>    <span class="hljs-keyword">for</span> featVec <span class="hljs-keyword">in</span> dataSet:<br>        <span class="hljs-comment"># 提取label信息</span><br>        currentLabel = featVec[-<span class="hljs-number">1</span>]<br>        <span class="hljs-comment"># 如果label没有放入统计次数的字典，添加进去</span><br>        <span class="hljs-keyword">if</span> currentLabel <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> labelCounts.keys():<br>            <span class="hljs-comment"># 创建一个新的键值对，键为currentLabel值为0</span><br>            labelCounts[currentLabel] = <span class="hljs-number">0</span><br>        <span class="hljs-comment"># Label计数</span><br>        labelCounts[currentLabel] += <span class="hljs-number">1</span><br>    <span class="hljs-comment"># 经验熵（香农熵）</span><br>    shannonEnt = <span class="hljs-number">0.0</span><br>    <span class="hljs-comment"># 计算香农熵</span><br>    <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> labelCounts:<br>        <span class="hljs-comment"># 选择该标签（Label）的概率</span><br>        prob = <span class="hljs-built_in">float</span>(labelCounts[key]) / numEntires<br>        <span class="hljs-comment"># 利用公式计算</span><br>        shannonEnt -= prob*log(prob, <span class="hljs-number">2</span>)<br>    <span class="hljs-comment"># 返回经验熵（香农熵）</span><br>    <span class="hljs-keyword">return</span> shannonEnt<br></code></pre></td></tr></table></figure><p>划分数据集（根据指定特征）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：按照给定特征划分数据集</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    dataSet - 待划分的数据集</span><br><span class="hljs-string">    axis - 划分数据集的特征</span><br><span class="hljs-string">    values - 需要返回的特征的值</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    None</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">splitDataSet</span>(<span class="hljs-params">dataSet, axis, value</span>):</span><br>    <span class="hljs-comment"># 创建新的数据集对象</span><br>    retDataSet = []<br>    <span class="hljs-comment"># 遍历数据集</span><br>    <span class="hljs-keyword">for</span> featVec <span class="hljs-keyword">in</span> dataSet:<br>        <span class="hljs-keyword">if</span> featVec[axis] == value:<br>            <span class="hljs-comment"># 返回去掉axis特征的数据</span><br>            reducedFeatVec = featVec[:axis]<br>            reducedFeatVec.extend(featVec[axis+<span class="hljs-number">1</span>:])<br>            <span class="hljs-comment"># 嵌套产生新的数据集</span><br>            retDataSet.append(reducedFeatVec)<br>    <span class="hljs-comment"># 返回划分后的数据集</span><br>    <span class="hljs-keyword">return</span> retDataSet<br></code></pre></td></tr></table></figure><p>选择信息增益最大的特征划分数据集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：选择最优特征</span><br><span class="hljs-string">        Gain(D,g) = Ent(D) - SUM(|Dv|/|D|)*Ent(Dv)</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    dataSet - 数据集</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    bestFeature - 信息增益最大的（最优）特征的索引值</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">chooseBestFeatureToSplit</span>(<span class="hljs-params">dataSet</span>):</span><br>    <span class="hljs-comment"># 特征数量</span><br>    numFeatures = <span class="hljs-built_in">len</span>(dataSet[<span class="hljs-number">0</span>]) - <span class="hljs-number">1</span><br>    <span class="hljs-comment"># 计算数据集的香农熵</span><br>    baseEntropy = calcShannonEnt(dataSet)<br>    <span class="hljs-comment"># 信息增益</span><br>    bestInfoGain = <span class="hljs-number">0.0</span><br>    <span class="hljs-comment"># 最优特征的索引值</span><br>    bestFeature = -<span class="hljs-number">1</span><br>    <span class="hljs-comment"># 遍历所有特征</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numFeatures):<br>        <span class="hljs-comment"># 获取dataSet的第i个所有特征存在featList这个列表中（列表生成式）</span><br>        featList = [example[i] <span class="hljs-keyword">for</span> example <span class="hljs-keyword">in</span> dataSet]<br>        <span class="hljs-comment"># 创建set集合&#123;&#125;，元素不可重复，重复的元素均被删掉</span><br>        <span class="hljs-comment"># 从列表中创建集合是python语言得到列表中唯一元素值的最快方法</span><br>        uniqueVals = <span class="hljs-built_in">set</span>(featList)<br>        <span class="hljs-comment"># 经验条件熵</span><br>        newEntropy = <span class="hljs-number">0.0</span><br>        <span class="hljs-comment"># 计算信息增益</span><br>        <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> uniqueVals:<br>            <span class="hljs-comment"># subDataSet划分后的子集</span><br>            subDataSet = splitDataSet(dataSet, i, value)<br>            <span class="hljs-comment"># 计算子集的概率</span><br>            prob = <span class="hljs-built_in">len</span>(subDataSet) / <span class="hljs-built_in">float</span>(<span class="hljs-built_in">len</span>(dataSet))<br>            <span class="hljs-comment"># 根据公式计算经验条件熵</span><br>            newEntropy += prob * calcShannonEnt(subDataSet)<br>        <span class="hljs-comment"># 信息增益</span><br>        infoGain = baseEntropy - newEntropy<br>        <span class="hljs-comment"># 打印每个特征的信息增益</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;第%d个特征的增益为%.3f&quot;</span> % (i, infoGain))<br>        <span class="hljs-comment"># 计算信息增益</span><br>        <span class="hljs-keyword">if</span>(infoGain &gt; bestInfoGain):<br>            <span class="hljs-comment"># 更新信息增益，找到最大的信息增益</span><br>            bestInfoGain = infoGain<br>            <span class="hljs-comment"># 记录信息增益最大的特征的索引值</span><br>            bestFeature = i<br>    <span class="hljs-comment"># 返回信息增益最大的特征的索引值</span><br>    <span class="hljs-keyword">return</span> bestFeature<br></code></pre></td></tr></table></figure><p>创建叶子节点（多数表决原则）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：统计classList中出现次数最多的元素（类标签）</span><br><span class="hljs-string">        服务于递归第两个终止条件</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    classList - 类标签列表</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    sortedClassCount[0][0] - 出现次数最多的元素（类标签）</span><br><span class="hljs-string">&quot;&quot;&quot;</span>   <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">majorityCnt</span>(<span class="hljs-params">classList</span>):</span><br>    classCount = &#123;&#125;<br>    <span class="hljs-comment"># 统计classList中每个元素出现的次数</span><br>    <span class="hljs-keyword">for</span> vote <span class="hljs-keyword">in</span> classList:<br>        <span class="hljs-keyword">if</span> vote <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> classCount.keys():<br>            classCount[vote] = <span class="hljs-number">0</span><br>        classCount[vote] += <span class="hljs-number">1</span><br>    <span class="hljs-comment"># 根据字典的值降序排序</span><br>    <span class="hljs-comment"># operator.itemgetter(1)获取对象的第1列的值</span><br>    sortedClassCount = <span class="hljs-built_in">sorted</span>(classCount.items(), key = operator.itemgetter(<span class="hljs-number">1</span>), reverse = <span class="hljs-literal">True</span>)<br>    <span class="hljs-comment"># 返回classList中出现次数最多的元素</span><br>    <span class="hljs-keyword">return</span> sortedClassCount[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]<br></code></pre></td></tr></table></figure><p>决策树是一种依托决策而建立起来的一种树。在机器学习中，<strong>决策树是一种预测模型</strong>，代表的是一种对象属性与对象值之间的一种<strong>映射关系</strong>，每一个节点代表某个对象，树中的每一个分叉路径代表某个可能的属性值，而每一个叶子节点则对应从根节点到该叶子节点所经历的路径所表示的对象的值。<strong>决策树仅有单一输出。</strong></p><p>递归获得决策树(ID3算法) </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：创建决策树（ID3算法）</span><br><span class="hljs-string">        递归有两个终止条件：1、所有的类标签完全相同，直接返回类标签</span><br><span class="hljs-string">                        2、用完所有标签但是得不到唯一类别的分组，即特征不够用，挑选出现数量最多的类别作为返回</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    dataSet - 训练数据集</span><br><span class="hljs-string">    labels - 分类属性标签</span><br><span class="hljs-string">    featLabels - 存储选择的最优特征标签</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    myTree - 决策树</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">createTree</span>(<span class="hljs-params">dataSet, labels, featLabels</span>):</span><br>    <span class="hljs-comment"># 取分类标签</span><br>    classList = [example[-<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> example <span class="hljs-keyword">in</span> dataSet]<br>    <span class="hljs-comment"># 如果类别完全相同则停止继续划分</span><br>    <span class="hljs-keyword">if</span> classList.count(classList[<span class="hljs-number">0</span>]) == <span class="hljs-built_in">len</span>(classList):<br>        <span class="hljs-keyword">return</span> classList[<span class="hljs-number">0</span>]<br>    <span class="hljs-comment"># 遍历完所有特征时返回出现次数最多的类标签</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(dataSet[<span class="hljs-number">0</span>]) == <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> majorityCnt(classList)<br>    <span class="hljs-comment"># 选择最优特征</span><br>    bestFeat = chooseBestFeatureToSplit(dataSet)<br>    <span class="hljs-comment"># 最优特征的标签</span><br>    bestFeatLabel = labels[bestFeat]<br>    featLabels.append(bestFeatLabel)<br>    <span class="hljs-comment"># 根据最优特征的标签生成树</span><br>    myTree = &#123;bestFeatLabel:&#123;&#125;&#125;<br>    <span class="hljs-comment"># 删除已经使用的特征标签</span><br>    <span class="hljs-keyword">del</span>(labels[bestFeat])<br>    <span class="hljs-comment"># 得到训练集中所有最优解特征的属性值</span><br>    featValues = [example[bestFeat] <span class="hljs-keyword">for</span> example <span class="hljs-keyword">in</span> dataSet]<br>    <span class="hljs-comment"># 去掉重复的属性值</span><br>    uniqueVals = <span class="hljs-built_in">set</span>(featValues)<br>    <span class="hljs-comment"># 遍历特征，创建决策树</span><br>    <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> uniqueVals:<br>        myTree[bestFeatLabel][value] = createTree(splitDataSet(dataSet, bestFeat, value), labels, featLabels)<br>    <span class="hljs-keyword">return</span> myTree<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ML1_2</title>
    <link href="/2020/05/10/ML1_2/"/>
    <url>/2020/05/10/ML1_2/</url>
    
    <content type="html"><![CDATA[<p>K Nearest Neighbour Cluster Algorithm - kd tree</p><span id="more"></span><p>上一节的朴素搜索复杂度为$O(N)$,代码甚至可以精炼为: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment"># x is the data to be classified.</span><br><span class="hljs-comment"># X is the train data</span><br><span class="hljs-comment"># p is the norm parameter</span><br>KNN=<span class="hljs-built_in">sorted</span>(X,key=<span class="hljs-keyword">lambda</span> xi:np.linalg.norm(x-xi,p))[:k]<br></code></pre></td></tr></table></figure><h3 id="kd树"><a href="#kd树" class="headerlink" title="kd树"></a>kd树</h3><p>k近邻最简单的方式是线性扫描，然而对于大量数据效率低，下面介绍kd tree: 注意区别于下一节介绍的决策树！</p><p>输入: $T = {x_{1},x_{2},\cdots,x_{n}}$，其中$x_{i}=(x_{i1},x_{i2},\cdots,x_{ik})^{T}, \ i=1,2,\cdots,n$<br>输出: kd tree</p><p>(1)构造根节点（包含T的k维空间超矩形区域），选择$x_{i,1}$为坐标轴，以T空间中所有$x_{i,1}$的中位数为切分点，将超矩形区域分成两个子区域。<br>(2)由根节点生成深度为1的左右两个子节点（即新生成的两个子区域）<br>(3)对深度为j的节点，选择$x_{i,l}$为切分坐标轴，$l=j(mod\ k)+1$，直到分出的子区域不再存在实例时停止。</p><h4 id="kd树的构建"><a href="#kd树的构建" class="headerlink" title="kd树的构建"></a>kd树的构建</h4><p>$T={(2,3)^{T},(5,4)^{T},(9,6)^{T},(4,7)^{T},(8,1)^{T},(7,2)^{T} }$</p><p>(1)以所有$x_{i1}$为坐标轴，所有$x_{i1}$从小到大组成集合${(2,3)^{T},(4,7)^{T},(5,4)^{T},(7,2)^{T},(8,1)^{T},(9,6)^{T}}$，此时中位数为6 （取$x_{i1}=7$为切分点）<br>(2)此时左子节点${(2,3)^{T},(5,4)^{T},(4,7)^{T}}$，右子节点${ (8,1)^{T},(9,6)^{T} }$<br>(3)$l=j(mod\ k)+1 = 2 \ within\ j=1, k=2$,所以左右子节点对$x_{i2}$进行切分<br>(3)左子节点按$x_{i2}$进行排序组成集合${(2,3)^{T},(5,4)^{T},(4,7)^{T}}$，中位数为4，此时产生深度为2的上下子节点，上节点${(4,7)^{T}}$，下节点${(2,3)^{T}}$，深度为2的上下子节点又可以按照$x_{i1}$切分，此时实例均在切分线上，左侧区域切分结束。<br>(4)同理，(2)中右子节点也可进行划分</p><p>最后产生的kd树为<br>$$<br>x_{i1} \ \ (7,2) \ \ \<br>\ \ \ \swarrow \ \searrow \<br>x_{i2} \ \ \ (5,4) \ \ \ (9,6) \<br>\ \ \ \swarrow \ \searrow   \ \ \ \ \searrow \<br>x_{i1} \ (2,3) \ \ \  (4,7) \ \ \ \ \ (8,1)<br>$$</p><h3 id="kd树的最近邻搜索"><a href="#kd树的最近邻搜索" class="headerlink" title="kd树的最近邻搜索"></a>kd树的最近邻搜索</h3><p>复杂度: $O(\log N) $ (有序序列)<br>输入:已构造的kd树，目标点x<br>输出:x的最近邻</p><p>(1)从根节点出发，递归向下访问kd树，找到包含目标点x的叶节点，此时该节点为近似最近邻<br>(2)以S为圆心，通过(1)中叶节点的圆内部一定存在真正最近邻。</p><h4 id="以电影分类为例-用kd树分类"><a href="#以电影分类为例-用kd树分类" class="headerlink" title="以电影分类为例 用kd树分类"></a>以电影分类为例 用kd树分类</h4>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ML1-1</title>
    <link href="/2020/05/09/ML1_1/"/>
    <url>/2020/05/09/ML1_1/</url>
    
    <content type="html"><![CDATA[<p>K Nearest Neighbour Cluster Algorithm</p><span id="more"></span><p>$Machine learning = Representation + Optimization + Evaluation$<br>机器学习是建立/求解/评估模型的一个过程。</p><h3 id="kNN算法"><a href="#kNN算法" class="headerlink" title="kNN算法"></a>kNN算法</h3><p>输入: 训练实例集 $T = {(x_{1},y_{1}),(x_{2},y_{2}),\cdots,(x_{N},y_{N}),}$<br>其中$x_{i}$为实例的特征向量，$y_{i}$为实例的类别</p><p>输出: 实例$x$所属的类$y$<br>(1) 根据给定的距离度量，在$T$中找到和$x$最近邻的$k$个点，记为邻域$N_{k}(x)$<br>(2) 在邻域$N_{k}(x)$中根据分类决策规则(如多数表决)决定$x$所属的类$y$<br>$$<br>y = \arg \mathop{\max}<em>{c</em>{j}} \mathop{\sum}<em>{x</em>{i} \in N_{k}(x)} I(y_{i}=c_{j})<br>$$<br>Here $i=1,2,\cdots,N; j=1,2,\cdots,k$</p><p><strong>kNN模型三要素</strong>：k值，距离度量以及分类决策规则。</p><h4 id="距离度量"><a href="#距离度量" class="headerlink" title="距离度量"></a>距离度量</h4><p>设特征空间$\chi$是$n$维实数向量空间$R^{n}$,$x_{i},x_{j} \in \chi$,则有<br>$$<br>L_{p}(x_{i},x_{j})=\left( \sum_{l=1}^{n} \left| x_{i}^{l}- x_{j}^{l}\right|^{p} \right)^{\frac{1}{p}}<br>$$<br>此处$p \ge 1$，1对应Manhattan距离，2即为常用的欧式距离，</p><h4 id="实际例子-电影分类"><a href="#实际例子-电影分类" class="headerlink" title="实际例子(电影分类)"></a>实际例子(电影分类)</h4><p>欧式距离定义分类方式。(首先需要归一化数值)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Created on Sun May  9 16:13:12 2020</span><br><span class="hljs-string"></span><br><span class="hljs-string">@author: chen</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">from</span> matplotlib.font_manager <span class="hljs-keyword">import</span> FontProperties<br><span class="hljs-keyword">import</span> matplotlib.lines <span class="hljs-keyword">as</span> mlines<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> operator<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：创建数据集</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    None</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    group - 数据集</span><br><span class="hljs-string">    labels - 分类标签</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">createDataSet</span>():</span><br>    <span class="hljs-comment"># 二维特征</span><br>    group = np.array([[<span class="hljs-number">3</span>,<span class="hljs-number">104</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">100</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">81</span>],[<span class="hljs-number">101</span>,<span class="hljs-number">10</span>],[<span class="hljs-number">99</span>,<span class="hljs-number">5</span>],[<span class="hljs-number">98</span>,<span class="hljs-number">2</span>]])<br>    <span class="hljs-comment"># 对应的标签</span><br>    labels = [<span class="hljs-string">&#x27;爱情片&#x27;</span>,<span class="hljs-string">&#x27;爱情片&#x27;</span>,<span class="hljs-string">&#x27;爱情片&#x27;</span>,<span class="hljs-string">&#x27;动作片&#x27;</span>,<span class="hljs-string">&#x27;动作片&#x27;</span>,<span class="hljs-string">&#x27;动作片&#x27;</span>]<br>    <span class="hljs-keyword">return</span> group, labels<br></code></pre></td></tr></table></figure><p>定义欧氏距离并生成字典获得排序判断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">函数说明：kNN算法，分类器</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">    inX - 用于分类的数据（测试集）</span><br><span class="hljs-string">    dataSet - 用于训练的数据（训练集）（n*1维列向量）</span><br><span class="hljs-string">    labels - 分类标准（n*1维列向量）</span><br><span class="hljs-string">    k - kNN算法参数，选择距离最小的k个点</span><br><span class="hljs-string">    </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">    sortedClassCount[0][0] - 分类结果</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">classify0</span>(<span class="hljs-params">inX, dataSet, labels, k</span>):</span><br>    <span class="hljs-comment"># numpy函数shape返回数组维度，shape[0]即行数</span><br>    dataSetSize = dataSet.shape[<span class="hljs-number">0</span>]<br>    <span class="hljs-comment"># 将inX重复dataSetSize次并排成一列</span><br>    diffMat = np.tile(inX, (dataSetSize, <span class="hljs-number">1</span>)) - dataSet<br>    <span class="hljs-comment">#计算欧式距离</span><br>    <span class="hljs-comment"># 二维特征相减后平方（用diffMat的转置乘diffMat）</span><br>    sqDiffMat = diffMat**<span class="hljs-number">2</span><br>    <span class="hljs-comment"># sum()所有元素相加，sum(0)列相加，sum(1)行相加</span><br>    sqDistances = sqDiffMat.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">1</span>)<br>    <span class="hljs-comment"># 开方，计算出距离</span><br>    distances = sqDistances**<span class="hljs-number">0.5</span><br>    <span class="hljs-comment"># argsort函数返回的是distances值从小到大的--索引值</span><br>    sortedDistIndicies = distances.argsort()<br>    <span class="hljs-comment">#与训练集本集作对比</span><br>    <span class="hljs-comment"># 定义一个记录类别次数的字典</span><br>    classCount = &#123;&#125;<br>    <span class="hljs-comment"># 选择距离最小的k个点</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k):<br>        <span class="hljs-comment"># 取出前k个元素的类别</span><br>        voteIlabel = labels[sortedDistIndicies[i]]<br>        <span class="hljs-comment"># 字典的get()方法，返回指定键的值，如果值不在字典中返回0</span><br>        <span class="hljs-comment"># 计算类别次数</span><br>        classCount[voteIlabel] = classCount.get(voteIlabel, <span class="hljs-number">0</span>) + <span class="hljs-number">1</span><br>    <span class="hljs-comment"># python3中用items()替换python2中的iteritems()</span><br>    <span class="hljs-comment"># key = operator.itemgetter(1)根据字典的值进行排序</span><br>    <span class="hljs-comment"># key = operator.itemgetter(0)根据字典的键进行排序</span><br>    <span class="hljs-comment"># reverse降序排序字典</span><br>    sortedClassCount = <span class="hljs-built_in">sorted</span>(classCount.items(),<br>                              key = operator.itemgetter(<span class="hljs-number">1</span>), reverse = <span class="hljs-literal">True</span>)<br>    <span class="hljs-comment"># 返回次数最多的类别，即所要分类的类别</span><br>    <span class="hljs-keyword">return</span> sortedClassCount[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">def</span> main():<br>    <span class="hljs-comment"># 创建数据集</span><br>    <span class="hljs-attribute">group</span>, labels = createDataSet()<br>    <span class="hljs-comment"># 测试集</span><br>    <span class="hljs-attribute">test</span> =<span class="hljs-meta"> [18,90]</span><br>    <span class="hljs-comment"># kNN分类</span><br>    <span class="hljs-attribute">test_class</span> = classify<span class="hljs-number">0</span>(test, group, labels, <span class="hljs-number">3</span>)<br>    <span class="hljs-comment"># 打印分类结果</span><br>    <span class="hljs-attribute">print</span>(test_class)<br>    <br><span class="hljs-attribute">main</span>()    <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Isotropy-2</title>
    <link href="/2019/01/05/Isotropy2/"/>
    <url>/2019/01/05/Isotropy2/</url>
    
    <content type="html"><![CDATA[<p>Symmetry-mode decompositions</p><span id="more"></span><ul><li>Go to the ISODISTORT Homepage</li></ul><p>Method 4: Mode decomposition of a distorted structure</p><p>import lamno3-magchild.cif</p><p>POSCAR for lamno3-magchild.cif</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">lamno3</span>-magchild<br><span class="hljs-attribute">1</span>.<span class="hljs-number">0</span><br>        <span class="hljs-attribute">5</span>.<span class="hljs-number">7461000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span><br>        <span class="hljs-attribute">0</span>.<span class="hljs-number">0000000000</span>         <span class="hljs-number">7</span>.<span class="hljs-number">6637000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span><br>        <span class="hljs-attribute">0</span>.<span class="hljs-number">0000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>         <span class="hljs-number">5</span>.<span class="hljs-number">5333000000</span><br>   <span class="hljs-attribute">La</span>   Mn    O<br>    <span class="hljs-attribute">4</span>    <span class="hljs-number">4</span>   <span class="hljs-number">12</span><br><span class="hljs-attribute">Direct</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">051300000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">250000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">990499973</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">551299989</span>         <span class="hljs-number">0</span>.<span class="hljs-number">250000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">509500027</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">948700011</span>         <span class="hljs-number">0</span>.<span class="hljs-number">750000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">009500000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">448700011</span>         <span class="hljs-number">0</span>.<span class="hljs-number">750000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">490500003</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">500000000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">500000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">500000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">500000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">500000000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">500000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">484899998</span>         <span class="hljs-number">0</span>.<span class="hljs-number">250000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">077699997</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">984899998</span>         <span class="hljs-number">0</span>.<span class="hljs-number">250000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">422300011</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">515100002</span>         <span class="hljs-number">0</span>.<span class="hljs-number">750000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">922299981</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">015100002</span>         <span class="hljs-number">0</span>.<span class="hljs-number">750000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">577700019</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">308499992</span>         <span class="hljs-number">0</span>.<span class="hljs-number">040800001</span>         <span class="hljs-number">0</span>.<span class="hljs-number">722700000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">808499992</span>         <span class="hljs-number">0</span>.<span class="hljs-number">459199995</span>         <span class="hljs-number">0</span>.<span class="hljs-number">777300000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">691500008</span>         <span class="hljs-number">0</span>.<span class="hljs-number">540799975</span>         <span class="hljs-number">0</span>.<span class="hljs-number">277300000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">191500008</span>         <span class="hljs-number">0</span>.<span class="hljs-number">959200025</span>         <span class="hljs-number">0</span>.<span class="hljs-number">222700000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">691500008</span>         <span class="hljs-number">0</span>.<span class="hljs-number">959200025</span>         <span class="hljs-number">0</span>.<span class="hljs-number">277300000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">191500008</span>         <span class="hljs-number">0</span>.<span class="hljs-number">540799975</span>         <span class="hljs-number">0</span>.<span class="hljs-number">222700000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">308499992</span>         <span class="hljs-number">0</span>.<span class="hljs-number">459199995</span>         <span class="hljs-number">0</span>.<span class="hljs-number">722700000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">808499992</span>         <span class="hljs-number">0</span>.<span class="hljs-number">040800001</span>         <span class="hljs-number">0</span>.<span class="hljs-number">777300000</span><br></code></pre></td></tr></table></figure><p>proceed to next page (basis): </p><p>Select from a list of probable bases: {(1,0,-1),(0,2,0),(1,0,1)}</p><p>Set the supercell basis, Supercell origin, atom matching (by default at first trial)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Isotropy-1</title>
    <link href="/2019/01/05/Isotropy1/"/>
    <url>/2019/01/05/Isotropy1/</url>
    
    <content type="html"><![CDATA[<p>Basic Use</p><span id="more"></span><p>Take the LaMnO3 as example</p><ul><li>Go to <a href="https://stokes.byu.edu/iso/isotropy.php#opennewwindow">isotropy</a> and then ISODISTORT. </li><li>click on “import parent structure from a cif structure file”.</li><li>Set </li></ul><p>Types of distortions to be considered<br>Strain: $\checkmark$<br>Displacive:    all none La $\checkmark$ Mn $\checkmark$ O $\checkmark$<br>Occupational:    all none La Mn O<br>Magnetic:    all none La Mn $\checkmark$ O<br>Rotational:    all none La Mn O</p><p><strong>Then click “Change”</strong></p><ul><li>Method 3 Search over arbitrary k points for specified space group and lattice</li></ul><p>Select #62 Pnma with {(1,1,0),(-1,1,0),(0,0,2)}. The basis must be <strong>right-handed</strong>.</p><p>Click OK, then a new webpage is obtained. </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ISODISTORT</span>: distorted structure: subgroup<br><span class="hljs-attribute">Space</span> Group: <span class="hljs-number">221</span> Pm-<span class="hljs-number">3</span>m Oh-<span class="hljs-number">1</span>, Lattice parameters: a=<span class="hljs-number">3</span>.<span class="hljs-number">94080</span>, b=<span class="hljs-number">3</span>.<span class="hljs-number">94080</span>, c=<span class="hljs-number">3</span>.<span class="hljs-number">94080</span>, alpha=<span class="hljs-number">90</span>.<span class="hljs-number">00000</span>, beta=<span class="hljs-number">90</span>.<span class="hljs-number">00000</span>, gamma=<span class="hljs-number">90</span>.<span class="hljs-number">00000</span><br><span class="hljs-attribute">Default</span> space-group preferences: monoclinic axes a(b)c, monoclinic cell choice <span class="hljs-number">1</span>, orthorhombic axes abc, origin choice <span class="hljs-number">2</span>, hexagonal axes, SSG standard setting<br><span class="hljs-attribute">La</span> <span class="hljs-number">1</span>b (<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), Mn <span class="hljs-number">1</span>a (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), O <span class="hljs-number">3</span>d (<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<br><span class="hljs-attribute">Include</span> strain, displacive <span class="hljs-literal">ALL</span>, magnetic Mn distortions<br><span class="hljs-attribute">Subgroup</span>: <span class="hljs-number">62</span> Pnma, basis of lattice = (<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>), no centering<br><br><span class="hljs-attribute">Finish</span> selecting the distortion mode by selecting one of the following choices:<br><span class="hljs-attribute">62</span>.<span class="hljs-number">441</span> Pnma, basis=&#123;(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">441</span> Pnma, basis=&#123;(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">441</span> Pnma, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(-<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">441</span> Pnma, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">443</span> Pn&#x27;ma, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(-<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">443</span> Pn&#x27;ma, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">444</span> Pnm&#x27;a, basis=&#123;(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">444</span> Pnm&#x27;a, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(-<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">444</span> Pnm&#x27;a, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">445</span> Pnma&#x27;, basis=&#123;(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">447</span> Pnm&#x27;a&#x27;, basis=&#123;(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">447</span> Pnm&#x27;a&#x27;, basis=&#123;(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">447</span> Pnm&#x27;a&#x27;, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(-<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">447</span> Pnm&#x27;a&#x27;, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">448</span> Pn&#x27;ma&#x27;, basis=&#123;(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">448</span> Pn&#x27;ma&#x27;, basis=&#123;(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">448</span> Pn&#x27;ma&#x27;, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(-<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">448</span> Pn&#x27;ma&#x27;, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">449</span> Pn&#x27;m&#x27;a&#x27;, basis=&#123;(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">449</span> Pn&#x27;m&#x27;a&#x27;, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(-<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">449</span> Pn&#x27;m&#x27;a&#x27;, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">48</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">450</span> P_anma, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(-<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">24</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">450</span> P_anma, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">24</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">451</span> P_bnma, basis=&#123;(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">24</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">453</span> P_Anma, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">24</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">454</span> P_Bnma, basis=&#123;(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">24</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">454</span> P_Bnma, basis=&#123;(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">24</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">456</span> P_Inma, basis=&#123;(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">24</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">456</span> P_Inma, basis=&#123;(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">2</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">24</span><br><span class="hljs-attribute">62</span>.<span class="hljs-number">456</span> P_Inma, basis=&#123;(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)&#125;, origin=(-<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), s=<span class="hljs-number">4</span>, i=<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><p>Choose <code>62.448 Pn&#39;ma&#39;, basis=&#123;(-1,-1,0),(0,0,2),(-1,1,0)&#125;, origin=(0,0,0), s=4, i=48</code></p><p>62.448为磁群，s和i?</p><p>New webpage is obtained and select “Save interactive distortion” and a file named “data.isoviz” is downloaded. </p><p>Only $mX_{5}^{+}$ is active experimentally. $R_{4}^{+}$ and $M_{3}^{+}$ modes contribute octahedral rotations, while $M_{2}^{+}$ mode contributes a J-T stretch. </p><p>Click “Save interactive diffraction” at website and a file named “data.isovizq” is obtained. (ISOVIZQ)</p><p>POSCAR for lamno3-cubic</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">lamno3</span>-cubic<br><span class="hljs-attribute">1</span>.<span class="hljs-number">0</span><br>        <span class="hljs-attribute">3</span>.<span class="hljs-number">9408000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span><br>        <span class="hljs-attribute">0</span>.<span class="hljs-number">0000000000</span>         <span class="hljs-number">3</span>.<span class="hljs-number">9408000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span><br>        <span class="hljs-attribute">0</span>.<span class="hljs-number">0000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">0000000000</span>         <span class="hljs-number">3</span>.<span class="hljs-number">9408000000</span><br>   <span class="hljs-attribute">La</span>   Mn    O<br>    <span class="hljs-attribute">1</span>    <span class="hljs-number">1</span>    <span class="hljs-number">3</span><br><span class="hljs-attribute">Direct</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">500000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">500000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">500000000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">500000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">500000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span><br>     <span class="hljs-attribute">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">000000000</span>         <span class="hljs-number">0</span>.<span class="hljs-number">500000000</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VASP-Basis</title>
    <link href="/2018/11/07/VASP_03/"/>
    <url>/2018/11/07/VASP_03/</url>
    
    <content type="html"><![CDATA[<p>Basic calculations using VASP</p><span id="more"></span><h3 id="Lattice-optimization"><a href="#Lattice-optimization" class="headerlink" title="Lattice optimization"></a>Lattice optimization</h3><p>This part includes the optimization of lattice parameters and ionic position.</p><h5 id="Lattice-parameters"><a href="#Lattice-parameters" class="headerlink" title="Lattice parameters"></a>Lattice parameters</h5><p>For cubic, we can use the ISIF=2 + change the scale factor in POSCAR, using the Birch-Murnaghan Equation to obtain the optimized values. </p><p><a href="https://en.wikipedia.org/wiki/Birch%E2%80%93Murnaghan_equation_of_state">Birch-Murnaghan equation of state</a>:<br>$$<br>E(V)=E_{0}+\frac{9V_{0}B_{0}}{16} \left{ \left[ \left( \frac{V_{0}}{V} \right)^{\frac{2}{3}} -1 \right]^{3} B_{0}^{‘} + \left[ \left( \frac{V_{0}}{V} \right)^{\frac{2}{3}} -1 \right]^{2} \left[ 6 - 4 \left( \frac{V_{0}}{V} \right)^{\frac{2}{3}} \right] \right}<br>$$</p><p>For example: </p><p>We have INCAR, KPOINTS, POTCAR, vasp.sh in fold ./origin.</p><p>We can use the rs.sh:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(seq 0.970 0.005 1.030)<br><span class="hljs-keyword">do</span><br>mkdir bm<span class="hljs-variable">$i</span><br><span class="hljs-built_in">cd</span> bm<span class="hljs-variable">$i</span><br>cp ../origin/&#123;vasp.sh,POTCAR,KPOINTS,INCAR&#125; ./<br>cat &gt; POSCAR &lt;&lt;!<br>STO<br><span class="hljs-variable">$i</span><br>3.905 0.000 0.000<br>0.000 3.905 0.000<br>0.000 0.000 3.905<br>Sr  Ti  O<br> 1   1  3<br>Direct<br>0.0 0.0 0.0<br>0.5 0.5 0.5<br>0.0 0.5 0.5<br>0.5 0.0 0.5<br>0.5 0.5 0.0 <br>!<br>yhbatch -N 1 -n 24 -p bigdata ./vasp.sh<br><span class="hljs-built_in">cd</span> ..<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>After calculations, we use bash to obtain the results: </p><p><code>for i in $(seq 0.970 0.005 1.030); do cd bm$i; grep &#39;&#39;</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VASP.5.4.4+wannier90_v2.1+vtst+OPTCELL</title>
    <link href="/2018/11/04/VASP_02/"/>
    <url>/2018/11/04/VASP_02/</url>
    
    <content type="html"><![CDATA[<p>The way to compile vasp equipped with related packages, including wannier90, VTST, constrained optimization.  </p><span id="more"></span><p>Files: </p><ol><li>vasp.5.4.4.tar.gz </li><li>patch.5.4.4.16052018.gz</li><li>vasp.5.lib.tar.gz</li></ol><p>Operations: </p><ol><li>Extract 1 and 3 using tar -zxvf, 2 by gun zip</li><li>Move patch.5.4.4.16052018 into vasp.5.4.4 and go to the root of VASP</li><li>patch -p0 &lt; patch.5.4.4.16052018 (only for vasp.5.4.4)</li></ol><p>Below are the VASP2WANNIER90v2 part, thanks for <a href="https://github.com/Chengcheng-Xiao/VASP2WAN90_v2_fix">C.C.Xiao</a><br>4. Download <a href="https://github.com/wannier-developers/wannier90/releases/tag/v2.1">wannier90_v2.1</a>, then decompress and go to the root of wannier90-2.1.0<br>5. cp config/make.inc.ifort ./make.inc</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs ini"> <span class="hljs-comment">#=====================================================</span><br> <span class="hljs-comment"># For Linux with intel version 11/12 on 64bit machines</span><br> <span class="hljs-comment">#=====================================================</span><br><span class="hljs-attr">F90</span> = ifort<br><span class="hljs-attr">COMMS</span>=mpi<br><span class="hljs-attr">MPIF90</span>=mpiifort<br><span class="hljs-attr">FCOPTS</span>=-O2 <br><span class="hljs-attr">LDOPTS</span>=-O2 <br><br> <span class="hljs-comment">#========================================================</span><br> <span class="hljs-comment"># Intel mkl libraries. Set LIBPATH if not in default path</span><br> <span class="hljs-comment">#========================================================</span><br><br><span class="hljs-attr">LIBDIR</span> = &#123;MKLROOT&#125;/mkl/lib/intel64<br><span class="hljs-attr">LIBS</span>   =  -L$(LIBDIR) -lmkl_core -lmkl_intel_lp64 -lmkl_sequential -lpthread<br><br> <span class="hljs-comment">#=======================</span><br> <span class="hljs-comment"># ATLAS Blas and LAPACK</span><br> <span class="hljs-comment">#=======================</span><br> <span class="hljs-comment">#LIBDIR = &#123;Root_vasp.5.lib&#125;</span><br> <span class="hljs-comment">#LIBS = -L$(LIBDIR)  -llapack -lf77blas -lcblas -latlas</span><br></code></pre></td></tr></table></figure><ol start="6"><li>make all, then make test (you will get the wannier90.x and libwannier.a)</li><li>Fix the <a href="https://github.com/Chengcheng-Xiao/VASP2WAN90_v2_fix">VASP2WANNIER90v2</a> interface</li></ol><p>Below is Constrained Optimization:<br>8. Two methods:<br>For Orthorhombic:<br>vi src/constr_cell_relax.F</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs routeros">      SUBROUTINE CONSTR_CELL_RELAX(FCELL)<br>      USE PREC<br>      REAL(Q) FCELL(3,3),SAVE(3)<br>      LOGICAL FILFLG<br>      INTEGER ICELL(3)<br><br>      INQUIRE(<span class="hljs-attribute">FILE</span>=<span class="hljs-string">&#x27;OPTCELL&#x27;</span>,EXIST=FILFLG)<br>      <span class="hljs-keyword">IF</span> (FILFLG) THEN<br>        OPEN(67,<span class="hljs-attribute">FILE</span>=<span class="hljs-string">&#x27;OPTCELL&#x27;</span>,FORM=&#x27;FORMATTED&#x27;,STATUS=&#x27;OLD&#x27;)<br>          READ(67,<span class="hljs-string">&quot;(3I1)&quot;</span>) (ICELL(I),<span class="hljs-attribute">I</span>=1,3)<br>        CLOSE(67)<br>        <span class="hljs-keyword">DO</span> <span class="hljs-attribute">I</span>=1,3<br>           SAVE(I)=FCELL(I,I)<br>        ENDDO<br>        <span class="hljs-attribute">FCELL</span>=0.0D0<br>        <span class="hljs-keyword">DO</span> <span class="hljs-attribute">I</span>=1,3<br>           <span class="hljs-keyword">IF</span> (ICELL(I)==1) FCELL(I,I)=SAVE(I)<br>        ENDDO<br>      ENDIF<br><br>!     just one<span class="hljs-built_in"> simple </span>example<br>!     relaxation <span class="hljs-keyword">in</span> x directions only<br>!      <span class="hljs-attribute">SAVE</span>=FCELL(1,1)<br>!      <span class="hljs-attribute">FCELL</span>=0   ! F90 style: <span class="hljs-builtin-name">set</span> the whole array <span class="hljs-keyword">to</span> zero<br>!      FCELL(1,1)=SAVE<br>!     relaxation <span class="hljs-keyword">in</span> z direction only<br>!      <span class="hljs-attribute">SAVE</span>=FCELL(3,3)<br>!      <span class="hljs-attribute">FCELL</span>=0   ! F90 style: <span class="hljs-builtin-name">set</span> the whole array <span class="hljs-keyword">to</span> zero<br>!      FCELL(3,3)=SAVE<br><br>      RETURN<br>      END SUBROUTINE<br></code></pre></td></tr></table></figure><p>For example:<br>ISIF=3 in INCAR<br>and OPTCELL file with &quot;<em>a</em> <em>b</em> <em>c</em>&quot; in text</p><p>For arbitrary crystal system: </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">      !SUBROUTINE CONSTR_CELL_RELAX(FCELL)<br>      SUBROUTINE CONSTR_CELL_RELAX(IU5,IU0,FCELL)      <br>      USE PREC<br>      <span class="hljs-type">REAL</span>(Q) FCELL(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)!,SAVE(<span class="hljs-number">3</span>)<br>      !LOGICAL FILFLG<br>      !<span class="hljs-type">INTEGER</span> ICELL(<span class="hljs-number">3</span>)<br><br>      <span class="hljs-type">INTEGER</span> IU5,IU0<br>      ! <span class="hljs-keyword">local</span> variables<br>      <span class="hljs-type">INTEGER</span> IDUM, N, IERR, I, J<br>      <span class="hljs-type">REAL</span>(q) RDUM<br>      COMPLEX(q) CDUM<br>      LOGICAL LOPEN,LDUM<br>      <span class="hljs-type">CHARACTER</span> (<span class="hljs-number">1</span>) :: CHARAC<br><br>!     just one simple example<br>!     relaxation <span class="hljs-keyword">in</span> x directions <span class="hljs-keyword">only</span><br>!      SAVE=FCELL(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br>!      FCELL=<span class="hljs-number">0</span>   ! F90 style: <span class="hljs-keyword">set</span> the whole <span class="hljs-keyword">array</span> <span class="hljs-keyword">to</span> zero<br>!      FCELL(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)=SAVE<br>!     relaxation <span class="hljs-keyword">in</span> z direction <span class="hljs-keyword">only</span><br>!      SAVE=FCELL(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<br>!      FCELL=<span class="hljs-number">0</span>   ! F90 style: <span class="hljs-keyword">set</span> the whole <span class="hljs-keyword">array</span> <span class="hljs-keyword">to</span> zero<br>!      FCELL(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)=SAVE<br><br>      LOGICAL IOPTCELL<br>      <span class="hljs-type">INTEGER</span> :: ICELL(<span class="hljs-number">9</span>)=<span class="hljs-number">1</span><br>      <br>      LOPEN=.<span class="hljs-keyword">FALSE</span>.<br>      <span class="hljs-keyword">OPEN</span>(UNIT=IU5,FILE=&quot;INCAR&quot;,STATUS=<span class="hljs-string">&#x27;OLD&#x27;</span>)<br>     <br>      IOPTCELL=.<span class="hljs-keyword">FALSE</span>.<br>      <span class="hljs-keyword">CALL</span> RDATAB(.<span class="hljs-keyword">FALSE</span>.,&quot;INCAR&quot;,IU5,<span class="hljs-string">&#x27;IOPTCELL&#x27;</span>,<span class="hljs-string">&#x27;=&#x27;</span>,<span class="hljs-string">&#x27;#&#x27;</span>,<span class="hljs-string">&#x27;;&#x27;</span>,<span class="hljs-string">&#x27;I&#x27;</span>, &amp;<br>     &amp;            ICELL,RDUM,CDUM,LDUM,CHARAC,N,<span class="hljs-number">9</span>,IERR)<br>      <span class="hljs-keyword">IF</span> (((IERR/=<span class="hljs-number">0</span>).<span class="hljs-keyword">AND</span>.(IERR/=<span class="hljs-number">3</span>)).<span class="hljs-keyword">OR</span>. &amp;<br>     &amp;                    ((IERR==<span class="hljs-number">0</span>).<span class="hljs-keyword">AND</span>.(N&lt;<span class="hljs-number">1</span>))) <span class="hljs-keyword">THEN</span><br>         <span class="hljs-keyword">IF</span> (IU0&gt;=<span class="hljs-number">0</span>) &amp;<br>            <span class="hljs-keyword">WRITE</span>(IU0,*)<span class="hljs-string">&#x27;Error reading item &#x27;&#x27;IOPTCELL&#x27;&#x27; from file INCAR.&#x27;</span><br>         ICELL(<span class="hljs-number">6</span>)=<span class="hljs-number">1</span><br>      ENDIF<br><br>      ! <span class="hljs-keyword">WRITE</span>(*,*) ICELL<br>      ! <span class="hljs-keyword">set</span> logical<br>      <span class="hljs-keyword">IF</span> (<span class="hljs-keyword">ANY</span>(ICELL .NE. (/<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>/) )) <span class="hljs-keyword">THEN</span><br>         IOPTCELL=.<span class="hljs-keyword">TRUE</span>.<br>        !<span class="hljs-keyword">IF</span> (IU0&gt;=<span class="hljs-number">0</span>) <span class="hljs-keyword">WRITE</span>(IU0,<span class="hljs-string">&#x27;(X,A,I1,I1,I1,I1,I1,I1,I1,I1,I1)&#x27;</span>) <span class="hljs-string">&#x27;Constraining cell:&#x27;</span>,ICELL(<span class="hljs-number">1</span>),ICELL(<span class="hljs-number">2</span>),ICELL(<span class="hljs-number">3</span>),ICELL(<span class="hljs-number">4</span>),ICELL(<span class="hljs-number">5</span>),ICELL(<span class="hljs-number">6</span>),ICELL(<span class="hljs-number">7</span>),ICELL(<span class="hljs-number">8</span>),ICELL(<span class="hljs-number">9</span>)<br>        <span class="hljs-keyword">IF</span> (IU0&gt;=<span class="hljs-number">0</span>) <span class="hljs-keyword">WRITE</span>(IU0,<span class="hljs-string">&#x27;(X,A,3I3,A,3I3,A,3I3)&#x27;</span>) <span class="hljs-string">&#x27;Constraining cell:&#x27;</span>,ICELL(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>),<span class="hljs-string">&#x27;  |&#x27;</span>,ICELL(<span class="hljs-number">4</span>:<span class="hljs-number">6</span>),<span class="hljs-string">&#x27;  |&#x27;</span>,ICELL(<span class="hljs-number">7</span>:<span class="hljs-number">9</span>)<br>      ENDIF<br>      <span class="hljs-keyword">CLOSE</span>(IU5)<br><br>      <span class="hljs-keyword">IF</span> (IOPTCELL) <span class="hljs-keyword">THEN</span><br>         <span class="hljs-keyword">DO</span> J=<span class="hljs-number">1</span>,<span class="hljs-number">3</span><br>         <span class="hljs-keyword">DO</span> I=<span class="hljs-number">1</span>,<span class="hljs-number">3</span> <br>            <span class="hljs-keyword">IF</span> (ICELL((I<span class="hljs-number">-1</span>)*<span class="hljs-number">3</span>+J)==<span class="hljs-number">0</span>) FCELL(I,J)=<span class="hljs-number">0.0</span><br>         ENDDO<br>         ENDDO<br>      ENDIF<br><br>      <span class="hljs-keyword">RETURN</span><br>      <span class="hljs-keyword">END</span> SUBROUTINE<br></code></pre></td></tr></table></figure><p>and modify src/main.F(line 3559), replace <code>CALL CONSTR_CELL_RELAX(D2SIF)</code> with <code>CALL CONSTR_CELL_RELAX(IO%IU5,IO%IU0,D2SIF)</code></p><p>For example:<br>ISIF=3<br>IOPTCELL = $a_{1}$ $a_{2}$ $a_{3}$ $b_{1}$ $b_{2}$ $b_{3}$ $c_{1}$ $c_{2}$ $c_{3}$ in INCAR<br>IOPCELL denotes the lattice matrix elements in POSCAR from line 3 to 5 whether fixed (0) or free (1)</p><p>$$<br>\begin{bmatrix}<br>a_{1} &amp; b_{1} &amp; c_{1} \<br>a_{2} &amp; b_{2} &amp; c_{2} \<br>a_{3} &amp; b_{3} &amp; c_{3}<br>\end{bmatrix}<br>$$</p><p>Below is VTST:<br>9. Download <a href="http://theory.cm.utexas.edu/vtsttools/download.html">vtst</a> and decompress<br>10. Install<br>vi src/main.F(line 3146)<br>replace </p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-meta">CALL</span> CHAIN_FORCE(T_INFO<span class="hljs-name">%NIONS</span>,DYN<span class="hljs-name">%POSION</span>,TOTEN,TIFOR, &amp;<br>     LATT_CUR<span class="hljs-name">%A</span>,LATT_CUR<span class="hljs-name">%B</span>,IO<span class="hljs-name">%IU6</span>)<br></code></pre></td></tr></table></figure><p>with</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-meta">CALL</span> CHAIN_FORCE(T_INFO<span class="hljs-name">%NIONS</span>,DYN<span class="hljs-name">%POSION</span>,TOTEN,TIFOR, &amp;<br>     TSIF,LATT_CUR<span class="hljs-name">%A</span>,LATT_CUR<span class="hljs-name">%B</span>,IO<span class="hljs-name">%IU6</span>)<br></code></pre></td></tr></table></figure><p>To install, download the files in vtst/src into vasp.5.4.4/src. The file chain.F is replaced, so back up the old version.</p><p>vi src/.objects</p><p>Add <code>bfgs.o dynmat.o  instanton.o  lbfgs.o sd.o   cg.o dimer.o bbm.o fire.o lanczos.o neb.o  qm.o opt.o</code> behind <code>chain.o</code></p><p>This code will only be run if IMAGES is set in the INCAR file, or if ICHAIN is set, to specify which method should be run.</p><p>ICHAIN=0: Nudged elastic band (default)<br>ICHAIN=1: Dynamical matrix<br>ICHAIN=2: Dimer<br>ICHAIN=3: Lanczos<br>11. makefile.include in vasp root</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment"># Precompiler options</span><br><span class="hljs-attr">CPP_OPTIONS</span>= <span class="hljs-string">-DHOST=\&quot;LinuxIFC\&quot;\</span><br>             <span class="hljs-meta">-DMPI</span> <span class="hljs-string">-DMPI_BLOCK=8000 \</span><br>             <span class="hljs-meta">-Duse_collective</span> <span class="hljs-string">\</span><br>             <span class="hljs-meta">-DscaLAPACK</span> <span class="hljs-string">\</span><br>             <span class="hljs-meta">-DCACHE_SIZE</span>=<span class="hljs-string">4000 \</span><br>             <span class="hljs-meta">-Davoidalloc</span> <span class="hljs-string">\</span><br>             <span class="hljs-meta">-Duse_bse_te</span> <span class="hljs-string">\</span><br>             <span class="hljs-meta">-Dtbdyn</span> <span class="hljs-string">\</span><br>             <span class="hljs-meta">-Duse_shmem</span> <span class="hljs-string">-DVASP2WANNIER90v2</span><br><br><span class="hljs-attr">CPP</span>        = <span class="hljs-string">fpp -f_com=no -free -w0  $*$(FUFFIX) $*$(SUFFIX) $(CPP_OPTIONS)</span><br><br><span class="hljs-attr">FC</span>         = <span class="hljs-string">mpiifort</span><br><span class="hljs-attr">FCL</span>        = <span class="hljs-string">mpiifort -mkl=sequential -lstdc++</span><br><br><span class="hljs-attr">FREE</span>       = <span class="hljs-string">-free -names lowercase</span><br><br><span class="hljs-attr">FFLAGS</span>     = <span class="hljs-string">-assume byterecl -w</span><br><span class="hljs-attr">OFLAG</span>      = <span class="hljs-string">-O2</span><br><span class="hljs-attr">OFLAG_IN</span>   = <span class="hljs-string">$(OFLAG)</span><br><span class="hljs-attr">DEBUG</span>      = <span class="hljs-string">-O0</span><br><br><span class="hljs-attr">MKLROOT</span> = <span class="hljs-string">&#123;MKLROOT&#125;</span><br><span class="hljs-attr">MKL_PATH</span>   = <span class="hljs-string">$(MKLROOT)/lib/intel64</span><br><span class="hljs-attr">BLAS</span>       = <span class="hljs-string">-L$(MKL_PATH) -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread</span><br><span class="hljs-attr">LAPACK</span>     = <span class="hljs-string">-L$(MKL_PATH) -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread</span><br><span class="hljs-attr">BLACS</span>      = <span class="hljs-string">-L$(MKL_PATH) -lmkl_blacs_intelmpi_lp64</span><br><span class="hljs-attr">SCALAPACK</span>  = <span class="hljs-string">$(MKL_PATH)/libmkl_scalapack_lp64.a $(MKL_PATH)/libmkl_scalapack_ilp64.a $(BLACS)</span><br><br><span class="hljs-attr">OBJECTS</span>    = <span class="hljs-string">fftmpiw.o fftmpi_map.o fft3dlib.o fftw3d.o &#123;FFTWROOT&#125;/lib/libfftw3_mpi.a</span><br><br><span class="hljs-attr">INCS</span>       = <span class="hljs-string">-I/&#123;FFTWROOT&#125;/include</span><br><br><span class="hljs-attr">LLIBS</span>      = <span class="hljs-string">&#123;wannier90-2.1.0_ROOT&#125;/libwannier.a $(SCALAPACK) $(LAPACK) $(BLAS)</span><br><br><br><span class="hljs-attr">OBJECTS_O1</span> <span class="hljs-string">+= fftw3d.o fftmpi.o fftmpiw.o</span><br><span class="hljs-attr">OBJECTS_O2</span> <span class="hljs-string">+= fft3dlib.o</span><br><br><span class="hljs-comment"># For what used to be vasp.5.lib</span><br><span class="hljs-attr">CPP_LIB</span>    = <span class="hljs-string">$(CPP)</span><br><span class="hljs-attr">FC_LIB</span>     = <span class="hljs-string">$(FC)</span><br><span class="hljs-attr">CC_LIB</span>     = <span class="hljs-string">icc</span><br><span class="hljs-attr">CFLAGS_LIB</span> = <span class="hljs-string">-O</span><br><span class="hljs-attr">FFLAGS_LIB</span> = <span class="hljs-string">-O1</span><br><span class="hljs-attr">FREE_LIB</span>   = <span class="hljs-string">$(FREE)</span><br><br><span class="hljs-attr">OBJECTS_LIB</span>= <span class="hljs-string">linpack_double.o getshmem.o</span><br><br><span class="hljs-comment"># For the parser library</span><br><span class="hljs-attr">CXX_PARS</span>   = <span class="hljs-string">icpc</span><br><br><span class="hljs-attr">LIBS</span>       <span class="hljs-string">+= parser</span><br><span class="hljs-attr">LLIBS</span>      <span class="hljs-string">+= -Lparser -lparser -lstdc++</span><br><br><span class="hljs-comment"># Normally no need to change this</span><br><span class="hljs-attr">SRCDIR</span>     = <span class="hljs-string">../../src</span><br><span class="hljs-attr">BINDIR</span>     = <span class="hljs-string">../../bin</span><br><br><span class="hljs-comment">#================================================</span><br><span class="hljs-comment"># GPU Stuff</span><br><br><span class="hljs-attr">CPP_GPU</span>    = <span class="hljs-string">-DCUDA_GPU -DRPROMU_CPROJ_OVERLAP -DUSE_PINNED_MEMORY -DCUFFT_MIN=28 -UscaLAPACK</span><br><br><span class="hljs-attr">OBJECTS_GPU</span> = <span class="hljs-string">fftmpiw.o fftmpi_map.o fft3dlib.o fftw3d_gpu.o fftmpiw_gpu.o</span><br><br><span class="hljs-attr">CC</span>         = <span class="hljs-string">icc</span><br><span class="hljs-attr">CXX</span>        = <span class="hljs-string">icpc</span><br><span class="hljs-attr">CFLAGS</span>     = <span class="hljs-string">-fPIC -DADD_ -Wall -openmp -DMAGMA_WITH_MKL -DMAGMA_SETAFFINITY -DGPUSHMEM=300 -DHAVE_CUBLAS</span><br><br><span class="hljs-attr">CUDA_ROOT</span>  <span class="hljs-string">?= /usr/local/cuda/</span><br><span class="hljs-attr">NVCC</span>       :<span class="hljs-string">= $(CUDA_ROOT)/bin/nvcc -ccbin=icc</span><br><span class="hljs-attr">CUDA_LIB</span>   :<span class="hljs-string">= -L$(CUDA_ROOT)/lib64 -lnvToolsExt -lcudart -lcuda -lcufft -lcublas</span><br><br><span class="hljs-attr">GENCODE_ARCH</span>    :<span class="hljs-string">= -gencode=arch=compute_30,code=\&quot;sm_30,compute_30\&quot; \</span><br>                   <span class="hljs-meta">-gencode</span>=<span class="hljs-string">arch=compute_35,code=\&quot;sm_35,compute_35\&quot; \</span><br>                   <span class="hljs-meta">-gencode</span>=<span class="hljs-string">arch=compute_60,code=\&quot;sm_60,compute_60\&quot;</span><br><br><span class="hljs-attr">MPI_INC</span>    = <span class="hljs-string">$(I_MPI_ROOT)/include64/</span><br></code></pre></td></tr></table></figure><ul><li>VASP is a commercial package, be sure you have a proper license to use it.</li></ul>]]></content>
    
    
    <categories>
      
      <category>Software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VASP</tag>
      
      <tag>Physics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>basic_output</title>
    <link href="/2018/11/01/basic-output/"/>
    <url>/2018/11/01/basic-output/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VASP01</title>
    <link href="/2018/11/01/VASP_01/"/>
    <url>/2018/11/01/VASP_01/</url>
    
    <content type="html"><![CDATA[<p>Shell bash for ENCUT test, k-mesh test. </p><span id="more"></span><p>We give a quick simple.</p><p>A folder (named ‘origin’) including these files below is necessary including: </p><p>INCAR </p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">SYSTEM</span> = SrTiO3<br><span class="hljs-attr">ISTART</span> = <span class="hljs-number">0</span><br><span class="hljs-attr">ICHARG</span> = <span class="hljs-number">2</span><br><span class="hljs-attr">NPAR</span> = <span class="hljs-number">4</span><br><span class="hljs-attr">ENCUT</span> = <span class="hljs-number">500</span><br><span class="hljs-attr">EDIFF</span> = <span class="hljs-number">1</span>E-<span class="hljs-number">6</span><br><span class="hljs-attr">EDIFFG</span> = -<span class="hljs-number">0.01</span><br><span class="hljs-attr">NELM</span> = <span class="hljs-number">999</span><br><span class="hljs-attr">ISMEAR</span> = <span class="hljs-number">0</span><br><span class="hljs-attr">SIGMA</span> = <span class="hljs-number">0.1</span><br><span class="hljs-attr">LCHARG</span> = .F.<br><span class="hljs-attr">LWAVE</span> = .F.<br><span class="hljs-comment"># PBEsol functionals is more precise for TMOs. </span><br><span class="hljs-attr">GGA</span> = PS <br></code></pre></td></tr></table></figure><p>KPOINTS</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">k</span>-points<br><span class="hljs-attribute">0</span><br><span class="hljs-attribute">M</span><br><span class="hljs-attribute">9</span> <span class="hljs-number">9</span> <span class="hljs-number">9</span><br><span class="hljs-attribute">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>POSCAR</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SrTiO3</span>(Pm-<span class="hljs-number">3</span>m)<br><span class="hljs-attribute">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">3</span>.<span class="hljs-number">905</span> <span class="hljs-number">0</span>.<span class="hljs-number">000</span> <span class="hljs-number">0</span>.<span class="hljs-number">000</span><br><span class="hljs-attribute">0</span>.<span class="hljs-number">000</span> <span class="hljs-number">3</span>.<span class="hljs-number">905</span> <span class="hljs-number">0</span>.<span class="hljs-number">000</span><br><span class="hljs-attribute">0</span>.<span class="hljs-number">000</span> <span class="hljs-number">0</span>.<span class="hljs-number">000</span> <span class="hljs-number">3</span>.<span class="hljs-number">905</span><br><span class="hljs-attribute">Sr</span>   Ti   O<br> <span class="hljs-attribute">1</span>    <span class="hljs-number">1</span>   <span class="hljs-number">3</span><br><span class="hljs-attribute">Direct</span><br><span class="hljs-attribute">0</span>.<span class="hljs-number">0</span> <span class="hljs-number">0</span>.<span class="hljs-number">0</span> <span class="hljs-number">0</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">0</span>.<span class="hljs-number">5</span> <span class="hljs-number">0</span>.<span class="hljs-number">5</span> <span class="hljs-number">0</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">0</span>.<span class="hljs-number">0</span> <span class="hljs-number">0</span>.<span class="hljs-number">5</span> <span class="hljs-number">0</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">0</span>.<span class="hljs-number">5</span> <span class="hljs-number">0</span>.<span class="hljs-number">0</span> <span class="hljs-number">0</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">0</span>.<span class="hljs-number">5</span> <span class="hljs-number">0</span>.<span class="hljs-number">5</span> <span class="hljs-number">0</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>POTCAR using Sr_sv, Ti_sv, O and change LEXCH to PS</p><p>and a vasp.sh for job submit</p><h4 id="ENCUT-test"><a href="#ENCUT-test" class="headerlink" title="ENCUT-test"></a>ENCUT-test</h4><p>A run_enc.sh is used to fix this problem.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(seq 300 50 900)<br><span class="hljs-keyword">do</span><br>mkdir <span class="hljs-built_in">test</span><span class="hljs-variable">$i</span><br><span class="hljs-built_in">cd</span> <span class="hljs-built_in">test</span><span class="hljs-variable">$i</span><br>cp ../origin/&#123;vasp.sh,POTCAR,KPOINTS,POSCAR&#125; ./<br>cat &gt; INCAR &lt;&lt;!<br>SYSTEM = SrTiO3<br>ISTART = 0<br>ICHARG = 2<br>NPAR = 4<br>ENCUT = <span class="hljs-variable">$i</span><br>EDIFF = 1E-6<br>EDIFFG = -0.01<br>NELM = 999<br>ISMEAR = 0<br>SIGMA = 0.1<br>LCHARG = .F.<br>LWAVE = .F.<br><span class="hljs-comment"># PBEsol functionals is more precise for TMOs. </span><br>GGA = PS<br>!<br>yhbatch -N 1 -n 24 -p bigdata ./vasp.sh<br><span class="hljs-built_in">cd</span> ..<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>After calculations (make sure they’re converged well), then processing: </p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-constructor">$(<span class="hljs-params">seq</span> 300 50 900)</span>; <span class="hljs-keyword">do</span> cd test$i; <span class="hljs-keyword">do</span> echo -e $i,<span class="hljs-constructor">$(<span class="hljs-params">grep</span> &#x27;  <span class="hljs-params">without</span>&#x27; OUTCAR|<span class="hljs-params">tail</span> -<span class="hljs-params">n</span> 1| <span class="hljs-params">awk</span> &#x27;&#123;<span class="hljs-params">print</span> $7&#125;&#x27;; <span class="hljs-params">cd</span> $OLDPWD; <span class="hljs-params">done</span> &gt; <span class="hljs-params">encut</span>.<span class="hljs-params">data</span></span><br></code></pre></td></tr></table></figure><p>Using python, we can get the curve: </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#!/usr/bin/env python<br># Written <span class="hljs-keyword">by</span> Aaron Chen<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> math<br><br>x,y = np.loadtxt(<span class="hljs-string">&#x27;encut.dat&#x27;</span>, delimiter =<span class="hljs-string">&#x27;,&#x27;</span>, usecols=(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>), unpack=<span class="hljs-keyword">True</span>)<br><br>plt.xlabel(<span class="hljs-string">&#x27;ENCUT / eV &#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;$E_&#123;tot&#125;$ / eV&#x27;</span>)<br>plt.plot(x,y, <span class="hljs-string">&#x27;rs-&#x27;</span>, linewidth=<span class="hljs-number">2.0</span>)<br>plt.<span class="hljs-keyword">show</span>()<br></code></pre></td></tr></table></figure><p>This bash can be also used in all INCAR-tag test with some minor modifications.</p><h4 id="K-grid-test"><a href="#K-grid-test" class="headerlink" title="K-grid test"></a>K-grid test</h4><p>A run_kmesh.sh is used to fix this problem.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(seq 5 1 15)<br><span class="hljs-keyword">do</span><br>mkdir ktest<span class="hljs-variable">$i</span><br><span class="hljs-built_in">cd</span> ktest<span class="hljs-variable">$i</span><br>cp ../origin/&#123;vasp.sh,POTCAR,INCAR,POSCAR&#125; ./<br>cat &gt; KPOINRS &lt;&lt;!<br>k-points<br>0<br>M<br><span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span><br>0 0 0<br>!<br>yhbatch -N 1 -n 24 -p bigdata ./vasp.sh<br><span class="hljs-built_in">cd</span> ..<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p><strong>Confirm its accuracy!</strong><br>Then processing: </p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-constructor">$(<span class="hljs-params">seq</span> 5 1 15)</span>; <span class="hljs-keyword">do</span> cd ktest$i; <span class="hljs-keyword">do</span> echo -e $i,<span class="hljs-constructor">$(<span class="hljs-params">grep</span> &#x27;  <span class="hljs-params">without</span>&#x27; OUTCAR|<span class="hljs-params">tail</span> -<span class="hljs-params">n</span> 1| <span class="hljs-params">awk</span> &#x27;&#123;<span class="hljs-params">print</span> $7&#125;&#x27;; <span class="hljs-params">cd</span> $OLDPWD; <span class="hljs-params">done</span> &gt; <span class="hljs-params">kmesh</span>.<span class="hljs-params">data</span></span><br></code></pre></td></tr></table></figure><p>Below is similar to the ENCUT-test case, omitted.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VASP_soft install</title>
    <link href="/2018/10/28/VASP_soft_install/"/>
    <url>/2018/10/28/VASP_soft_install/</url>
    
    <content type="html"><![CDATA[<p>Here we introduce the installation of phonopy and phono3py. </p><span id="more"></span><h1 id="Installation-of-some-software-linked-with-VASP"><a href="#Installation-of-some-software-linked-with-VASP" class="headerlink" title="Installation of some software linked with VASP"></a>Installation of some software linked with VASP</h1><h2 id="1-Phonopy"><a href="#1-Phonopy" class="headerlink" title="1. Phonopy"></a>1. Phonopy</h2><p>More information about this software is found at <a href="http://atztogo.github.io/phonopy/">http://atztogo.github.io/phonopy/</a><br>We will tell how to install this on Milkyway-2. </p><h4 id="1-Download-the-phonopy-tar-gz-or-tar-bz2-from-the-link-above"><a href="#1-Download-the-phonopy-tar-gz-or-tar-bz2-from-the-link-above" class="headerlink" title="[1] Download the phonopy.tar.gz or tar.bz2 from the link above."></a>[1] Download the phonopy.tar.gz or tar.bz2 from the link above.</h4><h4 id="2-Decompress-the-tar-gz-with-tar-zxvf-…-or-tar-jxvf-for-tar-bz2"><a href="#2-Decompress-the-tar-gz-with-tar-zxvf-…-or-tar-jxvf-for-tar-bz2" class="headerlink" title="[2] Decompress the tar.gz with tar -zxvf … or tar -jxvf for tar.bz2"></a>[2] Decompress the tar.gz with tar -zxvf … or tar -jxvf for tar.bz2</h4><h4 id="3-Get-into-the-folder"><a href="#3-Get-into-the-folder" class="headerlink" title="[3] Get into the folder."></a>[3] Get into the folder.</h4><h4 id="4-In-terminal"><a href="#4-In-terminal" class="headerlink" title="[4] In terminal"></a>[4] In terminal</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-meta-keyword">$module</span> load python/2.7.9-gcc-4.8.5</span><br><span class="hljs-meta"><span class="hljs-meta-keyword">$python</span> setup.py install --user </span><br></code></pre></td></tr></table></figure><h4 id="5-Environment-Variables-Setting"><a href="#5-Environment-Variables-Setting" class="headerlink" title="[5] Environment Variables Setting"></a>[5] Environment Variables Setting</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-meta-keyword">$vi</span> ~/.bashrc</span><br></code></pre></td></tr></table></figure><p>In the vim: </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">export PYTHONPATH = ~<span class="hljs-regexp">/.local/</span>bin:<span class="hljs-variable">$PYTHONPATH</span><br>export PATH = ~<span class="hljs-regexp">/.local/</span>bin<span class="hljs-regexp">/python2.7/</span>site-packages:<span class="hljs-variable">$PYTHONPATH</span><br>alias phonopy =<span class="hljs-string">&quot;~/.local/bin/phonopy&quot;</span><br></code></pre></td></tr></table></figure><p>Here, ~ stand for the parent path for the folder “.local” and you can use <code>os.path.dirname(.local)</code> to get that.</p><h2 id="Phono3py"><a href="#Phono3py" class="headerlink" title="Phono3py"></a>Phono3py</h2><p>Most of the installation is same as phonopy. But you should add below in step [3]:</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-meta-keyword">$module</span> load lapack/3.5.0-gcc-4.8.5</span><br><span class="hljs-meta"><span class="hljs-meta-keyword">$module</span> load openblas/0.2.20-gcc-4.8.5</span><br></code></pre></td></tr></table></figure><p>And the environment variables setting is the same. </p>]]></content>
    
    
    <categories>
      
      <category>Software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VASP</tag>
      
      <tag>Physics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Taylor-Expansion</title>
    <link href="/2016/09/28/Taylor-Expansion/"/>
    <url>/2016/09/28/Taylor-Expansion/</url>
    
    <content type="html"><![CDATA[<span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>SymPy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SymPy</tag>
      
      <tag>Mathematics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-Bash shell</title>
    <link href="/2016/09/24/Linux-3/"/>
    <url>/2016/09/24/Linux-3/</url>
    
    <content type="html"><![CDATA[<h1 id="More-bash-shell"><a href="#More-bash-shell" class="headerlink" title="More bash shell"></a>More bash shell</h1><h2 id="Monitor-the-process"><a href="#Monitor-the-process" class="headerlink" title="Monitor the process"></a>Monitor the process</h2><span id="more"></span><h3 id="examine-process"><a href="#examine-process" class="headerlink" title="examine process"></a>examine process</h3><p>ps: 默认情况下只显示运行在当前控制台下的进程的信息。<br><em>Hint: bash shell is a process.</em><br><em>The default returned value is Process ID, TTY, run time of Process in CPU.</em></p><p>ps支持Unix风格的单破折线参数、BSD风格的无破折线参数、GNU风格的双破折线长参数三种命令行参数。</p><ul><li>Unix风格</li><li>e参数指定显示所有运行在系统上的进程，-f参数则扩展了输出</li><li>l参数实现长格式输出。</li><li>BSD风格</li><li>l参数实现的长格式输出更全面</li><li>GNU风格</li></ul><p><strong>ps –forest</strong>: **树状显示程序信息(层级化)**。<br>三套风格的参数可以组合使用。</p><p>ps缺陷: 只能读取特定点的进程信息</p><h3 id="Real-time-Monitoring"><a href="#Real-time-Monitoring" class="headerlink" title="Real-time Monitoring"></a>Real-time Monitoring</h3><p>top: 实时显示进程信息<br>第一部分: </p><ol><li>第一行(当前时间、系统运行时间、登录用户数、系统的平均负载[1, 5, 15min])<br>15min 平均负载如果大于2，系统认为是高负载。短时间高负载的突发状况很正常。</li><li>第二行: 进程概要信息，分为运行、休眠、停止和僵化</li><li>第三行: CPU概要信息，根据进程的属主、状态将CPU利用率分为几类。</li><li>第4、5行: 系统内存状态。</li></ol><h3 id="End-the-process"><a href="#End-the-process" class="headerlink" title="End the process"></a>End the process</h3><p>Linux中，进程之间通过信号来通信。</p><table><thead><tr><th align="center">Signal</th><th align="center">Name</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">HUP</td><td align="center">挂起</td></tr><tr><td align="center">2</td><td align="center">INT</td><td align="center">中断</td></tr><tr><td align="center">3</td><td align="center">QUIT</td><td align="center">结束运行</td></tr><tr><td align="center">9</td><td align="center">KILL</td><td align="center">无条件终止</td></tr><tr><td align="center">11</td><td align="center">SEGV</td><td align="center">段错误</td></tr><tr><td align="center">15</td><td align="center">TERM</td><td align="center">尽可能终止</td></tr><tr><td align="center">17</td><td align="center">STOP</td><td align="center">无条件停止(不是终止)</td></tr><tr><td align="center">18</td><td align="center">TSTP</td><td align="center">停止or暂停，但仍在后台运行</td></tr><tr><td align="center">19</td><td align="center">CONT</td><td align="center">在STOP或TSTP后恢复运行</td></tr></tbody></table><p>向运行中的进程发出进程信号的Linux信号: </p><ol><li>KILL<br>通过PID给进程发TERM信号，前提是你是进程的属主或root用户。<br>kill -s : 强制终止</li><li>killall(谨慎使用)<br>通过进程名而不是PID结束进程，支持通配符</li></ol><h3 id="Monitor-the-disk-space"><a href="#Monitor-the-disk-space" class="headerlink" title="Monitor the disk space"></a>Monitor the disk space</h3><ol><li>挂载存储媒体<br>Linux文件系统将所有的磁盘都并入一个虚拟目录中。<br>挂载(mounting): 在使用新的存储媒体之前，需要将它放到虚拟目录之下。</li><li>mount命令<br>mount命令提供四部分信息: </li></ol><ul><li>媒体的设备文件名</li><li>媒体挂在到虚拟目录的挂载点</li><li>文件系统类型</li><li>已挂载媒体的访问状态</li></ul><p>手动挂载: 需以root身份登录<br>mount -t type device directory<br>type: vfat \ ntfs \ iso9660</p><ol start="3"><li>umount命令<br>卸载设备: umount [directory | device]</li></ol><h3 id="df-command"><a href="#df-command" class="headerlink" title="df command"></a>df command</h3><p>用于了解设备上磁盘空间情况。</p><h3 id="du-command"><a href="#du-command" class="headerlink" title="du command"></a>du command</h3><p>显示某个特定目录(默认情况下是当前目录)的磁盘使用情况。<br>可用于快速判断系统上某个目录下是否有超大文件。</p><p>-c: 显示所有已列出文件总的大小<br>-h: 按用户易读的格式输出大小<br>-s: 显示每个输出参数的总计</p><h3 id="Processing-the-Data-Documents"><a href="#Processing-the-Data-Documents" class="headerlink" title="Processing the Data Documents"></a>Processing the Data Documents</h3><p>由于du命令等输出信息过多，所以我们需要找到甄别有用信息的方法。</p><ol><li><p>排序数据(默认升序)<br>sort命令: 按照标准的字符排序<br>sort -n: 按照数值排序<br>sort -M: 按月排序<br>-k: 指定排序的字段<br>-t: 指定字段分隔符<br>-r: 反序</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">du -<span class="hljs-keyword">sh</span> * | <span class="hljs-keyword">sort</span> -nr<br></code></pre></td></tr></table></figure><p>| 为管道命令，将du的输出重新定向到sort中</p></li><li><p>Search for the data<br>grep [options] pattern [file]<br>在输入或指定的文件中查找包含匹配指定模式字符的行。</p></li></ol><ul><li>反向搜索: grep -v [options] pattern [file]</li><li>显示匹配行: grep -n [options] pattern [file]</li><li>显示匹配行总数: grep -c [options] pattern [file]</li><li>多个匹配模式: grep -e [options1] -e [options2] pattern [file]</li><li>利用Unix风格正则表达式: grep [regular expression] file<br>衍生: 支持POSIX风格正则表达式的egrep以及搜寻一列固定长度字符串的fgrep等</li></ul><ol start="3"><li>Compress the data<br>Tools: bzip2(.bz2), compress(.Z), gzip(.gz), zip(.zip)</li></ol><p>gzip是GNU项目的产物，可以使用通配符</p><ul><li>gzip: 压缩文件</li><li>gzcat: 查看压缩过的文件的内容</li><li>gunzip: 解压缩文件</li></ul><ol start="4"><li>Archiving the data<br>归档: 将文件按一定结构分类存放，为文件提供分类索引。<br>tar function [options] object1, object2,…<br>给整个目录结构创建归档文件。</li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ABC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Regular Expression</title>
    <link href="/2016/09/11/Regular-Expression/"/>
    <url>/2016/09/11/Regular-Expression/</url>
    
    <content type="html"><![CDATA[<h1 id="Scrapy-4"><a href="#Scrapy-4" class="headerlink" title="Scrapy 4"></a>Scrapy 4</h1><p>The core that you scrapy is to find the internal relationship between the targets.</p><span id="more"></span><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs css">import urllib<span class="hljs-selector-class">.request</span><br>import os<br><br>def url_open(url):<br>    req = urllib.request.<span class="hljs-built_in">Request</span>(url)<br>    req.<span class="hljs-built_in">add_header</span>(<span class="hljs-string">&#x27;User-Agent&#x27;</span>, <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36&#x27;</span>)<br>    responce = urllib.request.<span class="hljs-built_in">urlopen</span>(url)<br>    html = responce.<span class="hljs-built_in">read</span>()<br><br>    return html<br><br><br>def <span class="hljs-built_in">get_page</span>(url):<br>    html = <span class="hljs-built_in">url_open</span>(url).<span class="hljs-built_in">decode</span>(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    <br>    a = html.<span class="hljs-built_in">find</span>(<span class="hljs-string">&#x27;current-comment-page&#x27;</span>) + <span class="hljs-number">23</span><br>    b = html.<span class="hljs-built_in">find</span>(<span class="hljs-string">&#x27;]&#x27;</span>, a)<br><br>    return html[a:b]<br><br><br>def <span class="hljs-built_in">find_imgs</span>(url):<br>    html = <span class="hljs-built_in">url_open</span>(url).<span class="hljs-built_in">decode</span>(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    img_addrs = []<br><br>    a = html.<span class="hljs-built_in">find</span>(<span class="hljs-string">&#x27;img src=&#x27;</span>)<br><br>    while a != -<span class="hljs-number">1</span>:<br>        b = html.<span class="hljs-built_in">find</span>(<span class="hljs-string">&#x27;.jpg&#x27;</span>, a, a+<span class="hljs-number">255</span>)<br>        if b != -<span class="hljs-number">1</span>:<br>            img_addrs.<span class="hljs-built_in">append</span>(html[a+<span class="hljs-number">9</span>:b+<span class="hljs-number">4</span>])<br>        else:<br>            b = a + <span class="hljs-number">9</span><br><br>        a = html.<span class="hljs-built_in">find</span>(<span class="hljs-string">&#x27;img src=&#x27;</span>, b)<br><br>    return img_addrs<br><br>def <span class="hljs-built_in">save_imgs</span>(img_addrs):<br>    for each in img_addrs:<br>        filename = each.<span class="hljs-built_in">split</span>(<span class="hljs-string">&#x27;/&#x27;</span>)[-<span class="hljs-number">1</span>]<br>        with <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;wb&#x27;</span>) as f:<br>            img = <span class="hljs-built_in">url_open</span>(each)<br>            f.<span class="hljs-built_in">write</span>(img)<br><br>def <span class="hljs-built_in">download_mm</span>(folder=<span class="hljs-string">&#x27;picture&#x27;</span>, pages=<span class="hljs-number">10</span>):<br>    os.<span class="hljs-built_in">mkdir</span>(folder)<br>    os.<span class="hljs-built_in">chdir</span>(folder)<br><br>    url = <span class="hljs-string">&quot;http://jandan.net/ooxx/&quot;</span><br>    page_num = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">get_page</span>(url))<br><br>    for i in <span class="hljs-built_in">range</span>(pages):<br>        page_num -= i<br>        page_url = url + <span class="hljs-string">&#x27;page-&#x27;</span> + <span class="hljs-built_in">str</span>(page_num) + <span class="hljs-string">&#x27;#comments&#x27;</span><br>        img_addrs = <span class="hljs-built_in">find_imgs</span>(page_url)<br>        <span class="hljs-built_in">save_imgs</span>(folder, img_addrs)<br><br><br>if __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">download_mm</span>()<br></code></pre></td></tr></table></figure><p>But this code needs to be fixed with proxy.</p><h1 id="Search-for-IP-automatically"><a href="#Search-for-IP-automatically" class="headerlink" title="Search for IP automatically"></a>Search for IP automatically</h1><h3 id="Regular-Expression"><a href="#Regular-Expression" class="headerlink" title="Regular Expression"></a>Regular Expression</h3><p>通配符* 或者 ?<br>正则表达式通配符为.<br>可以利用\来去除通配符的原字符功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> re<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;Aaron&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">5</span>, <span class="hljs-number">10</span>), match=<span class="hljs-string">&#x27;Aaron&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>), match=<span class="hljs-string">&#x27;I&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;a.&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>), match=<span class="hljs-string">&#x27;am&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;\.&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">10</span>, <span class="hljs-number">11</span>), match=<span class="hljs-string">&#x27;.&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;\d&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron123.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">10</span>, <span class="hljs-number">11</span>), match=<span class="hljs-string">&#x27;1&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;\d\d\d\.\d\d\d\.\d\d\d.\d\d\d&#x27;</span>, <span class="hljs-string">&#x27;192.168.117.132&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">0</span>, <span class="hljs-number">15</span>), match=<span class="hljs-string">&#x27;192.168.117.132&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment">#字符类的创建</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;\d\d\d\.\d\d\d\.\d\d\d.\d\d\d&#x27;</span>, <span class="hljs-string">&#x27;192.168.1.1&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;[aeiou]&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>), match=<span class="hljs-string">&#x27;a&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment"># re支持大小写敏感模式</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;[aeiouAEIOU]&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>), match=<span class="hljs-string">&#x27;I&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;[a-z]&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>), match=<span class="hljs-string">&#x27;a&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;[0-9]&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron123.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">10</span>, <span class="hljs-number">11</span>), match=<span class="hljs-string">&#x27;1&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;[2-9]&#x27;</span>, <span class="hljs-string">&#x27;I am Aaron123.&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">11</span>, <span class="hljs-number">12</span>), match=<span class="hljs-string">&#x27;2&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;ab[3]c&#x27;</span>, <span class="hljs-string">&#x27;abbbc&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;ab&#123;3&#125;c&#x27;</span>, <span class="hljs-string">&#x27;abbbc&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>), match=<span class="hljs-string">&#x27;abbbc&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;ab&#123;3,10&#125;c&#x27;</span>, <span class="hljs-string">&#x27;abbbbbc&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>), match=<span class="hljs-string">&#x27;abbbbbc&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment"># 正则表达式匹配的是字符串，数字只支持0-9</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;[0-2][0-5][0-5]&#x27;</span>, <span class="hljs-string">&#x27;220&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>), match=<span class="hljs-string">&#x27;220&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;[0-2][0-5][0-5]&#x27;</span>, <span class="hljs-string">&#x27;198&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;[01]\d\d|2[0-4]\d|25[0-5]&#x27;</span>, <span class="hljs-string">&#x27;198&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>), match=<span class="hljs-string">&#x27;198&#x27;</span>&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;(([01]\d\d|2[0-4]\d|25[0-5])\.)&#123;3&#125;([01]\d\d|2[0-4]\d|25[0-5])&#x27;</span>, <span class="hljs-string">&#x27;192.168.1.1&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>re.search(<span class="hljs-string">r&#x27;(([01]&#123;0,1&#125;\d&#123;0,1&#125;\d|2[0-4]\d|25[0-5])\.)&#123;3&#125;([01]&#123;0,1&#125;\d&#123;0,1&#125;\d|2[0-4]\d|25[0-5])&#x27;</span>, <span class="hljs-string">&#x27;192.168.1.1&#x27;</span>)<br>&lt;_sre.SRE_Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">0</span>, <span class="hljs-number">11</span>), match=<span class="hljs-string">&#x27;192.168.1.1&#x27;</span>&gt;<br></code></pre></td></tr></table></figure><p>Regular Expression is an important tool for us. We need to learn to use it more proficiently. </p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Regular Expression</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Scrapy-2</title>
    <link href="/2016/09/08/Scrapy-2/"/>
    <url>/2016/09/08/Scrapy-2/</url>
    
    <content type="html"><![CDATA[<h1 id="Scrapy-2"><a href="#Scrapy-2" class="headerlink" title="Scrapy 2"></a>Scrapy 2</h1><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1:"></a>Example 1:</h3><p>We are going to visit the “<a href="placekitten.com">placekitten</a>“. Here we want to use Python to visit the network and download the picture from it. </p><h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2:"></a>Example 2:</h3><p>Translate the sentence with the help of “<a href="http://fanyi.youdao.com&quot;/">http://fanyi.youdao.com&quot;</a>. </p><span id="more"></span><h3 id="Example-1-1"><a href="#Example-1-1" class="headerlink" title="Example 1:"></a>Example 1:</h3><p>We are going to visit the “<a href="placekitten.com">placekitten</a>“. Here we want to use Python to visit the network and download the picture from it. </p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-keyword">import</span> urllib.request<br><br>responce = urllib.request.urlopen(<span class="hljs-string">&quot;http://placekitten.com/g/500/600&quot;</span>)<br># equivalent sentence<br># req = urllib.request.Request(<span class="hljs-string">&quot;http://placekitten.com/g/500/600&quot;</span>)<br># responce = urllib.request.urlopen(req)<br># The returned <span class="hljs-string">&#x27;responce&#x27;</span> is an object<br># responce.geturl() -&gt; URL<br># responce.info() -&gt; the object<br># print(responce.info()) -&gt; object info<br># responce.getcode() -&gt; <span class="hljs-number">200</span>(the responce speed <span class="hljs-keyword">of</span> http)<br>cat_img = responce.read()<br><br><span class="hljs-keyword">with</span> open(<span class="hljs-string">&#x27;cat_500_600.jpg&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(cat_img)<br></code></pre></td></tr></table></figure><p>In the end, we get a picture below the running directory. </p><h3 id="Example-2-1"><a href="#Example-2-1" class="headerlink" title="Example 2:"></a>Example 2:</h3><p>Translate the sentence with the help of “<a href="http://fanyi.youdao.com&quot;/">http://fanyi.youdao.com&quot;</a>. </p><p>At first, we need to know the “Inspect Elements” in chrome. We can see the source code by opening it. Then choose the ‘Network’, when we use the function of ‘translation’, the network will be added with many documents. In the ‘Method’ column, we can see ‘POST’ and ‘GET’. </p><p>‘POST’: 向指定服务器提交被处理的数据；<br>‘GET’: 从服务器请求获得数据，也常用来提交数据。 </p><p>Click on the POST, we can see the headers, preview, responce, cookies, timing. In preview, we can see the result we need. </p><p>In headers:<br><em>Remote Address</em>: IP address + port of the server.<br><em>Request URL</em>: not the real address we need.<br><em>Request Method</em>: POST or GET.<br><em>Status Code</em>: speed of server.<br><em>Request Headers</em>: client (chrome -&gt; explorer, python -&gt; code).<br><em>User Agent</em>: To recognize the visitor is explorer or code. (OS edition,Net core, Explorer edition) <strong>This can be easily user-defined.</strong><br><em>Form Data</em>: The ‘POST’ content.</p><blockquote><p>urllib.request.urlopen(url, data=None, [timeout, ]*, cafile=None, capath=None, cadefault=False, context=None)</p></blockquote><p>data=None -&gt; GET<br>data=value -&gt; POST</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-keyword">import</span> urllib.request<br><span class="hljs-keyword">import</span> urllib.parse<br><br>url = <span class="hljs-string">&#x27;http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule&amp;smartresult=ugc&amp;sessionFrom=null&#x27;</span><br><span class="hljs-keyword">data</span> = &#123;&#125;<br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;type&#x27;</span>] = <span class="hljs-string">&#x27;AUTO&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;i&#x27;</span>] = <span class="hljs-string">&#x27;happy with Python&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;doctype&#x27;</span>] = <span class="hljs-string">&#x27;json&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;xmlVersion&#x27;</span>] = <span class="hljs-string">&#x27;1.8&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;keyfrom&#x27;</span>] = <span class="hljs-string">&#x27;fanyi.web&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;ue&#x27;</span>] = <span class="hljs-string">&#x27;UTF-8&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;action&#x27;</span>] = <span class="hljs-string">&#x27;FY_BY_CLICKBUTTON&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;typoResult&#x27;</span>] = <span class="hljs-string">&#x27;true&#x27;</span><br><br><span class="hljs-keyword">data</span> = urllib.parse.urlencode(<span class="hljs-keyword">data</span>).encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br># <span class="hljs-function"><span class="hljs-title">encode</span> Unicode -&gt;</span> utf-<span class="hljs-number">8</span> (编译)<br>responce = urllib.request.urlopen(url, <span class="hljs-keyword">data</span>)<br>html = responce.read().decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br># <span class="hljs-function"><span class="hljs-title">decode</span> utf-8 -&gt;</span> Unicode (解码)<br><br>print(html)<br></code></pre></td></tr></table></figure><p>The result above is a dictionary. We cannot get the direct answer. So we can use the search of alignment and mapping to perfect the program. </p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-keyword">import</span> urllib.request<br><span class="hljs-keyword">import</span> urllib.parse<br><span class="hljs-keyword">import</span> json<br><br>content = input(<span class="hljs-string">&quot;Pls input the content you need to translate: &quot;</span>)<br><br>url = <span class="hljs-string">&#x27;http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule&amp;smartresult=ugc&amp;sessionFrom=null&#x27;</span><br><span class="hljs-keyword">data</span> = &#123;&#125;<br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;type&#x27;</span>] = <span class="hljs-string">&#x27;AUTO&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;i&#x27;</span>] = content<br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;doctype&#x27;</span>] = <span class="hljs-string">&#x27;json&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;xmlVersion&#x27;</span>] = <span class="hljs-string">&#x27;1.8&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;keyfrom&#x27;</span>] = <span class="hljs-string">&#x27;fanyi.web&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;ue&#x27;</span>] = <span class="hljs-string">&#x27;UTF-8&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;action&#x27;</span>] = <span class="hljs-string">&#x27;FY_BY_CLICKBUTTON&#x27;</span><br><span class="hljs-keyword">data</span>[<span class="hljs-string">&#x27;typoResult&#x27;</span>] = <span class="hljs-string">&#x27;true&#x27;</span><br><br><span class="hljs-keyword">data</span> = urllib.parse.urlencode(<span class="hljs-keyword">data</span>).encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br># <span class="hljs-function"><span class="hljs-title">encode</span> Unicode -&gt;</span> utf-<span class="hljs-number">8</span> (编译)<br>responce = urllib.request.urlopen(url, <span class="hljs-keyword">data</span>)<br>html = responce.read().decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br># <span class="hljs-function"><span class="hljs-title">decode</span> utf-8 -&gt;</span> Unicode (解码)<br><br># print(html)<br># json 轻量级数据交换格式，用字符串结构封装Python结果<br><br>target = json.loads(html)<br>print(<span class="hljs-string">&quot;Result: %s&quot;</span> % (target[<span class="hljs-string">&#x27;translateResult&#x27;</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;tgt&#x27;</span>]))<br></code></pre></td></tr></table></figure><p>Here is the result of our codes. </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">Pls <span class="hljs-built_in">input</span> the content you need <span class="hljs-keyword">to</span> translate: 她真漂亮！<br>Resul<span class="hljs-variable">t:</span> She <span class="hljs-keyword">is</span> really beautiful!<br></code></pre></td></tr></table></figure><p><strong>But there are still some problems remained for us.</strong> Such as the fix of <em>User Agent</em>.</p>]]></content>
    
    
    <categories>
      
      <category>Web Spider</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Scrapy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Scrapy 1</title>
    <link href="/2016/09/08/Scrapy-1/"/>
    <url>/2016/09/08/Scrapy-1/</url>
    
    <content type="html"><![CDATA[<h1 id="Scrapy-1"><a href="#Scrapy-1" class="headerlink" title="Scrapy 1"></a>Scrapy 1</h1><p>Web Spider<br>Python: How to connect to the Internet?</p><h3 id="urllib-url-lib"><a href="#urllib-url-lib" class="headerlink" title="urllib: (url + lib)"></a>urllib: (url + lib)</h3><h4 id="URL"><a href="#URL" class="headerlink" title="URL :"></a>URL :</h4><p>protocol:// hostname[:port] / path / [;parameters][?query]#fragment<br>protocol -&gt; http, https, ftp, file, ed2k…<br>hostname: domain name or IP address<br>port: 端口号，http默认为80<br>path: directory</p><span id="more"></span><p>We use Python.doc to learn the urllib module.<br>Here the urllib.request is the main task for us. </p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-keyword">import</span> urllib.request</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">responce = urllib.request.urlopen(<span class="hljs-string">&quot;http://www.fishc.com&quot;</span>)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">html = responce.read()</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">print</span>(html)</span><br># 输出一个二进制bit文件<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">html = html.decode(<span class="hljs-string">&quot;utf-8&quot;</span>)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">print</span>(html)</span><br># 转码获得标准源文件<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web Spider</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Scrapy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python-Generator</title>
    <link href="/2016/09/04/Python-Generator/"/>
    <url>/2016/09/04/Python-Generator/</url>
    
    <content type="html"><![CDATA[<h1 id="Generator"><a href="#Generator" class="headerlink" title="Generator"></a>Generator</h1><h3 id="yield"><a href="#yield" class="headerlink" title="yield():"></a>yield():</h3><p>in ordinary function</p><h3 id="Coroutine-协同程序"><a href="#Coroutine-协同程序" class="headerlink" title="Coroutine(协同程序):"></a>Coroutine(协同程序):</h3><p>可以运行的独立函数的调用，函数可以暂停或者挂起，并在需要的时候可以从离开的地方继续或重新开始。<br>(与函数生成的局部变量到了函数外失效不同)</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">myGen</span>():</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Generator is executed.&quot;</span>)<br><span class="hljs-keyword">yield</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">yield</span> <span class="hljs-number">2</span><br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>myG =myGen()<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">next</span>(myG)<br>Generator <span class="hljs-keyword">is</span> executed.<br><span class="hljs-number">1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">next</span>(myG)<br><span class="hljs-number">2</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">next</span>(myG)<br>Traceback (most recent call last):<br>  File <span class="hljs-string">&quot;&lt;pyshell#8&gt;&quot;</span>, line <span class="hljs-number">1</span>, <span class="hljs-keyword">in</span> &lt;module&gt;<br>    <span class="hljs-built_in">next</span>(myG)<br>StopIteration<br></code></pre></td></tr></table></figure><p>We can use the generator to realize the Fibonacci sequence. </p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">&gt;&gt;&gt; def libs():<br><span class="hljs-keyword">a</span> = <span class="hljs-number">0</span><br>b = <span class="hljs-number">1</span><br><span class="hljs-keyword">while</span> True:<br><span class="hljs-keyword">a</span>, b = b, <span class="hljs-keyword">a</span> + b<br>yield <span class="hljs-keyword">a</span><br><br><span class="hljs-comment"># Call the generator.</span><br>&gt;&gt;&gt; <span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> <span class="hljs-keyword">in</span> libs():<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">each</span> &gt; <span class="hljs-number">1000</span>:<br>break<br>print(<span class="hljs-keyword">each</span>, <span class="hljs-keyword">end</span>=<span class="hljs-string">&#x27; &#x27;</span>)<br><br><span class="hljs-comment">#Resule</span><br><span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">5</span> <span class="hljs-number">8</span> <span class="hljs-number">13</span> <span class="hljs-number">21</span> <span class="hljs-number">34</span> <span class="hljs-number">55</span> <span class="hljs-number">89</span> <span class="hljs-number">144</span> <span class="hljs-number">233</span> <span class="hljs-number">377</span> <span class="hljs-number">610</span> <span class="hljs-number">987</span> <br></code></pre></td></tr></table></figure><h3 id="List-Comprehension"><a href="#List-Comprehension" class="headerlink" title="List Comprehension:"></a>List Comprehension:</h3><p>Generate a list that can be divided by 2 and not 3.</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">a = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>) <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (i % <span class="hljs-number">2</span>) <span class="hljs-keyword">and</span> i % <span class="hljs-number">3</span>]</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">a</span><br>[2, 4, 8, 10, 14, 16, 20, 22, 26, 28, 32, 34, 38, 40, 44, 46, 50, 52, 56, 58, 62, 64, 68, 70, 74, 76, 80, 82, 86, 88, 92, 94, 98]<br></code></pre></td></tr></table></figure><h3 id="Dictionary-Comprehension"><a href="#Dictionary-Comprehension" class="headerlink" title="Dictionary Comprehension:"></a>Dictionary Comprehension:</h3><p>Generate a dictionary that numbers in 0-9 can be distinguished as even or not.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">&gt;&gt;&gt;</span> <span class="hljs-string">b</span> <span class="hljs-string">=</span> &#123;<span class="hljs-string">i:i</span> <span class="hljs-string">%</span> <span class="hljs-number">2</span> <span class="hljs-string">==</span> <span class="hljs-number">0</span> <span class="hljs-string">for</span> <span class="hljs-string">i</span> <span class="hljs-string">in</span> <span class="hljs-string">range(10)</span>&#125;<br><span class="hljs-string">&gt;&gt;&gt;</span> <span class="hljs-string">b</span><br>&#123;<span class="hljs-attr">0:</span> <span class="hljs-literal">True</span>, <span class="hljs-attr">1:</span> <span class="hljs-literal">False</span>, <span class="hljs-attr">2:</span> <span class="hljs-literal">True</span>, <span class="hljs-attr">3:</span> <span class="hljs-literal">False</span>, <span class="hljs-attr">4:</span> <span class="hljs-literal">True</span>, <span class="hljs-attr">5:</span> <span class="hljs-literal">False</span>, <span class="hljs-attr">6:</span> <span class="hljs-literal">True</span>, <span class="hljs-attr">7:</span> <span class="hljs-literal">False</span>, <span class="hljs-attr">8:</span> <span class="hljs-literal">True</span>, <span class="hljs-attr">9:</span> <span class="hljs-literal">False</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="Set-Comprehension"><a href="#Set-Comprehension" class="headerlink" title="Set Comprehension:"></a>Set Comprehension:</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">&gt;&gt; c = &#123;i for i in [<span class="hljs-number">1,1,2,3</span>,<span class="hljs-number">4,5,5,6</span>,<span class="hljs-number">7,8,3,2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]&#125;<br>&gt;&gt;&gt; c<br>&#123;<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="String-Comprehension-Non-existent"><a href="#String-Comprehension-Non-existent" class="headerlink" title="String Comprehension: Non-existent."></a>String Comprehension: Non-existent.</h3><p>In string, in “…”, the Python is all string.</p><h3 id="Tuple-Comprehension"><a href="#Tuple-Comprehension" class="headerlink" title="Tuple Comprehension:"></a>Tuple Comprehension:</h3><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">e = (i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>))</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">e</span><br>&lt;generator object &lt;genexpr&gt; at 0x105a62e60&gt;<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">next</span>(e)</span><br>0<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">next</span>(e)</span><br>1<br></code></pre></td></tr></table></figure><p>We can find that it is not tuple comprehension, it is a generator comprehension!</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">sum</span>(i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>) <span class="hljs-keyword">if</span> i % <span class="hljs-number">2</span>)</span><br>2500<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Magic Methods 7</title>
    <link href="/2016/09/04/Magic-Methods-7/"/>
    <url>/2016/09/04/Magic-Methods-7/</url>
    
    <content type="html"><![CDATA[<h1 id="Magic-Methods-Iteration"><a href="#Magic-Methods-Iteration" class="headerlink" title="Magic Methods: Iteration"></a>Magic Methods: Iteration</h1><p>BIF : iter()、next()</p><span id="more"></span><p>We can use this two BIF to realize the function of for statement.</p><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs golo">&gt;&gt;&gt; <span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;ABCDE&quot;</span>:<br><span class="hljs-keyword">print</span>(<span class="hljs-keyword">each</span>)<br><br><br>A<br>B<br>C<br>D<br>E<br></code></pre></td></tr></table></figure><p>The before with for can be realized with the two BIF and while statement in below.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>string = <span class="hljs-string">&quot;ABCDE&quot;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>it = <span class="hljs-built_in">iter</span>(string)<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br><span class="hljs-keyword">try</span>:<br>each = <span class="hljs-built_in">next</span>(it)<br><span class="hljs-keyword">except</span> StopIteration:<br><span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(each)<br><br><br>A<br>B<br>C<br>D<br>E<br></code></pre></td></tr></table></figure><p>The magic methods of two BIF is __iter__() and __next__(). The returned value of the former is itself while the latter dominates the rule of the iteration. </p><p>Try with Fibonacci sequence.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Fibs</span>:</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>self.a = <span class="hljs-number">0</span><br>self.b = <span class="hljs-number">1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__iter__</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-keyword">return</span> self<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__next__</span>(<span class="hljs-params">self</span>):</span><br>self.a, self.b = self.b, self.a + self.b<br><span class="hljs-keyword">return</span> self.a<br><span class="hljs-comment"># Pay attention to the limit!</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>fibs = Fibs()<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> each <span class="hljs-keyword">in</span> fibs:<br><span class="hljs-keyword">if</span> each &lt; <span class="hljs-number">1000</span>:<br><span class="hljs-built_in">print</span>(each)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">break</span><br><br><br><span class="hljs-number">1</span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-number">5</span><br><span class="hljs-number">8</span><br><span class="hljs-number">13</span><br><span class="hljs-number">21</span><br><span class="hljs-number">34</span><br><span class="hljs-number">55</span><br><span class="hljs-number">89</span><br><span class="hljs-number">144</span><br><span class="hljs-number">233</span><br><span class="hljs-number">377</span><br><span class="hljs-number">610</span><br><span class="hljs-number">987</span><br></code></pre></td></tr></table></figure><p>We can add a parameter to control the iteration.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Fibs</span>:</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>, n=<span class="hljs-number">10</span>)</span></span><span class="hljs-symbol">:</span><br><span class="hljs-keyword">self</span>.a = <span class="hljs-number">0</span><br><span class="hljs-keyword">self</span>.b = <span class="hljs-number">1</span><br><span class="hljs-keyword">self</span>.n = n<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__iter__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__next__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br><span class="hljs-keyword">self</span>.a, <span class="hljs-keyword">self</span>.b = <span class="hljs-keyword">self</span>.b, <span class="hljs-keyword">self</span>.a + <span class="hljs-keyword">self</span>.b<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">self</span>.a &gt; <span class="hljs-keyword">self</span>.n<br>raise StopIteration<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>.a<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Magic Methods</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Magic Methods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Magic Methods 6</title>
    <link href="/2016/09/04/Magic-Methods-6/"/>
    <url>/2016/09/04/Magic-Methods-6/</url>
    
    <content type="html"><![CDATA[<h1 id="Magic-Methods-customize-the-container"><a href="#Magic-Methods-customize-the-container" class="headerlink" title="Magic Methods : customize the container"></a>Magic Methods : customize the container</h1><p>Protocols : it is similar with the port in other program language. In Python, it functions as a guide. </p><p>Container : <strong>Alignment</strong>[list, tuple, string] and <strong>mapping</strong>[dictionary]. </p><p>The container you customize is sorted as two kinds. One is the unchangeable container, in which you only need to define the __len__() and __getitem__(). The other is the changeable one, in which you should define the __setitem__() and __delitem__() based on the former container. </p><table><thead><tr><th align="center">Magic Methods</th><th align="center">Meaning</th></tr></thead><tbody><tr><td align="center">__len__(self)</td><td align="center">define the behavior when ‘len’ is called (returned value: number of elements)</td></tr><tr><td align="center">__getitem__(self, key)</td><td align="center">define the behavior when getting the certain element (self[key])</td></tr><tr><td align="center">__setitem__(self, key, value)</td><td align="center">define the behavior when setting the certain element (self[key]=value)</td></tr><tr><td align="center">__delitem__(self, key)</td><td align="center">define the behavior when deleting the certain element (del self[key])</td></tr><tr><td align="center">__iter__(self)</td><td align="center">define the behavior of certain element when iteration</td></tr><tr><td align="center">__reversed__(self)</td><td align="center">define the behavior when reversed() is called.</td></tr><tr><td align="center">__contains__(self, item)</td><td align="center">define the behavior when use the in or not in</td></tr></tbody></table><span id="more"></span><p>Trial:</p><ol><li>Write an unchangeable user-defined list, the number of everyone element being visited should be recorded. </li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CountList</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>, *args)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">self</span>.values = [x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> args]     <span class="hljs-comment">#列表推导式</span><br>        <span class="hljs-keyword">self</span>.count = &#123;&#125;.fromkeys(range(len(<span class="hljs-keyword">self</span>.values)), <span class="hljs-number">0</span>)    <span class="hljs-comment">#利用下标，初始0</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__len__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">return</span> len(<span class="hljs-keyword">self</span>.values)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__getitem__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>, key)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">self</span>.count[key] += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>.values[key]<br></code></pre></td></tr></table></figure><p>Result:</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">c1 = CountList(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">c2 = CountList(<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">c1[<span class="hljs-number">1</span>]</span><br>3<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">c2[<span class="hljs-number">1</span>]</span><br>4<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">c1[<span class="hljs-number">1</span>]+c2[<span class="hljs-number">1</span>]</span><br>7<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">c1.count</span><br>&#123;0: 0, 1: 2, 2: 0, 3: 0, 4: 0&#125;<br></code></pre></td></tr></table></figure><ul><li>How to write an unchangeable list?</li></ul>]]></content>
    
    
    <categories>
      
      <category>Magic Methods</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Magic Methods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Magic Methods 5</title>
    <link href="/2016/09/03/Magic-Methods-5/"/>
    <url>/2016/09/03/Magic-Methods-5/</url>
    
    <content type="html"><![CDATA[<h1 id="Magic-Methods-Descriptor-Property"><a href="#Magic-Methods-Descriptor-Property" class="headerlink" title="Magic Methods : Descriptor - Property"></a>Magic Methods : Descriptor - <strong>Property</strong></h1><p>描述符 : 将某种特殊类型的类的实例指派给另一个类的属性。</p><p>特殊类型为以下方法的1-3个 : </p><ul><li>__get__(self, instance, owner):<br>用于访问属性，它返回属性的值</li><li>__set__(self, instance, value):<br>将在属性分配操作中调用，不返回任何内容</li><li>__delete__(self, instance):<br>控制删除操作，不返回任何内容</li></ul><span id="more"></span><p>An example : design a property</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyProperty</span>:</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, fget=<span class="hljs-literal">None</span>, fset=<span class="hljs-literal">None</span>, fdel=<span class="hljs-literal">None</span></span>):</span><br>self.fget = fget<br>self.fset = fset<br>self.fdel = fdel<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__get__</span>(<span class="hljs-params">self, instance, owner</span>):</span><br><span class="hljs-keyword">return</span> self.fget(instance)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__set__</span>(<span class="hljs-params">self, instance, value</span>):</span><br>self.fset(instance, value)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__delete__</span>(<span class="hljs-params">self, instance</span>):</span><br>self.fdel(instance)<br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span>:</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>self._x = <span class="hljs-literal">None</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getX</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-keyword">return</span> self._x<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">setX</span>(<span class="hljs-params">self, value</span>):</span><br>self._x = value<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">delX</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-keyword">del</span> self._x<br>x = MyProperty(getX, setX, delX)<br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>c = C()<br><span class="hljs-meta">&gt;&gt;&gt; </span>c.x = <span class="hljs-string">&#x27;X&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>c.x<br><span class="hljs-string">&#x27;X&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">del</span> c.x<br></code></pre></td></tr></table></figure><h3 id="定义一个温度类，再定义两个描述符类用于描述摄氏度和华氏度两个属性。要求属性可以自动进行转换。-°F-1-8-°C-32"><a href="#定义一个温度类，再定义两个描述符类用于描述摄氏度和华氏度两个属性。要求属性可以自动进行转换。-°F-1-8-°C-32" class="headerlink" title="定义一个温度类，再定义两个描述符类用于描述摄氏度和华氏度两个属性。要求属性可以自动进行转换。(°F = 1.8 * °C + 32)"></a>定义一个温度类，再定义两个描述符类用于描述摄氏度和华氏度两个属性。要求属性可以自动进行转换。(°F = 1.8 * °C + 32)</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">class</span> Celsius:<br>    def <span class="hljs-constructor">__init__(<span class="hljs-params">self</span>, <span class="hljs-params">value</span> = 26.0)</span>:<br>        self.value = <span class="hljs-built_in">float</span>(value)<br>    def <span class="hljs-constructor">__get__(<span class="hljs-params">self</span>, <span class="hljs-params">instance</span>, <span class="hljs-params">owner</span>)</span>:<br>        return self.value<br>    def <span class="hljs-constructor">__set__(<span class="hljs-params">self</span>, <span class="hljs-params">instance</span>, <span class="hljs-params">value</span>)</span>:<br>        self.value = <span class="hljs-built_in">float</span>(value)<br>        <br><span class="hljs-keyword">class</span> Fahrenheit:<br>    def <span class="hljs-constructor">__get__(<span class="hljs-params">self</span>, <span class="hljs-params">instance</span>, <span class="hljs-params">owner</span>)</span>:<br>        return instance.cel<span class="hljs-operator"> * </span><span class="hljs-number">1.8</span> + <span class="hljs-number">32.0</span><br>    def <span class="hljs-constructor">__set__(<span class="hljs-params">self</span>, <span class="hljs-params">instance</span>, <span class="hljs-params">value</span>)</span>:<br>        instance.cel = (<span class="hljs-built_in">float</span>(value) - <span class="hljs-number">32.0</span>)<span class="hljs-operator"> / </span><span class="hljs-number">1.8</span><br><br><span class="hljs-keyword">class</span> Temperature:<br>    # 定义cel属性的Celsius类<br>    cel = <span class="hljs-constructor">Celsius()</span><br>    # 定义fah属性的Fahrenheit类<br>    fah = <span class="hljs-constructor">Fahrenheit()</span><br></code></pre></td></tr></table></figure><p>Result:</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">temp = Temperature()</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">temp</span><br>&lt;__main__.Temperature object at 0x105815438&gt;<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">temp.cel</span><br>26.0<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">temp.cel = <span class="hljs-number">40</span></span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">temp.cel</span><br>40.0<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">temp.fah</span><br>104.0<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">temp.fah = <span class="hljs-number">100</span></span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">temp.cel</span><br>37.77777777777778<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Magic Methods</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Magic Methods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Magic Methods 4</title>
    <link href="/2016/09/02/Magic-Methods-4/"/>
    <url>/2016/09/02/Magic-Methods-4/</url>
    
    <content type="html"><![CDATA[<h1 id="Magic-Methods-Attribute-Access"><a href="#Magic-Methods-Attribute-Access" class="headerlink" title="Magic Methods: Attribute Access"></a>Magic Methods: Attribute Access</h1><p>We can use the “.” operator to access the attribute. Also, we can use the magic methods to access it.</p><span id="more"></span><p>For example : We can use “.”, getattr() to access it.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span>:</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>self.x = <span class="hljs-string">&#x27;X-man&#x27;</span><br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>c = C()<br><span class="hljs-meta">&gt;&gt;&gt; </span>c.x<br><span class="hljs-string">&#x27;X-man&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">getattr</span>(c, <span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&#x27;The attribute you access is nonexistent.&#x27;</span>)<br><span class="hljs-string">&#x27;X-man&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">getattr</span>(c, <span class="hljs-string">&#x27;y&#x27;</span>, <span class="hljs-string">&#x27;The attribute you access is nonexistent.&#x27;</span>)<br><span class="hljs-string">&#x27;The attribute you access is nonexistent.&#x27;</span><br></code></pre></td></tr></table></figure><p>We use this to link the x and the size in below.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span>:</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, size=<span class="hljs-number">10</span></span>):</span><br>self.size = size<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getSize</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-keyword">return</span> self.size<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">setSize</span>(<span class="hljs-params">self, value</span>):</span><br>self.size = value<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">delSize</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-keyword">del</span> self.size<br>x = <span class="hljs-built_in">property</span>(getSize, setSize, delSize)<br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>c = C()<br><span class="hljs-meta">&gt;&gt;&gt; </span>c.x = <span class="hljs-number">1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>c.x<br><span class="hljs-number">1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>c.size<br><span class="hljs-number">1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">del</span> c.x<br><span class="hljs-meta">&gt;&gt;&gt; </span>c.size<br>Traceback (most recent call last):<br>  File <span class="hljs-string">&quot;&lt;pyshell#16&gt;&quot;</span>, line <span class="hljs-number">1</span>, <span class="hljs-keyword">in</span> &lt;module&gt;<br>    c.size<br>AttributeError: <span class="hljs-string">&#x27;C&#x27;</span> <span class="hljs-built_in">object</span> has no attribute <span class="hljs-string">&#x27;size&#x27;</span><br></code></pre></td></tr></table></figure><p>The magic methods to access attribute : </p><table><thead><tr><th align="center">Magic Methods</th><th align="left">Definition</th></tr></thead><tbody><tr><td align="center">__getattr__(self, name)</td><td align="left">定义当试图获取一个不存在的属性时的行为</td></tr><tr><td align="center">__getattribute__(self, name)</td><td align="left">定义当类的属性被访问时的行为</td></tr><tr><td align="center">__setattr__(self, name)</td><td align="left">定义当一个属性被设置时的行为</td></tr><tr><td align="center">__delattr__(self, name)</td><td align="left">定义当一个属性被删除时的行为</td></tr></tbody></table><p>先访问getattribute，如果有值返回值，没有返回getattr的内容。</p><h3 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h3><ul><li>Define a rectangle class, which defaults with width and height.</li><li>Define a square attribute, the returned value is the length of side, and declare the square. </li></ul><p>Endless Loop : </p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Rectangle</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>, width=<span class="hljs-number">0</span>, height=<span class="hljs-number">0</span>)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">self</span>.width = width<br>        <span class="hljs-keyword">self</span>.height = height<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__setattr__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>, name, value)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">if</span> name == <span class="hljs-string">&#x27;square&#x27;</span><span class="hljs-symbol">:</span><br>            <span class="hljs-keyword">self</span>.width = value<br>            <span class="hljs-keyword">self</span>.height = value<br>        <span class="hljs-symbol">else:</span><br>            <span class="hljs-keyword">self</span>.name = value<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getArea</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>.width * <span class="hljs-keyword">self</span>.height<br></code></pre></td></tr></table></figure><p>In this part, the endless loop is resulted by the evaluation. In the ‘int’ magic methods, ‘self.width = width’ will call the ‘setattr’ methods. In the ‘setattr’, there is evaluation again, which leads to the endless loop.<br>-&gt; Endless iteration</p><p>We need to be careful about the endless iteration of accessing attribute. Try the ‘super()’ to call the base class to avoid the endless loop.</p><p>In the code above, we can change the Line 11, ‘self.name = value’ to ‘super().__setattr__(name, value)’ or ‘self.__dict__[name] = value’. The first one is recommended. </p><p>Here is the result after modification.  </p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">r1 = Rectangle(<span class="hljs-number">4</span>, <span class="hljs-number">5</span>)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">r1.getArea()</span><br>20<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">r1.square = <span class="hljs-number">10</span></span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">r1.width</span><br>10<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">r1.height</span><br>10<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">r1.getArea()</span><br>100<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">r1.__dict__</span><br>&#123;&#x27;width&#x27;: 10, &#x27;height&#x27;: 10&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Magic Methods</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Magic Methods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Magic Methods 3</title>
    <link href="/2016/08/31/Magic-Methods-3/"/>
    <url>/2016/08/31/Magic-Methods-3/</url>
    
    <content type="html"><![CDATA[<h1 id="Customization"><a href="#Customization" class="headerlink" title="Customization"></a>Customization</h1><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements:"></a>Requirements:</h3><ul><li>Customize a class of timer</li><li>Function with ‘start’ and ‘stop’ methods</li><li>t1 and print(t1) -&gt; Result</li><li>When the timer is stopped or yet not started, call the relevant method for tips.</li><li>Timer can add together.</li><li>Limited bank.</li></ul><span id="more"></span><h3 id="Bank"><a href="#Bank" class="headerlink" title="Bank"></a>Bank</h3><ul><li>localtime in time module</li><li>time.localtime -&gt; format of struct_time </li><li>rewrite of __str__ , __repr__</li></ul><p>Expanded Reading: <strong>time module</strong></p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs ruby">import time as t<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyTimer</span>():</span><br>    <span class="hljs-comment"># rewrite the __init__</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">self</span>.unit = [<span class="hljs-string">&#x27;year&#x27;</span>, <span class="hljs-string">&#x27;month&#x27;</span>, <span class="hljs-string">&#x27;day&#x27;</span>, <span class="hljs-string">&#x27;hour&#x27;</span>, <span class="hljs-string">&#x27;minute&#x27;</span>, <span class="hljs-string">&#x27;second&#x27;</span>]<br>        <span class="hljs-keyword">self</span>.prompt = <span class="hljs-string">&quot;Timer has not started.&quot;</span><br>        <span class="hljs-keyword">self</span>.lasted = []<br>        <span class="hljs-comment"># avoid the attribute the same name with method</span><br>        <span class="hljs-keyword">self</span>.<span class="hljs-keyword">begin</span> = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">self</span>.<span class="hljs-keyword">end</span> = <span class="hljs-number">0</span><br>        <br>    <span class="hljs-comment"># rewrite the magic methods</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__str__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>.prompt<br><br>    __repr__ = __str__<br><br>    <span class="hljs-comment"># realize the add</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__add__</span><span class="hljs-params">(<span class="hljs-keyword">self</span>, other)</span></span><span class="hljs-symbol">:</span><br>        prompt = <span class="hljs-string">&quot;The all runtime is &quot;</span><br>        result = []<br>        <span class="hljs-keyword">for</span> index <span class="hljs-keyword">in</span> range(<span class="hljs-number">6</span>)<span class="hljs-symbol">:</span><br>            result.append(<span class="hljs-keyword">self</span>.lasted[index] + other.lasted[index])<br>            <span class="hljs-keyword">if</span> result[index]<span class="hljs-symbol">:</span><br>                prompt += (str(result[index]) + <span class="hljs-keyword">self</span>.unit[index])<br>    <br>    <span class="hljs-comment"># start timer</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">start</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">self</span>.<span class="hljs-keyword">begin</span> = t.localtime()<br>        <span class="hljs-keyword">self</span>.prompt = <span class="hljs-string">&quot;Pls call the stop first!&quot;</span><br>        print(<span class="hljs-string">&quot;Timer is on.&quot;</span>)<br><br>    <span class="hljs-comment"># stop timer</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">stop</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">self</span>.<span class="hljs-symbol">begin:</span><br>            print(<span class="hljs-string">&quot;Pls call the start first&quot;</span>)<br>        <span class="hljs-symbol">else:</span><br>            <span class="hljs-keyword">self</span>.<span class="hljs-keyword">end</span> = t.localtime()<br>            <span class="hljs-keyword">self</span>._calc()<br>            print(<span class="hljs-string">&quot;Timer is off.&quot;</span>)<br><br>    <span class="hljs-comment"># calculate the runtime, method inside(started with ).</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_calc</span><span class="hljs-params">(<span class="hljs-keyword">self</span>)</span></span><span class="hljs-symbol">:</span><br>        <span class="hljs-keyword">self</span>.lasted = []<br>        <span class="hljs-keyword">self</span>.prompt = <span class="hljs-string">&quot;Runtime of timer is &quot;</span><br>        <span class="hljs-keyword">for</span> index <span class="hljs-keyword">in</span> range(<span class="hljs-number">6</span>)<span class="hljs-symbol">:</span><br>            <span class="hljs-keyword">self</span>.lasted.append(<span class="hljs-keyword">self</span>.<span class="hljs-keyword">end</span>[index] - <span class="hljs-keyword">self</span>.<span class="hljs-keyword">begin</span>[index])<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">self</span>.lasted[index]<span class="hljs-symbol">:</span><br>                <span class="hljs-keyword">self</span>.prompt += (str(<span class="hljs-keyword">self</span>.lasted[index]) + <span class="hljs-keyword">self</span>.unit[index])<br><br>        <span class="hljs-comment"># Initialize again</span><br>        <span class="hljs-keyword">self</span>.<span class="hljs-keyword">begin</span> = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">self</span>.<span class="hljs-keyword">end</span> = <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>Result:</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">t1 = MyTimer()</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">t1</span><br>Timer has not started.<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">t1.start()</span><br>Timer is on.<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">t1</span><br>Pls call the stop first!<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">t1.stop()</span><br>Timer is off.<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">t1</span><br>Runtime of timer is 6second<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">print</span>(t1)</span><br>Runtime of timer is 6second<br></code></pre></td></tr></table></figure><h3 id="Advanced-Customization"><a href="#Advanced-Customization" class="headerlink" title="Advanced Customization"></a>Advanced Customization</h3><p>The code before have some problem.</p><ul><li>The precision of timer is second. We can use the other bank to be advanced.</li><li>The calculation of the timer will be -1.</li></ul><h3 id="Code-New"><a href="#Code-New" class="headerlink" title="Code New:"></a>Code New:</h3><ul><li><input disabled="" type="checkbox"> To Be Continue</li></ul>]]></content>
    
    
    <categories>
      
      <category>Magic Methods</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Magic Methods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Magic Methods 2</title>
    <link href="/2016/08/30/Magic-Methods-2/"/>
    <url>/2016/08/30/Magic-Methods-2/</url>
    
    <content type="html"><![CDATA[<h1 id="Magic-Methods-2-Mathematical-Calculation-P1"><a href="#Magic-Methods-2-Mathematical-Calculation-P1" class="headerlink" title="Magic Methods 2: Mathematical Calculation P1"></a>Magic Methods 2: Mathematical Calculation <em>P1</em></h1><p>int, float, string, tuple, list… -&gt; Factory Function</p><span id="more"></span><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">type</span>(<span class="hljs-built_in">len</span>)</span><br>&lt;class &#x27;builtin_function_or_method&#x27;&gt;<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">type</span>(<span class="hljs-built_in">dir</span>)</span><br>&lt;class &#x27;builtin_function_or_method&#x27;&gt;<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">type</span>(<span class="hljs-built_in">int</span>)</span><br>&lt;class &#x27;type&#x27;&gt;#类对象<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">type</span>(<span class="hljs-built_in">list</span>)</span><br>&lt;class &#x27;type&#x27;&gt;<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span>:</span> </span><br>pass<br><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">type</span>(C)</span><br>&lt;class &#x27;type&#x27;&gt;<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;123&#x27;</span>)</span><br>123<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">a = <span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;123&#x27;</span>)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">b = <span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;456&#x27;</span>)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">a + b</span><br>579<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-comment"># a = int(&#x27;123&#x27;) 实例化int的一个对象，返回实例化对象a， &#x27;123&#x27;为传入的参数</span></span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-comment"># 对象可以进行计算！</span></span><br></code></pre></td></tr></table></figure><p>An example of magic methods. In this example, we make the add and subtract reciprocated.</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">&gt;&gt;&gt; <span class="hljs-keyword">class</span> <span class="hljs-constructor">New_int(<span class="hljs-params">int</span>)</span>:<br>def <span class="hljs-constructor">__add__(<span class="hljs-params">self</span>, <span class="hljs-params">other</span>)</span>:<br>return <span class="hljs-built_in">int</span>.<span class="hljs-constructor">__sub__(<span class="hljs-params">self</span>, <span class="hljs-params">other</span>)</span><br>def <span class="hljs-constructor">__sub__(<span class="hljs-params">self</span>, <span class="hljs-params">other</span>)</span>:<br>return <span class="hljs-built_in">int</span>.<span class="hljs-constructor">__add__(<span class="hljs-params">self</span>, <span class="hljs-params">other</span>)</span><br><br><br>&gt;&gt;&gt; a = <span class="hljs-constructor">New_int(3)</span><br>&gt;&gt;&gt; b = <span class="hljs-constructor">New_int(5)</span><br>&gt;&gt;&gt; a + b<br>-<span class="hljs-number">2</span><br>&gt;&gt;&gt; a - b<br><span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p>Some bugs we need to pay attention to! Otherwise we may come across infinite iteration.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Try_int</span>(<span class="hljs-params"><span class="hljs-built_in">int</span></span>):</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__add__</span>(<span class="hljs-params">self, other</span>):</span><br><span class="hljs-keyword">return</span> self + other<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__sub__</span>(<span class="hljs-params">self, other</span>):</span><br><span class="hljs-keyword">return</span> self - other<br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = Try_int(<span class="hljs-number">3</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>b = Try_int(<span class="hljs-number">5</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>a + b<br><span class="hljs-meta">&gt;&gt;&gt; </span>RecursionError: maximum recursion depth exceeded<br></code></pre></td></tr></table></figure><p>The code can be fixed as below: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Try_int</span>(<span class="hljs-params"><span class="hljs-built_in">int</span></span>):</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__add__</span>(<span class="hljs-params">self, other</span>):</span><br><span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(self) + <span class="hljs-built_in">int</span>(other)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__sub__</span>(<span class="hljs-params">self, other</span>):</span><br><span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(self) - <span class="hljs-built_in">int</span>(other)<br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = Try_int(<span class="hljs-number">3</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>b = Try_int(<span class="hljs-number">5</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>a + b<br><span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p>Here is the introduction of magic methods that is for calculation. </p><h4 id="Calculation-Operators"><a href="#Calculation-Operators" class="headerlink" title="Calculation Operators"></a>Calculation Operators</h4><table><thead><tr><th>Magic Methods</th><th>Function</th></tr></thead><tbody><tr><td>__add__(self, other)</td><td>‘+‘</td></tr><tr><td>__sub__(self, other)</td><td>‘-‘</td></tr><tr><td>__mul__(self, other)</td><td>‘*‘</td></tr><tr><td>__truediv__(self, other)</td><td>‘/‘</td></tr><tr><td>__floordiv__(self, other)</td><td>‘//‘</td></tr><tr><td>__mod__(self, other)</td><td>‘%’</td></tr><tr><td>__divmod__(self, other)</td><td>‘divmod()’</td></tr><tr><td>__pow__(self, other[,modulo])</td><td>‘**‘</td></tr><tr><td>__lshift__(self, other)</td><td>‘&lt;&lt;’</td></tr><tr><td>__rshift__(self, other)</td><td>‘&gt;&gt;’</td></tr><tr><td>__and__(self, other)</td><td>‘bit and: &amp;‘</td></tr><tr><td>__xor__(self, other)</td><td>‘bit xor: ^‘</td></tr><tr><td>__or__(self, other)</td><td>‘bit or: |’</td></tr></tbody></table><p>mod() 取模(余数)<br>divmod(a, b) -&gt; (a//b, a%b)<br>1 byte = 8 bit<br>3 == 00000011 -&gt; &lt;&lt; -&gt; 00000110</p><p>####reverse calculation</p><p>When the first cannot do the calculation, then let the latter do it. <strong>We need to know that self is the latter, other is the first, if we do the reverse calculation.</strong> Here the reverse magic methods is the ‘r’ + ‘magic name’, just as __radd__(self, other).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Nint</span>(<span class="hljs-params"><span class="hljs-built_in">int</span></span>):</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__radd__</span>(<span class="hljs-params">self, other</span>):</span><br><span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>.__sub__(self, other)<br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = Nint(<span class="hljs-string">&#x27;5&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>b = Nint(<span class="hljs-string">&#x27;3&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>a + b<br><span class="hljs-number">8</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">1</span> + b <span class="hljs-comment"># -&gt; b - 1 = 3 - 1 =2 (1 don&#x27;t have &#x27;add&#x27;)</span><br><span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>For those operations that attach importance to sequence. We need to be careful.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Nint</span>(<span class="hljs-params"><span class="hljs-built_in">int</span></span>):</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__rsub__</span>(<span class="hljs-params">self, other</span>):</span><br><span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>.__sub__(other, self)<br><span class="hljs-comment"># Otherwise will be wrong.</span><br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = Nint(<span class="hljs-string">&#x27;5&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>a - <span class="hljs-number">3</span><br><span class="hljs-number">2</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">3</span> - a<br>-<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>####Augmented assignment</p><p>Here the reverse magic methods is the ‘i’ + ‘magic name’, just as __iadd__(self, other). The meaning is self+=other.</p><p>####Unary operator</p><table><thead><tr><th>Magic Methods</th><th>Function</th></tr></thead><tbody><tr><td>__neg__(self)</td><td>‘-x’</td></tr><tr><td>__pos__(self)</td><td>‘+x’</td></tr><tr><td>__abs__(self)</td><td>‘abs(x)’</td></tr><tr><td>__invert__(self)</td><td>‘~x : Bit (0 &lt;-&gt; 1)’</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Magic Methods</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Magic Methods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Magic Methods-1</title>
    <link href="/2016/08/29/Magic-Methods-1/"/>
    <url>/2016/08/29/Magic-Methods-1/</url>
    
    <content type="html"><![CDATA[<h1 id="Magic-Methods-1-Construction-amp-Destruction"><a href="#Magic-Methods-1-Construction-amp-Destruction" class="headerlink" title="Magic Methods 1: Construction &amp; Destruction"></a>Magic Methods 1: Construction &amp; Destruction</h1><p>中文释义 : 构造和析构。</p><p>In this part, we will introduce three magic methods about construction and destruction. They are <strong>init</strong>, <strong>new</strong> and <strong>del</strong>.</p><span id="more"></span><h3 id="init-self-…"><a href="#init-self-…" class="headerlink" title="__init__(self[,…])"></a>__init__(self[,…])</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Rectangle</span>:</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, x, y</span>):</span> <span class="hljs-comment">#init方法初始化不带参数，因此我们需要重写init</span><br>self.x = x<br>self.y = y<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getPeri</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-keyword">return</span> (self.x + self.y) * <span class="hljs-number">2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getArea</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-keyword">return</span> self.x * self.y<br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>rect = Rectangle(<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>rect.getPeri()<br><span class="hljs-number">14</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>rect.getArea()<br><span class="hljs-number">12</span><br></code></pre></td></tr></table></figure><p>**We have to know the returned value of __init__() must be None.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&gt;&gt;&gt; <span class="hljs-keyword">class</span> <span class="hljs-symbol">A:</span><br><span class="hljs-symbol">def</span> <span class="hljs-symbol">__init__</span>(<span class="hljs-symbol">self</span>):<br><span class="hljs-symbol">return</span> &quot;<span class="hljs-symbol">A</span>&quot;<br><br><br>&gt;&gt;&gt; <span class="hljs-symbol">a</span> = <span class="hljs-symbol">A</span>()<br><span class="hljs-symbol">Traceback</span> (<span class="hljs-symbol">most</span> <span class="hljs-symbol">recent</span> <span class="hljs-symbol">call</span> <span class="hljs-symbol">last</span>):<br>  <span class="hljs-symbol">File</span> &quot;&lt;<span class="hljs-symbol">pyshell</span>#<span class="hljs-symbol">22</span>&gt;&quot;, <span class="hljs-symbol">line</span> <span class="hljs-symbol">1, <span class="hljs-symbol">in</span></span> &lt;<span class="hljs-symbol">module</span>&gt;<br>    <span class="hljs-symbol">a</span> = <span class="hljs-symbol">A</span>()<br><span class="hljs-symbol">TypeError: <span class="hljs-symbol">__init__</span></span>() <span class="hljs-symbol">should</span> <span class="hljs-symbol">return</span> <span class="hljs-symbol">None, <span class="hljs-symbol">not</span></span> &#x27;<span class="hljs-symbol">str</span>&#x27;<br></code></pre></td></tr></table></figure><p>When we do the initialization, we use this magic method. Also, <strong>no returned value is obligatory for this method</strong>.</p><h3 id="new-cls-…"><a href="#new-cls-…" class="headerlink" title="__new__(cls[,…])"></a>__new__(cls[,…])</h3><p>Actually, we use the __new__() before initialization. Normally, the magic method is automatically called if we don’t rewrite it. The returned value of this method is a instantiated object*(实例化对象)*. This magic method is to be rewritten only when the we need to inherit an unchangeable class and we need to change the class to have some other function. <strong>[继承一个不可变类型又需要修改的时候]</strong></p><p>For example : </p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"># str is an unchangeable <span class="hljs-keyword">class</span>, but we need <span class="hljs-keyword">to</span> make all the input <span class="hljs-keyword">to</span> become capitalization. So we need <span class="hljs-keyword">to</span> use the <span class="hljs-constructor">__new__()</span> <span class="hljs-keyword">to</span> initialize.<br>&gt;&gt;&gt; <span class="hljs-keyword">class</span> <span class="hljs-constructor">CapStr(<span class="hljs-params">str</span>)</span>:<br>def <span class="hljs-constructor">__new__(<span class="hljs-params">cls</span>, <span class="hljs-params">string</span>)</span>:<br><span class="hljs-built_in">string</span> = <span class="hljs-built_in">string</span>.upper<span class="hljs-literal">()</span><br>return str.<span class="hljs-constructor">__new__(<span class="hljs-params">cls</span>, <span class="hljs-params">string</span>)</span><br><br><br>&gt;&gt;&gt; a = <span class="hljs-constructor">CapStr(<span class="hljs-string">&quot;I love Python!&quot;</span>)</span><br>&gt;&gt;&gt; a<br>&#x27;I LOVE PYTHON!&#x27;<br></code></pre></td></tr></table></figure><h3 id="del-self"><a href="#del-self" class="headerlink" title="__del__(self)"></a>__del__(self)</h3><p>This magic method is for destruction. When we need to delete an object, the __del__() is automatically used. But we need to focus this :<br><strong>del x</strong> is not equal to <strong>x.<strong>del</strong>()</strong>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span>:</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__init__ method is called.&quot;</span>)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__del__</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__del__ method is called.&quot;</span>)<br><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>c1 = C()<br>__init__ method <span class="hljs-keyword">is</span> called.<br><span class="hljs-meta">&gt;&gt;&gt; </span>c2 = c1<br><span class="hljs-meta">&gt;&gt;&gt; </span>c3 = c2<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">del</span> c3<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">del</span> c2<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">del</span> c1<br>__del__ method <span class="hljs-keyword">is</span> called.<br><span class="hljs-meta">&gt;&gt;&gt; </span>c4 = C()<br>__init__ method <span class="hljs-keyword">is</span> called.<br><span class="hljs-meta">&gt;&gt;&gt; </span>c5 =c4<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">del</span> c4<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">del</span> c5<br>__del__ method <span class="hljs-keyword">is</span> called.<br></code></pre></td></tr></table></figure><p>Here is one point. **The rubbish mechanism is called when all the reference to the method is deleted. ** It is not called every time when the instantiated object is deleted.</p>]]></content>
    
    
    <categories>
      
      <category>Magic Methods</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Magic Methods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SciPy-5</title>
    <link href="/2016/08/28/SciPy-5/"/>
    <url>/2016/08/28/SciPy-5/</url>
    
    <content type="html"><![CDATA[<h1 id="B-Spline-Curves"><a href="#B-Spline-Curves" class="headerlink" title="B-Spline Curves"></a>B-Spline Curves</h1><p><strong>Interpolate bank, which is in the SciPy, provides lots of ways to do the interpolation operation.</strong></p><p>Here is an example of interpolation with directed line and B-Spline to fix the point on a sine wave.</p><p>In this program, we use the <em>interp1d function</em> to get a new linear interpolation function. <em>Splrep function</em> is used to calculate the parameters in B-Spline Curves, then transfer them to <em>splev function</em> to realize the interpolation operation.</p><span id="more"></span><p>Here is the code and the result. </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css"># -*- coding: utf-<span class="hljs-number">8</span> -*-<br>import numpy as np<br>from scipy import interpolate<br>import pylab as pl<br><br>x = np.<span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>*np.pi+np.pi/<span class="hljs-number">6</span>, <span class="hljs-number">10</span>)<br>y = np.<span class="hljs-built_in">sin</span>(x)<br><br>x_new = np.<span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>*np.pi+np.pi/<span class="hljs-number">6</span>, <span class="hljs-number">100</span>)<br>f_linear = interpolate.<span class="hljs-built_in">interp1d</span>(x, y)<br>tck = interpolate.<span class="hljs-built_in">splrep</span>(x, y)<br>y_bspline = interpolate.<span class="hljs-built_in">splev</span>(x_new, tck)<br><br>pl.<span class="hljs-built_in">plot</span>(x, y, <span class="hljs-string">&quot;o&quot;</span>, label = <span class="hljs-string">&#x27;Original Data&#x27;</span>)<br>pl.<span class="hljs-built_in">plot</span>(x_new, <span class="hljs-built_in">f_linear</span>(x_new), label = <span class="hljs-string">&#x27;Linear Interpolation&#x27;</span>)<br>pl.<span class="hljs-built_in">plot</span>(x_new, y_bspline, label = <span class="hljs-string">&#x27;B-Spline&#x27;</span>)<br>pl.<span class="hljs-built_in">legend</span>()<br>pl.<span class="hljs-built_in">show</span>()<br></code></pre></td></tr></table></figure><p><img src="http://s7.sinaimg.cn/middle/002TaBvWzy74p6nzUzk46&690"></p><blockquote><p>Definition of Interpolate.</p></blockquote><ul><li><input disabled="" type="checkbox"> To Be Continue</li></ul>]]></content>
    
    
    <categories>
      
      <category>SciPy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>SciPy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SciPy 4</title>
    <link href="/2016/08/28/SciPy-4/"/>
    <url>/2016/08/28/SciPy-4/</url>
    
    <content type="html"><![CDATA[<h1 id="SciPy-fsolve"><a href="#SciPy-fsolve" class="headerlink" title="SciPy: fsolve"></a>SciPy: fsolve</h1><h3 id="SciPy-fsolve-2"><a href="#SciPy-fsolve-2" class="headerlink" title="SciPy: fsolve-2"></a>SciPy: fsolve-2</h3><p>We can solve the nonlinear equation by Jacobian determinant(matrix). For the question in fsolve-1, the Jacobian matrix of f to u is :<br>$$<br>\begin{bmatrix}<br>\frac{\partial f_1} {\partial u_1} \frac{\partial f_1} {\partial u_2} \frac{\partial f_1} {\partial u_3} \\<br>\frac{\partial f_2} {\partial u_1} \frac{\partial f_2} {\partial u_2} \frac{\partial f_2} {\partial u_3} \\<br>\frac{\partial f_3} {\partial u_1} \frac{\partial f_3} {\partial u_2} \frac{\partial f_3} {\partial u_3} \\<br>\end{bmatrix}<br>$$</p><span id="more"></span><p>We use the fprime parameter to transfer the Jacobian matrix to fsolve.</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs llvm"># -*- coding: utf<span class="hljs-number">-8</span> -*-<br>from scipy.optimize import fsolve<br>import numpy as np<br><br>def f(<span class="hljs-keyword">x</span>):<br>    <span class="hljs-keyword">x</span><span class="hljs-number">0</span> <span class="hljs-operator">=</span> float(<span class="hljs-keyword">x</span>[<span class="hljs-number">0</span>])<br>    <span class="hljs-keyword">x</span><span class="hljs-number">1</span> <span class="hljs-operator">=</span> float(<span class="hljs-keyword">x</span>[<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">x</span><span class="hljs-number">2</span> <span class="hljs-operator">=</span> float(<span class="hljs-keyword">x</span>[<span class="hljs-number">2</span>])<br>    return [<br>        <span class="hljs-number">5</span>*<span class="hljs-keyword">x</span><span class="hljs-number">1</span>+<span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-number">4</span>*<span class="hljs-keyword">x</span><span class="hljs-number">0</span>**<span class="hljs-number">2</span><span class="hljs-number">-2</span>*np.sin(<span class="hljs-keyword">x</span><span class="hljs-number">1</span>*<span class="hljs-keyword">x</span><span class="hljs-number">2</span>)<span class="hljs-punctuation">,</span><br>        <span class="hljs-keyword">x</span><span class="hljs-number">1</span>*<span class="hljs-keyword">x</span><span class="hljs-number">2</span><span class="hljs-number">-1.5</span><br>             ]<br><br>def j(<span class="hljs-keyword">x</span>):<br>    <span class="hljs-keyword">x</span><span class="hljs-number">0</span> <span class="hljs-operator">=</span> float(<span class="hljs-keyword">x</span>[<span class="hljs-number">0</span>])<br>    <span class="hljs-keyword">x</span><span class="hljs-number">1</span> <span class="hljs-operator">=</span> float(<span class="hljs-keyword">x</span>[<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">x</span><span class="hljs-number">2</span> <span class="hljs-operator">=</span> float(<span class="hljs-keyword">x</span>[<span class="hljs-number">2</span>])<br>    return [<br>        [<span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span>]<span class="hljs-punctuation">,</span><br>        [<span class="hljs-number">8</span>*<span class="hljs-keyword">x</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-2</span>*<span class="hljs-keyword">x</span><span class="hljs-number">2</span>*np.cos(<span class="hljs-keyword">x</span><span class="hljs-number">1</span>*<span class="hljs-keyword">x</span><span class="hljs-number">2</span>)<span class="hljs-punctuation">,</span> <span class="hljs-number">-2</span>*<span class="hljs-keyword">x</span><span class="hljs-number">1</span>*np.cos(<span class="hljs-keyword">x</span><span class="hljs-number">1</span>*<span class="hljs-keyword">x</span><span class="hljs-number">2</span>)]<span class="hljs-punctuation">,</span><br>        [<span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">x</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">x</span><span class="hljs-number">1</span>]<br>        ]<br><br>result <span class="hljs-operator">=</span> fsolve(f<span class="hljs-punctuation">,</span> [<span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span>]<span class="hljs-punctuation">,</span> fprime<span class="hljs-operator">=</span>j)<br><br>print(result)<br>print(f(result))<br></code></pre></td></tr></table></figure><p>The Result : </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">[<span class="hljs-number">-0.70622057</span> <span class="hljs-number">-0.6</span>        <span class="hljs-number">-2.5</span>       ]<br>[<span class="hljs-number">0.0</span>, <span class="hljs-number">-9.1260332624187868e-14</span>, <span class="hljs-number">5.329070518200751e-15</span>]<br></code></pre></td></tr></table></figure><p>The definition of fsolve : </p><blockquote><p>scipy.optimize.fsolve(<strong>func, x0, args=(), fprime=None, full_output=0, col_deriv=0, xtol=1.49012e-08, maxfev=0, band=None, epsfcn=None, factor=100, diag=None</strong>)</p><p><strong>func</strong> : callable f(x, <em>args)<br>A function that takes at least one (possibly vector) argument.<br><strong>x0</strong> : ndarray<br>The starting estimate for the roots of func(x) = 0.<br><strong>args</strong> : tuple, optional<br>Any extra arguments to func.<br><strong>fprime</strong> : callable(x), optional<br>A function to compute the Jacobian of func with derivatives across the rows. By default, the Jacobian will be estimated.<br><strong>full_output</strong> : bool, optional<br>If True, return optional outputs.<br><strong>col_deriv</strong> : bool, optional<br>Specify whether the Jacobian function computes derivatives down the columns (faster, because there is no transpose operation).<br><strong>xtol</strong> : float, optional<br>The calculation will terminate if the relative error between two consecutive iterates is at most xtol.<br><strong>maxfev</strong> : int, optional<br>The maximum number of calls to the function. If zero, then 100</em>(N+1) is the maximum where N is the number of elements in x0.<br><strong>band</strong> : tuple, optional<br>If set to a two-sequence containing the number of sub- and super-diagonals within the band of the Jacobi matrix, the Jacobi matrix is considered banded (only for fprime=None).<br><strong>epsfcn</strong> : float, optional<br>A suitable step length for the forward-difference approximation of the Jacobian (for fprime=None). If epsfcn is less than the machine precision, it is assumed that the relative errors in the functions are of the order of the machine precision.<br><strong>factor</strong> : float, optional<br>A parameter determining the initial step bound (factor * || diag * x||). Should be in the interval (0.1, 100).<br><strong>diag</strong> : sequence, optional<br>N positive entries that serve as a scale factors for the variables.</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>SciPy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>SciPy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SciPy 3</title>
    <link href="/2016/08/25/SciPy-3/"/>
    <url>/2016/08/25/SciPy-3/</url>
    
    <content type="html"><![CDATA[<h1 id="SciPy-fsolve"><a href="#SciPy-fsolve" class="headerlink" title="SciPy : fsolve"></a>SciPy : fsolve</h1><p>We use the scipy.optimize.fsolve to solve the nonlinear equations. The basic format is <strong>fsolve(func, x0)</strong>. In the format, func(x) is the function of error in equations. The parameter x is vector. </p><p>Here is the question.<br>$$<br>f_1(u_1, u_2, u_3) = 0 \\<br>f_2(u_1, u_2, u_3) = 0 \\<br>f_3(u_1, u_2, u_3) = 0<br>$$<br> Here is the definition of func : </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs swift">def <span class="hljs-function"><span class="hljs-keyword">func</span>(x)</span>:<br>    u1, u2, u3 <span class="hljs-operator">=</span> x<br>    <span class="hljs-keyword">return</span> [f1(u1, u2, u3), f2(u1, u2, u3), f3(u1, u2, u3)]<br></code></pre></td></tr></table></figure><span id="more"></span><p>Here is an example :<br>$$<br>5b + 3 = 0 \\<br>4a^2-2  sin (bc) = 0 \\<br>bc -1.5 = 0<br>$$</p><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs nim"><span class="hljs-keyword">from</span> scipy.optimize <span class="hljs-keyword">import</span> fsolve<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>def <span class="hljs-keyword">func</span>(x):<br><span class="hljs-comment">#float将数组中的元素转为标准浮点数，提高运行速度</span><br>    x0 = <span class="hljs-built_in">float</span>(x[<span class="hljs-number">0</span>])<br>    x1 = <span class="hljs-built_in">float</span>(x[<span class="hljs-number">1</span>])<br>    x2 = <span class="hljs-built_in">float</span>(x[<span class="hljs-number">2</span>])<br>    <span class="hljs-keyword">return</span> [<br>        <span class="hljs-number">5</span>*x1+<span class="hljs-number">3</span>,<br>        <span class="hljs-number">4</span>*x0**<span class="hljs-number">2</span>-<span class="hljs-number">2</span>*np.sin(x1*x2),<br>        x1*x2-<span class="hljs-number">1</span>.<span class="hljs-number">5</span><br>             ]<br><br><span class="hljs-literal">result</span> = fsolve(<span class="hljs-keyword">func</span>, [<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>])<br><br>print(<span class="hljs-literal">result</span>)<br>print(<span class="hljs-keyword">func</span>(<span class="hljs-literal">result</span>))<br></code></pre></td></tr></table></figure><p>Result : </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">[<span class="hljs-number">-0.70622057</span> <span class="hljs-number">-0.6</span>        <span class="hljs-number">-2.5</span>       ]<br>[<span class="hljs-number">0.0</span>, <span class="hljs-number">-9.1260332624187868e-14</span>, <span class="hljs-number">5.329070518200751e-15</span>]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>SciPy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>SciPy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SciPy-2</title>
    <link href="/2016/08/25/SciPy-2/"/>
    <url>/2016/08/25/SciPy-2/</url>
    
    <content type="html"><![CDATA[<h1 id="SciPy-fmin"><a href="#SciPy-fmin" class="headerlink" title="SciPy : fmin"></a>SciPy : fmin</h1><p>scipy.optimize -&gt; fmin -&gt; fmin, fmin_powell, fmin_cg, fmin_bfgs</p><p>y(output) = x(input) * h(convolution)</p><p>deconvolution : y, h -&gt; x</p><p>We use fmin to realize the deconvolution.</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># We are trying to use fmin to make the deconvolution.</span><br><br><span class="hljs-keyword">import</span> scipy.optimize <span class="hljs-keyword">as</span> opt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_fmin_convolve</span>(<span class="hljs-params">fminfunc, x, h, y, yn, x0</span>):</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    (*) represents the convolution.</span><br><span class="hljs-string">    yn is the result of y + noise.</span><br><span class="hljs-string">    x0 is the initial value of x.</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">convolve_func</span>(<span class="hljs-params">h</span>):</span><br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        Calculate the (yn - x(*)h)**2</span><br><span class="hljs-string">        and make the result the minimum by fmin</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        <span class="hljs-keyword">return</span> np.<span class="hljs-built_in">sum</span>((yn - np.convolve(x, h))**<span class="hljs-number">2</span>)<br><br>    <span class="hljs-comment"># call fmin and initialize with x0</span><br>    h0 = fminfunc(convolve_func, x0)<br><br>    <span class="hljs-built_in">print</span>(fminfunc.__name__)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>    <span class="hljs-comment"># relative error between x(*)h0 and y</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;error of y:&quot;</span>, np.<span class="hljs-built_in">sum</span>((np.convolve(x, h0)-y)**<span class="hljs-number">2</span>)/np.<span class="hljs-built_in">sum</span>(y**<span class="hljs-number">2</span>))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;error of h:&quot;</span>, np.<span class="hljs-built_in">sum</span>((h0-h)**<span class="hljs-number">2</span>)/np.<span class="hljs-built_in">sum</span>(h**<span class="hljs-number">2</span>))<br>    <span class="hljs-built_in">print</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_n</span>(<span class="hljs-params">m, n, nscale</span>):</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    x, h, y, yn, x0 by random</span><br><span class="hljs-string">    m is the length of x</span><br><span class="hljs-string">    n is the length of h</span><br><span class="hljs-string">    nscale is the intensity of interference.</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    x = np.random.rand(m)<br>    h = np.random.rand(n)<br>    y = np.convolve(x, h)<br>    yn = y +np.random.rand(<span class="hljs-built_in">len</span>(y)) * nscale<br>    x0 = np.random.rand(n)<br><br>    test_fmin_convolve(opt.fmin, x, h, y, yn, x0)<br>    test_fmin_convolve(opt.fmin_powell, x, h, y, yn, x0)<br>    test_fmin_convolve(opt.fmin_cg, x, h, y, yn, x0)<br>    test_fmin_convolve(opt.fmin_bfgs, x, h, y, yn, x0)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    test_n(<span class="hljs-number">200</span>, <span class="hljs-number">20</span>, <span class="hljs-number">0.1</span>)<br></code></pre></td></tr></table></figure><p>Result: </p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs subunit">fmin<br>---------------------<br><span class="hljs-keyword">error </span>of y: 0.00267480000205<br><span class="hljs-keyword">error </span>of h: 0.130724245954<br>Optimization terminated successfully.<br>         Current function value: 0.187763<br>         Iterations: 41<br>         Function evaluations: 7664<br>fmin_powell<br>---------------------<br><span class="hljs-keyword">error </span>of y: 8.68667209607e<span class="hljs-string">-05</span><br><span class="hljs-keyword">error </span>of h: 0.000212315418644<br>Optimization terminated successfully.<br>         Current function value: 0.187760<br>         Iterations: 15<br>         Function evaluations: 704<br>         Gradient evaluations: 32<br>fmin_cg<br>---------------------<br><span class="hljs-keyword">error </span>of y: 8.6765476654e<span class="hljs-string">-05</span><br><span class="hljs-keyword">error </span>of h: 0.000213307782746<br>Optimization terminated successfully.<br>         Current function value: 0.187760<br>         Iterations: 11<br>         Function evaluations: 506<br>         Gradient evaluations: 23<br>fmin_bfgs<br>---------------------<br><span class="hljs-keyword">error </span>of y: 8.67654655999e<span class="hljs-string">-05</span><br><span class="hljs-keyword">error </span>of h: 0.000213306787752<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>SciPy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>SciPy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SciPy-1</title>
    <link href="/2016/08/24/SciPy-1/"/>
    <url>/2016/08/24/SciPy-1/</url>
    
    <content type="html"><![CDATA[<h1 id="SciPy-1"><a href="#SciPy-1" class="headerlink" title="SciPy 1"></a>SciPy 1</h1><h2 id="Least-square-fitting"><a href="#Least-square-fitting" class="headerlink" title="Least-square fitting"></a>Least-square fitting</h2><p>For database (x[i], y[i]), we know there is functional relation called y=f(x), we know the f(x) as the f(x) = f(x, p), p is the set of undetermined coefficient. We need to know the p to make S the least :<br>$$<br>S(p) = \sum_{i=1}^{m}[y_i - f(x_i, p)]^2<br>$$<br>We use the bank optimize in scipy to realize the function of leastsq.</p><span id="more"></span><p>Here is the example. We are trying to fit a sine wave function.</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs maxima"># -*- coding: utf-<span class="hljs-number">8</span> -*-<br>import numpy as <span class="hljs-built_in">np</span><br>from scipy.<span class="hljs-built_in">optimize</span> import leastsq<br>import pylab as pl<br><br>def func(x, p):<br>    A, k, theta = p<br>    <span class="hljs-built_in">return</span> A*<span class="hljs-built_in">np</span>.<span class="hljs-built_in">sin</span>(<span class="hljs-number">2</span>*<span class="hljs-built_in">np</span>.pi*k*x+theta)<br><br>def residuals(p, y, x):<br>    <span class="hljs-built_in">return</span> y - func(x, p)<br><br>x = <span class="hljs-built_in">np</span>.linspace(<span class="hljs-number">0</span>, -<span class="hljs-number">2</span>*<span class="hljs-built_in">np</span>.pi, <span class="hljs-number">100</span>)<br>A, k, theta = <span class="hljs-number">10</span>, <span class="hljs-number">0.34</span>, <span class="hljs-built_in">np</span>.pi/<span class="hljs-number">6</span><br>y0 = func(x, [A, k, theta])<br>y1 = y0 + <span class="hljs-number">2</span> * <span class="hljs-built_in">np</span>.<span class="hljs-built_in">random</span>.randn(len(x))<br><br>p0 = [<span class="hljs-number">7</span>, <span class="hljs-number">0.2</span>, <span class="hljs-number">0</span>]<br><br>plsq = leastsq(residuals, p0, <span class="hljs-built_in">args</span>=(y1, x))<br><br>pl.plot(x, y0, <span class="hljs-built_in">label</span> = <span class="hljs-string">&quot;Real Data&quot;</span>)<br>pl.plot(x, y1, <span class="hljs-built_in">label</span> = <span class="hljs-string">&quot;Experimental Data&quot;</span>)<br>pl.plot(x, func(x, plsq[<span class="hljs-number">0</span>]), <span class="hljs-built_in">label</span> = <span class="hljs-string">&quot;Fitted Data&quot;</span>)<br>pl.<span class="hljs-built_in">legend</span>()<br>pl.<span class="hljs-built_in">show</span>()<br></code></pre></td></tr></table></figure><p>Here is the result. </p><p><img src="http://s12.sinaimg.cn/middle/002TaBvWzy74japIbdV3b&690"></p>]]></content>
    
    
    <categories>
      
      <category>SciPy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>SciPy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NumPy-1.3</title>
    <link href="/2016/08/22/NumPy-1.3/"/>
    <url>/2016/08/22/NumPy-1.3/</url>
    
    <content type="html"><![CDATA[<h1 id="NumPy-1-3"><a href="#NumPy-1-3" class="headerlink" title="NumPy 1-3"></a>NumPy 1-3</h1><p>区分dot、inner、outer计算乘积函数</p><span id="more"></span><h2 id="dot"><a href="#dot" class="headerlink" title="dot() :"></a>dot() :</h2><p>dot(a, b)[i, j, k, m] = sum(a[i, j, :] * b[k, :, m])</p><p>一维计算的为内积，二维计算数组的矩阵乘积</p><p>数组a的最后一维的所有元素与数组b的倒数第二位上的所有元素的乘积和</p><h2 id="inner"><a href="#inner" class="headerlink" title="inner() :"></a>inner() :</h2><p>inner(a, b)[i, j, k, m] = sum(a[i, j, :] * b[k, m, :])</p><p>一维计算内积</p><p>数组a和b的最后一维的内积，因此a, b最后一维长度必须相同</p><h2 id="outer"><a href="#outer" class="headerlink" title="outer() :"></a>outer() :</h2><p>计算列向量和行向量的矩阵乘积，只适用于一维数组。如传入参数为多维数组，会展开为一维参数再进行计算。</p><h2 id="NumPy-linalg-线性代数子库"><a href="#NumPy-linalg-线性代数子库" class="headerlink" title="NumPy-linalg(线性代数子库)"></a>NumPy-linalg(线性代数子库)</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; <span class="hljs-selector-tag">a</span> =np<span class="hljs-selector-class">.random</span><span class="hljs-selector-class">.rand</span>(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)<br>&gt;&gt;&gt; a<br>array(<span class="hljs-selector-attr">[[ 0.39732841,  0.66421174,  0.88486741]</span>,<br>       <span class="hljs-selector-attr">[ 0.63472452,  0.17235385,  0.79621823]</span>,<br>       <span class="hljs-selector-attr">[ 0.9531599 ,  0.32685541,  0.39387588]</span>])<br>&gt;&gt;&gt; <span class="hljs-selector-tag">b</span> = np<span class="hljs-selector-class">.random</span><span class="hljs-selector-class">.rand</span>(<span class="hljs-number">3</span>)<br>&gt;&gt;&gt; b<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">0.22883406</span>,  <span class="hljs-number">0.16464909</span>,  <span class="hljs-number">0.18437657</span>])</span></span><br>&gt;&gt;&gt; x = np<span class="hljs-selector-class">.linalg</span><span class="hljs-selector-class">.solve</span>(<span class="hljs-selector-tag">a</span>, b)<br>&gt;&gt;&gt; x<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">0.09978295</span>,  <span class="hljs-number">0.16204369</span>,  <span class="hljs-number">0.09216763</span>])</span></span><br></code></pre></td></tr></table></figure><ul><li><input disabled="" type="checkbox"> To Be Continue</li></ul>]]></content>
    
    
    <categories>
      
      <category>NumPy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>NumPy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NumPy 1-2</title>
    <link href="/2016/08/20/NumPy-1.2/"/>
    <url>/2016/08/20/NumPy-1.2/</url>
    
    <content type="html"><![CDATA[<h1 id="NumPy-1-2"><a href="#NumPy-1-2" class="headerlink" title="NumPy 1-2"></a>NumPy 1-2</h1><p>[TOC]</p><span id="more"></span><h2 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h2><p>NumPy采用元组tuple作为数组的下标</p><p>创建多维数组 : </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; import numpy as np<br>&gt;&gt;&gt; np<span class="hljs-selector-class">.arange</span>(<span class="hljs-number">0</span>, <span class="hljs-number">60</span>, <span class="hljs-number">10</span>)<span class="hljs-selector-class">.reshape</span>(-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>) + np<span class="hljs-selector-class">.arange</span>(<span class="hljs-number">0</span>, <span class="hljs-number">6</span>)<br>array(<span class="hljs-selector-attr">[[ 0,  1,  2,  3,  4,  5]</span>,<br>       <span class="hljs-selector-attr">[10, 11, 12, 13, 14, 15]</span>,<br>       <span class="hljs-selector-attr">[20, 21, 22, 23, 24, 25]</span>,<br>       <span class="hljs-selector-attr">[30, 31, 32, 33, 34, 35]</span>,<br>       <span class="hljs-selector-attr">[40, 41, 42, 43, 44, 45]</span>,<br>       <span class="hljs-selector-attr">[50, 51, 52, 53, 54, 55]</span>])<br>#<span class="hljs-number">0</span> -&gt; <span class="hljs-number">50</span>方向为第<span class="hljs-number">0</span>轴，<span class="hljs-number">0</span> -&gt; <span class="hljs-number">5</span>的方向为第<span class="hljs-number">1</span>轴<br></code></pre></td></tr></table></figure><p>利用数组切片语法访问元素、整数序列和布尔数组访问多维数组元素</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#利用数组切片语法访问元素<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[0, 3:5]</span><br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">3</span>, <span class="hljs-number">4</span>])</span></span><br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[4: ,4:]</span><br>array(<span class="hljs-selector-attr">[[44, 45]</span>,<br>       <span class="hljs-selector-attr">[54, 55]</span>])<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[:,2]</span><br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">2</span>, <span class="hljs-number">12</span>, <span class="hljs-number">22</span>, <span class="hljs-number">32</span>, <span class="hljs-number">42</span>, <span class="hljs-number">52</span>])</span></span><br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[2::2, ::2]</span><br>array(<span class="hljs-selector-attr">[[20, 22, 24]</span>,<br>       <span class="hljs-selector-attr">[40, 42, 44]</span>])<br></code></pre></td></tr></table></figure><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs inform7">&gt;&gt;&gt; a<span class="hljs-comment">[(0, 1, 2, 3, 4), (1, 2, 3, 4, 5)]</span><br>array(<span class="hljs-comment">[ 1, 12, 23, 34, 45]</span>)<br>&gt;&gt;&gt; a<span class="hljs-comment">[3:, <span class="hljs-comment">[0, 2, 5]</span>]</span><br>array(<span class="hljs-comment">[<span class="hljs-comment">[30, 32, 35]</span>,</span><br><span class="hljs-comment">       <span class="hljs-comment">[40, 42, 45]</span>,</span><br><span class="hljs-comment">       <span class="hljs-comment">[50, 52, 55]</span>]</span>)<br>&gt;&gt;&gt; mask = np.array(<span class="hljs-comment">[1, 0, 1, 0, 0, 1]</span>, dtype=np.bool)<br>#第0轴方向第0，2，5位置，然后第一轴方向第2列<br>&gt;&gt;&gt; a<span class="hljs-comment">[mask, 2]</span><br>array(<span class="hljs-comment">[ 2, 22, 52]</span>)<br>#第0轴方向第3位置，然后第一轴方向0，2，5位置<br>&gt;&gt;&gt; a<span class="hljs-comment">[3, mask]</span><br>array(<span class="hljs-comment">[30, 32, 35]</span>)<br></code></pre></td></tr></table></figure><h2 id="结构数组-Tuple-Dict"><a href="#结构数组-Tuple-Dict" class="headerlink" title="结构数组(Tuple + Dict)"></a>结构数组(Tuple + Dict)</h2><p>结构数组的dtype对象含有两个字典关键字: names和formats，每个关键字对应一个列表，names对应字段名，formats对应字段类型。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; persontype = np<span class="hljs-selector-class">.dtype</span>(&#123;<span class="hljs-string">&#x27;names&#x27;</span>:<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>, <span class="hljs-string">&#x27;weight&#x27;</span>]</span>, <span class="hljs-string">&#x27;formats&#x27;</span>:<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;S32&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span>]</span>&#125;)<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span> = np<span class="hljs-selector-class">.array</span>(<span class="hljs-selector-attr">[(<span class="hljs-string">&quot;Chen&quot;</span>, 32, 75.5), (<span class="hljs-string">&quot;Zhou&quot;</span>, 24, 65.2)]</span>, dtype=persontype)<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span>.dtype<br><span class="hljs-function"><span class="hljs-title">dtype</span><span class="hljs-params">([(<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;S32&#x27;</span>)</span></span>, (<span class="hljs-string">&#x27;age&#x27;</span>, <span class="hljs-string">&#x27;&lt;i4&#x27;</span>), (<span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-string">&#x27;&lt;f4&#x27;</span>)])<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[0]</span><br>(b<span class="hljs-string">&#x27;Chen&#x27;</span>, <span class="hljs-number">32</span>, <span class="hljs-number">75.5</span>)<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[0]</span><span class="hljs-selector-attr">[1]</span><br><span class="hljs-number">32</span><br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[0]</span>.dtype<br><span class="hljs-function"><span class="hljs-title">dtype</span><span class="hljs-params">([(<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;S32&#x27;</span>)</span></span>, (<span class="hljs-string">&#x27;age&#x27;</span>, <span class="hljs-string">&#x27;&lt;i4&#x27;</span>), (<span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-string">&#x27;&lt;f4&#x27;</span>)])<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[0]</span><span class="hljs-selector-attr">[1]</span>.dtype<br><span class="hljs-function"><span class="hljs-title">dtype</span><span class="hljs-params">(<span class="hljs-string">&#x27;int32&#x27;</span>)</span></span><br></code></pre></td></tr></table></figure><p>a[0]为结构元素，和数组a共享内存数据。</p><p><strong>结构和字典类似，可以通过其names(类似key)得到值(value)。</strong> </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[0]</span><span class="hljs-selector-attr">[<span class="hljs-string">&quot;name&quot;</span>]</span><br>b<span class="hljs-string">&#x27;Chen&#x27;</span><br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[<span class="hljs-string">&quot;name&quot;</span>]</span><br>array(<span class="hljs-selector-attr">[b<span class="hljs-string">&#x27;Chen&#x27;</span>, b<span class="hljs-string">&#x27;Zhou&#x27;</span>]</span>, <br>      dtype=<span class="hljs-string">&#x27;|S32&#x27;</span>)<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[<span class="hljs-string">&#x27;age&#x27;</span>]</span><br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">32</span>, <span class="hljs-number">24</span>], dtype=int32)</span></span><br></code></pre></td></tr></table></figure><p>利用a.tofile可以输出数组的二进制形式。</p><h2 id="操作函数ufunc"><a href="#操作函数ufunc" class="headerlink" title="操作函数ufunc()"></a>操作函数ufunc()</h2><p>我们利用np.cos()函数(属于ufunc运算)</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">x = np.linspace(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>*np.pi, <span class="hljs-number">7</span>)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">y = np.cos(x)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">y</span><br>array([ 1. ,  0.5, -0.5, -1. , -0.5,  0.5,  1. ])<br></code></pre></td></tr></table></figure><p>对比Python自带的math库的math.sin()和np.sin()，加上time库</p><p>发现，对于单个计算，math.sin()更快，但是多个计算时，np.sin()快</p><p>此外，两者的结果的类型不同</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs haskell">&gt;&gt;&gt; <span class="hljs-class"><span class="hljs-keyword">type</span>(<span class="hljs-title">math</span>.<span class="hljs-title">sin</span>(1))</span><br>&lt;<span class="hljs-keyword">class</span> &#x27;float&#x27;&gt;<br>&gt;&gt;&gt; <span class="hljs-class"><span class="hljs-keyword">type</span>(<span class="hljs-title">np</span>.<span class="hljs-title">sin</span>(1))</span><br>&lt;<span class="hljs-keyword">class</span> &#x27;numpy.float64&#x27;&gt;<br></code></pre></td></tr></table></figure><h3 id="add-函数"><a href="#add-函数" class="headerlink" title="add()函数"></a>add()函数</h3><p>np.add(a,b)返回a,b数组相加之和，np.add(a,b,a)返回a += b的结果a</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; <span class="hljs-selector-tag">a</span> = np<span class="hljs-selector-class">.arange</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>)<br>&gt;&gt;&gt; <span class="hljs-selector-tag">b</span> = np<span class="hljs-selector-class">.arange</span>(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>)<br>&gt;&gt;&gt; c = np<span class="hljs-selector-class">.add</span>(<span class="hljs-selector-tag">a</span>, b)<br>&gt;&gt;&gt; d = np<span class="hljs-selector-class">.add</span>(<span class="hljs-selector-tag">a</span>, <span class="hljs-selector-tag">b</span>, a)<br>&gt;&gt;&gt; a<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>])</span></span><br>&gt;&gt;&gt; b<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>])</span></span><br>&gt;&gt;&gt; c<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>])</span></span><br>&gt;&gt;&gt; d<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>])</span></span><br>&gt;&gt;&gt; a<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>])</span></span><br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; a<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>])</span></span><br>&gt;&gt;&gt; b<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.subtract</span>(<span class="hljs-selector-tag">a</span>, b)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([-<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.multiply</span>(<span class="hljs-selector-tag">a</span>, b)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">0</span>,  <span class="hljs-number">2</span>,  <span class="hljs-number">6</span>, <span class="hljs-number">12</span>])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.divide</span>(<span class="hljs-selector-tag">a</span>, b)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">0</span>.        ,  <span class="hljs-number">0.5</span>       ,  <span class="hljs-number">0.66666667</span>,  <span class="hljs-number">0.75</span>      ])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.true_divide</span>(<span class="hljs-selector-tag">a</span>, b)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">0</span>.        ,  <span class="hljs-number">0.5</span>       ,  <span class="hljs-number">0.66666667</span>,  <span class="hljs-number">0.75</span>      ])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.floor_divide</span>(<span class="hljs-selector-tag">a</span>, b)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.negative</span>(a)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">3</span>])</span></span><br>&gt;&gt;&gt; a<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.power</span>(<span class="hljs-selector-tag">a</span>, b)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">0</span>,  <span class="hljs-number">1</span>,  <span class="hljs-number">8</span>, <span class="hljs-number">81</span>])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.remainder</span>(<span class="hljs-selector-tag">a</span>, b)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.mod</span>(<span class="hljs-selector-tag">a</span>, b)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>])</span></span><br></code></pre></td></tr></table></figure><h2 id="分段函数-gt-frompyfunc函数"><a href="#分段函数-gt-frompyfunc函数" class="headerlink" title="分段函数 -&gt; frompyfunc函数"></a>分段函数 -&gt; frompyfunc函数</h2><p>frompyfunc(func, nin, nout)函数，三个参量分别代表计算单个元素的函数，此函数的输入参数的个数，此函数返回值的个数。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> numpy as np<br><span class="hljs-attribute">def</span> triangle_func(c, c<span class="hljs-number">0</span>, hc):<br>    <span class="hljs-attribute">def</span> trifunc(x):<br>        <span class="hljs-attribute">x</span> = x -int(x) #三角波周期为<span class="hljs-number">1</span><br>        <span class="hljs-attribute">if</span> x &gt;= c:<br>            <span class="hljs-attribute">r</span> = <span class="hljs-number">0</span>.<span class="hljs-number">0</span><br>        <span class="hljs-attribute">elif</span> x &lt; c<span class="hljs-number">0</span>:<br>            <span class="hljs-attribute">r</span> = x / c<span class="hljs-number">0</span> * hc<br>        <span class="hljs-attribute">else</span>:<br>            <span class="hljs-attribute">r</span> = (c-x) / (c-c<span class="hljs-number">0</span>) * hc<br>        <span class="hljs-attribute">return</span> r<br>    <span class="hljs-attribute">return</span> np.frompyfunc(trifunc, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-attribute">x</span> = np.linspace(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>)<br><span class="hljs-attribute">y2</span> = triangle_func(<span class="hljs-number">0</span>.<span class="hljs-number">6</span>, <span class="hljs-number">0</span>.<span class="hljs-number">4</span>, <span class="hljs-number">1</span>.<span class="hljs-number">0</span>)(x)<br></code></pre></td></tr></table></figure><h2 id="Broadcasting"><a href="#Broadcasting" class="headerlink" title="Broadcasting :"></a>Broadcasting :</h2><p>ogrid()对象 <strong>[注意不是函数]</strong> </p><p>语法为ogrid[a: b : cj]，分别为初值，终值，长度j</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs lua">&gt;&gt;&gt; x,y = np.ogrid[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>, <span class="hljs-number">0</span>:<span class="hljs-number">5</span>]<br>&gt;&gt;&gt; x<br>array(<span class="hljs-string">[[0],</span><br><span class="hljs-string">       [1],</span><br><span class="hljs-string">       [2],</span><br><span class="hljs-string">       [3],</span><br><span class="hljs-string">       [4]]</span>)<br>&gt;&gt;&gt; y<br>array(<span class="hljs-string">[[0, 1, 2, 3, 4]]</span>)<br>&gt;&gt;&gt; x,y = np.ogrid[<span class="hljs-number">0</span>:<span class="hljs-number">4</span>:<span class="hljs-number">3</span>j, <span class="hljs-number">0</span>:<span class="hljs-number">1</span>:<span class="hljs-number">2</span>j]<br>&gt;&gt;&gt; x<br>array(<span class="hljs-string">[[ 0.],</span><br><span class="hljs-string">       [ 2.],</span><br><span class="hljs-string">       [ 4.]]</span>)<br>&gt;&gt;&gt; y<br>array(<span class="hljs-string">[[ 0.,  1.]]</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NumPy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>NumPy</tag>
      
      <tag>Array</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NumPy 1-1</title>
    <link href="/2016/08/19/NumPy-1.1/"/>
    <url>/2016/08/19/NumPy-1.1/</url>
    
    <content type="html"><![CDATA[<h1 id="NumPy-1-1"><a href="#NumPy-1-1" class="headerlink" title="NumPy 1-1"></a>NumPy 1-1</h1><p>Python的array模块不支持多维和运算函数，因此利用NumPy。</p><p>NumPy提供了ndarray和ufunc两个基本对象。</p><span id="more"></span><h2 id="ndarray对象"><a href="#ndarray对象" class="headerlink" title="ndarray对象"></a>ndarray对象</h2><p><strong>数组的创建</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#创建数组<br>&gt;&gt;&gt; import numpy as np<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span> = np<span class="hljs-selector-class">.array</span>(<span class="hljs-selector-attr">[1, 2, 3, 4]</span>)<br>&gt;&gt;&gt; <span class="hljs-selector-tag">b</span> = np<span class="hljs-selector-class">.array</span>(<span class="hljs-selector-attr">[[1, 2, 3, 4]</span>, <span class="hljs-selector-attr">[4, 5, 6, 7]</span>, <span class="hljs-selector-attr">[7, 8, 9, 10]</span>])<br>&gt;&gt;&gt; a<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>])</span></span><br>&gt;&gt;&gt; b<br>array(<span class="hljs-selector-attr">[[ 1,  2,  3,  4]</span>,<br>       <span class="hljs-selector-attr">[ 4,  5,  6,  7]</span>,<br>       <span class="hljs-selector-attr">[ 7,  8,  9, 10]</span>])<br>#dtype属性默认<span class="hljs-number">64</span>bit长整型<br>&gt;&gt;&gt; <span class="hljs-selector-tag">b</span>.dtype<br><span class="hljs-function"><span class="hljs-title">dtype</span><span class="hljs-params">(<span class="hljs-string">&#x27;int64&#x27;</span>)</span></span><br>#返回数组大小<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span>.shape<br>(<span class="hljs-number">4</span>,)<br>&gt;&gt;&gt; <span class="hljs-selector-tag">b</span>.shape<br>(<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)<br>#改变轴的长度，数据在内存中的位置不发生改变，也就是交换shape的<span class="hljs-number">0</span>和<span class="hljs-number">1</span>轴的值，不会发生转置操作。<br>&gt;&gt;&gt; <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.shape</span> = (<span class="hljs-number">4</span>, <span class="hljs-number">3</span>)<br>&gt;&gt;&gt; b<br>array(<span class="hljs-selector-attr">[[ 1,  2,  3]</span>,<br>       <span class="hljs-selector-attr">[ 4,  4,  5]</span>,<br>       <span class="hljs-selector-attr">[ 6,  7,  7]</span>,<br>       <span class="hljs-selector-attr">[ 8,  9, 10]</span>])<br>#默认值-<span class="hljs-number">1</span>代表自动根据元素个数计算轴的长度。<br>&gt;&gt;&gt; <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.shape</span> = (<span class="hljs-number">2</span>, -<span class="hljs-number">1</span>)<br>&gt;&gt;&gt; b<br>array(<span class="hljs-selector-attr">[[ 1,  2,  3,  4,  4,  5]</span>,<br>       <span class="hljs-selector-attr">[ 6,  7,  7,  8,  9, 10]</span>])<br>#reshape可以创建一个改变了尺寸的新数组，并不改变原数组，两者共享数据存储内存区域，改变其中一个数组元素会修改另一个。<br>&gt;&gt;&gt; d = <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.reshape</span>((<span class="hljs-number">2</span>,<span class="hljs-number">2</span>))<br>&gt;&gt;&gt; a<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">1</span>, <span class="hljs-number">10</span>,  <span class="hljs-number">3</span>,  <span class="hljs-number">5</span>])</span></span><br>&gt;&gt;&gt; d<br>array(<span class="hljs-selector-attr">[[ 1, 10]</span>,<br>       <span class="hljs-selector-attr">[ 3,  5]</span>])<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[1]</span> = <span class="hljs-number">4</span><br>&gt;&gt;&gt; a<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>])</span></span><br>&gt;&gt;&gt; d<br>array(<span class="hljs-selector-attr">[[1, 4]</span>,<br>       <span class="hljs-selector-attr">[3, 5]</span>])<br></code></pre></td></tr></table></figure><p>可以在命名时决定dtype的类型</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; e = np<span class="hljs-selector-class">.array</span>(<span class="hljs-selector-attr">[1, 2, 3, 4]</span>, dtype=np.<span class="hljs-attribute">float</span>)<br>&gt;&gt;&gt; e<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">1</span>.,  <span class="hljs-number">2</span>.,  <span class="hljs-number">3</span>.,  <span class="hljs-number">4</span>.])</span></span><br>&gt;&gt;&gt; f = np<span class="hljs-selector-class">.array</span>(<span class="hljs-selector-attr">[1, 2, 3, 4]</span>, dtype=np.complex)<br>&gt;&gt;&gt; f<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">1</span>.+<span class="hljs-number">0</span>.j,  <span class="hljs-number">2</span>.+<span class="hljs-number">0</span>.j,  <span class="hljs-number">3</span>.+<span class="hljs-number">0</span>.j,  <span class="hljs-number">4</span>.+<span class="hljs-number">0</span>.j])</span></span><br>#直接命名时加入j会导致报错，因此复数数组可以利用更改的方式产生<br>#有直接的复数数组产生方式么？<br></code></pre></td></tr></table></figure><ul><li><input disabled="" type="checkbox"> <strong>有直接的复数数组产生方式么？</strong> (<em>待办</em>)</li></ul><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs dns">&gt;&gt;&gt; import numpy as np<br>#类似range，语句为arange(a, b, d)，产生首项为a，公差为d，尾项为b-d的等差数列。<br>&gt;&gt;&gt; np.arange(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>.<span class="hljs-number">1</span>)<br>array([ <span class="hljs-number">0</span>. ,  <span class="hljs-number">0</span>.<span class="hljs-number">1</span>,  <span class="hljs-number">0</span>.<span class="hljs-number">2</span>,  <span class="hljs-number">0</span>.<span class="hljs-number">3</span>,  <span class="hljs-number">0</span>.<span class="hljs-number">4</span>,  <span class="hljs-number">0</span>.<span class="hljs-number">5</span>,  <span class="hljs-number">0</span>.<span class="hljs-number">6</span>,  <span class="hljs-number">0</span>.<span class="hljs-number">7</span>,  <span class="hljs-number">0</span>.<span class="hljs-number">8</span>,  <span class="hljs-number">0</span>.<span class="hljs-number">9</span>])<br>#语句为linspace(a, b, n)，产生首项为a，尾项为b共n项的等差数列(公差d为(b-a)/(n-<span class="hljs-number">1</span>))<br>&gt;&gt;&gt; np.linspace(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>)<br>array([ <span class="hljs-number">0</span>.        ,  <span class="hljs-number">0.11111111</span>,  <span class="hljs-number">0.22222222</span>,  <span class="hljs-number">0.33333333</span>,  <span class="hljs-number">0.44444444</span>,<br>        <span class="hljs-number">0.55555556</span>,  <span class="hljs-number">0.66666667</span>,  <span class="hljs-number">0.77777778</span>,  <span class="hljs-number">0.88888889</span>,  <span class="hljs-number">1</span>.        ])<br>#语句为logspace(a, b, n)，产生首项为<span class="hljs-number">10</span>^a，尾项为<span class="hljs-number">10</span>^b，共n项的等比数列(q = <span class="hljs-number">10</span>^((b-a)/(n-<span class="hljs-number">1</span>))<br>&gt;&gt;&gt; np.logspace(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">20</span>)<br>array([   <span class="hljs-number">1</span>.        ,    <span class="hljs-number">1.27427499</span>,    <span class="hljs-number">1.62377674</span>,    <span class="hljs-number">2.06913808</span>,<br>          <span class="hljs-number">2.6366509</span> ,    <span class="hljs-number">3.35981829</span>,    <span class="hljs-number">4.2813324</span> ,    <span class="hljs-number">5.45559478</span>,<br>          <span class="hljs-number">6.95192796</span>,    <span class="hljs-number">8.8586679</span> ,   <span class="hljs-number">11.28837892</span>,   <span class="hljs-number">14.38449888</span>,<br>         <span class="hljs-number">18.32980711</span>,   <span class="hljs-number">23.35721469</span>,   <span class="hljs-number">29.76351442</span>,   <span class="hljs-number">37.92690191</span>,<br>         <span class="hljs-number">48.32930239</span>,   <span class="hljs-number">61.58482111</span>,   <span class="hljs-number">78.47599704</span>,  <span class="hljs-number">100</span>.        ])<br></code></pre></td></tr></table></figure><p>从字符串读取数字</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; str1 = <span class="hljs-string">&quot;abcdefgh&quot;</span><br>#int8对应ASCII码对应<br>&gt;&gt;&gt; np<span class="hljs-selector-class">.fromstring</span>(str1, dtype=np.int8)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([ <span class="hljs-number">97</span>,  <span class="hljs-number">98</span>,  <span class="hljs-number">99</span>, <span class="hljs-number">100</span>, <span class="hljs-number">101</span>, <span class="hljs-number">102</span>, <span class="hljs-number">103</span>, <span class="hljs-number">104</span>], dtype=int8)</span></span><br>#int16对应两项合并一项，第一项<span class="hljs-number">98</span>*<span class="hljs-number">256</span>+<span class="hljs-number">97</span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.fromstring</span>(str1, dtype=np.int16)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">25185</span>, <span class="hljs-number">25699</span>, <span class="hljs-number">26213</span>, <span class="hljs-number">26727</span>], dtype=int16)</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.fromstring</span>(str1, dtype=np.int32)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">1684234849</span>, <span class="hljs-number">1751606885</span>], dtype=int32)</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.fromstring</span>(str1, dtype=np.int64)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">7523094288207667809</span>])</span></span><br>&gt;&gt;&gt; np<span class="hljs-selector-class">.fromstring</span>(str1, dtype=np.<span class="hljs-attribute">float</span>)<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([  <span class="hljs-number">8.54088322</span>e+<span class="hljs-number">194</span>])</span></span><br></code></pre></td></tr></table></figure><p>利用fromfunction函数创建列表fromfunction(func, (a,b))，其中func为计算数组元素的函数，(a, b)为数组的shape()</p><p>例子 : 构建九九乘法表的数组</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp">import numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-function">def <span class="hljs-title">func1</span>(<span class="hljs-params">i, j</span>):</span><br><span class="hljs-function">    <span class="hljs-title">return</span> (<span class="hljs-params">i+<span class="hljs-number">1</span></span>) * (<span class="hljs-params">j+<span class="hljs-number">1</span></span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function">a</span> = np.fromfunction(func1, (<span class="hljs-number">9</span>, <span class="hljs-number">9</span>))<br>print(a)<br><br><span class="hljs-meta">#运行结果: </span><br>[<span class="hljs-meta">[  1.   2.   3.   4.   5.   6.   7.   8.   9.</span>]<br> [<span class="hljs-meta">  2.   4.   6.   8.  10.  12.  14.  16.  18.</span>]<br> [<span class="hljs-meta">  3.   6.   9.  12.  15.  18.  21.  24.  27.</span>]<br> [<span class="hljs-meta">  4.   8.  12.  16.  20.  24.  28.  32.  36.</span>]<br> [<span class="hljs-meta">  5.  10.  15.  20.  25.  30.  35.  40.  45.</span>]<br> [<span class="hljs-meta">  6.  12.  18.  24.  30.  36.  42.  48.  54.</span>]<br> [<span class="hljs-meta">  7.  14.  21.  28.  35.  42.  49.  56.  63.</span>]<br> [<span class="hljs-meta">  8.  16.  24.  32.  40.  48.  56.  64.  72.</span>]<br> [<span class="hljs-meta">  9.  18.  27.  36.  45.  54.  63.  72.  81.</span>]]<br></code></pre></td></tr></table></figure><p>数组支持切片操作 array[a: b :s] s为步长，a为开始，b为结束(不包含b)</p><p><strong>与Python中的序列不同，切片操作的结果和原始数组存储空间相同，因此改变切片操作的结果会导致原始数组存储空间内的元素的改变。</strong> </p><p>整数数列可以避免共享数据空间(使用整数数列下标得到新数组)</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; x = np<span class="hljs-selector-class">.arange</span>(<span class="hljs-number">24</span>,<span class="hljs-number">0</span>,-<span class="hljs-number">3</span>)<br>&gt;&gt;&gt; x<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">24</span>, <span class="hljs-number">21</span>, <span class="hljs-number">18</span>, <span class="hljs-number">15</span>, <span class="hljs-number">12</span>,  <span class="hljs-number">9</span>,  <span class="hljs-number">6</span>,  <span class="hljs-number">3</span>])</span></span><br>&gt;&gt;&gt; x<span class="hljs-selector-attr">[1]</span><br><span class="hljs-number">21</span><br>&gt;&gt;&gt; x<span class="hljs-selector-attr">[[1,3,-3,7]</span>]<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">21</span>, <span class="hljs-number">15</span>,  <span class="hljs-number">9</span>,  <span class="hljs-number">3</span>])</span></span><br>&gt;&gt;&gt; <span class="hljs-selector-tag">b</span> = x<span class="hljs-selector-attr">[[1,3,-3,7]</span>]<br>#等同语句 : <span class="hljs-selector-tag">b</span> = x<span class="hljs-selector-attr">[np.array([1,3,-3,7]</span>)]<br>&gt;&gt;&gt; b<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">21</span>, <span class="hljs-number">15</span>,  <span class="hljs-number">9</span>,  <span class="hljs-number">3</span>])</span></span><br>&gt;&gt;&gt; <span class="hljs-selector-tag">b</span><span class="hljs-selector-attr">[2]</span> = <span class="hljs-number">0</span><br>&gt;&gt;&gt; b<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">21</span>, <span class="hljs-number">15</span>,  <span class="hljs-number">0</span>,  <span class="hljs-number">3</span>])</span></span><br>&gt;&gt;&gt; x<br><span class="hljs-function"><span class="hljs-title">array</span><span class="hljs-params">([<span class="hljs-number">24</span>, <span class="hljs-number">21</span>, <span class="hljs-number">18</span>, <span class="hljs-number">15</span>, <span class="hljs-number">12</span>,  <span class="hljs-number">9</span>,  <span class="hljs-number">6</span>,  <span class="hljs-number">3</span>])</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NumPy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>NumPy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Weather Forecast</title>
    <link href="/2016/08/17/weather-forecast/"/>
    <url>/2016/08/17/weather-forecast/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-Document"><a href="#Python-Document" class="headerlink" title="Python : Document"></a>Python : Document</h1><h2 id="Grab-Weather-Forecast-with-Python-amp-Api"><a href="#Grab-Weather-Forecast-with-Python-amp-Api" class="headerlink" title="Grab Weather Forecast with Python &amp; Api"></a>Grab Weather Forecast with Python &amp; Api</h2><span id="more"></span><p>Code : </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> pickle<br><br>pickle_file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;city_list.pkl&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>)<br>city = pickle.load(pickle_file)<br><br>password=<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入城市:&#x27;</span>)<br>name1=city[password]<br><br><span class="hljs-comment">#url = &#x27;http://wthrcdn.etouch.cn/weather_mini?citykey=&#x27; + name1</span><br>jsonStr = requests.get(<span class="hljs-string">r&#x27;http://wthrcdn.etouch.cn/weather_mini?citykey=&#x27;</span> + name1).text<br><br>data = json.loads(jsonStr)<br>weather = data[<span class="hljs-string">&quot;data&quot;</span>]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;city:&quot;</span>, weather[<span class="hljs-string">&quot;city&quot;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;prompt:&quot;</span>, weather[<span class="hljs-string">&quot;ganmao&quot;</span>])<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> weather[<span class="hljs-string">&quot;forecast&quot;</span>]:<br>    <span class="hljs-built_in">print</span>(x[<span class="hljs-string">&quot;date&quot;</span>], x[<span class="hljs-string">&quot;type&quot;</span>], x[<span class="hljs-string">&quot;high&quot;</span>], x[<span class="hljs-string">&quot;low&quot;</span>], x[<span class="hljs-string">&quot;fengxiang&quot;</span>], x[<span class="hljs-string">&quot;fengli&quot;</span>])<br></code></pre></td></tr></table></figure><p>Result : </p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">请输入城市:苏州</span><br><span class="hljs-section">city: 苏州</span><br><span class="hljs-section">prompt: 各项气象条件适宜，发生感冒机率较低。但请避免长期处于空调房间中，以防感冒。</span><br>17日星期三 多云 高温 35℃ 低温 28℃ 东风 3-4级<br>18日星期四 晴 高温 36℃ 低温 28℃ 东南风 3-4级<br>19日星期五 晴 高温 37℃ 低温 29℃ 东南风 3-4级<br>20日星期六 多云 高温 37℃ 低温 28℃ 南风 3-4级<br>21日星期天 雷阵雨 高温 34℃ 低温 29℃ 东北风 3-4级<br><br><span class="hljs-section">请输入城市:北京</span><br><span class="hljs-section">city: 北京</span><br><span class="hljs-section">prompt: 各项气象条件适宜，无明显降温过程，发生感冒机率较低。</span><br>17日星期三 阵雨 高温 28℃ 低温 22℃ 无持续风向 微风级<br>18日星期四 大雨 高温 25℃ 低温 22℃ 无持续风向 微风级<br>19日星期五 多云 高温 28℃ 低温 23℃ 无持续风向 微风级<br>20日星期六 晴 高温 30℃ 低温 23℃ 无持续风向 微风级<br>21日星期天 晴 高温 32℃ 低温 22℃ 无持续风向 微风级<br><br><span class="hljs-section">请输入城市:哈尔滨</span><br><span class="hljs-section">city: 哈尔滨</span><br><span class="hljs-section">prompt: 各项气象条件适宜，无明显降温过程，发生感冒机率较低。</span><br>17日星期三 晴 高温 28℃ 低温 18℃ 西风 微风级<br>18日星期四 多云 高温 28℃ 低温 18℃ 南风 微风级<br>19日星期五 多云 高温 27℃ 低温 17℃ 东南风 微风级<br>20日星期六 多云 高温 27℃ 低温 17℃ 东南风 3-4级<br>21日星期天 雷阵雨 高温 24℃ 低温 15℃ 东风 3-4级<br></code></pre></td></tr></table></figure><blockquote><p>注意此处使用的城市代码来源于国家气象局</p></blockquote><p><a href="http://blog.csdn.net/wmqi10/article/details/29566301">[转载]API及全国地区代码</a> </p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Scrapy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>api</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise-17</title>
    <link href="/2016/08/11/Exercise-17/"/>
    <url>/2016/08/11/Exercise-17/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-17-Function-1"><a href="#Exercise-17-Function-1" class="headerlink" title="Exercise 17 : Function 1"></a>Exercise 17 : Function 1</h1><p>Test : </p><ol><li>DRY : Don’t Repeat Yourself. </li><li>The use of function : <ul><li>To reduce the amount of code. </li><li>To make fixing the debug easier. </li><li>To make easier to read. </li></ul></li></ol><span id="more"></span><p>Try : </p><ol><li><p>Use function to act as pow(a, b) = a**b</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql">def <span class="hljs-built_in">power</span>(x, y):<br>    <span class="hljs-keyword">result</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-keyword">range</span>(y):<br>        <span class="hljs-keyword">result</span> <span class="hljs-operator">*</span><span class="hljs-operator">=</span> x<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">result</span><br><br>print(<span class="hljs-built_in">power</span>(<span class="hljs-number">3</span>,<span class="hljs-number">5</span>))<br></code></pre></td></tr></table></figure></li><li><p>Greatest Common Divisor (gcd)</p><p>gcd(x, y) = gcd(y, x mod y) </p><p>Euclidean algorithm (辗转相除法)</p><p>for example : </p><table><thead><tr><th>168</th><th>63</th><th></th><th></th></tr></thead><tbody><tr><td>168</td><td>63</td><td>42</td><td>余数0</td></tr><tr><td>63</td><td>42</td><td>21</td><td>gcd = 21</td></tr><tr><td>2*63+ 42</td><td>42+21</td><td>2*42</td><td></td></tr></tbody></table><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sas">def gcd(<span class="hljs-meta">x</span>, y):<br>    <span class="hljs-meta">while</span> y:<br>        t = <span class="hljs-meta">x</span><span class="hljs-name">%y</span><br>        <span class="hljs-meta">x</span> = y<br>        y = t<br><br>    <span class="hljs-meta">return</span> <span class="hljs-meta">x</span><br><br><span class="hljs-meta">x</span> =<span class="hljs-meta"> int(</span>i<span class="hljs-meta">nput(</span><span class="hljs-string">&#x27;Pls input an integer x:&#x27;</span>))<br>y =<span class="hljs-meta"> int(</span>i<span class="hljs-meta">nput(</span><span class="hljs-string">&#x27;Pls input an integer y:&#x27;</span>))<br>p<span class="hljs-meta">rint(</span>gcd(<span class="hljs-meta">x</span>,y))<br></code></pre></td></tr></table></figure></li><li><p>Turn decimal system to binary system.</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs stata">def DectoBin(<span class="hljs-keyword">dec</span>):<br>    temp = [ ]<br>    result = &#x27; &#x27;<br><br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">dec</span>:<br>        quo = <span class="hljs-keyword">dec</span> % 2<br>        <span class="hljs-keyword">dec</span> = <span class="hljs-keyword">dec</span> <span class="hljs-comment">// 2</span><br>        temp.<span class="hljs-keyword">append</span>(quo)<br><br>    <span class="hljs-keyword">while</span> temp:<br>        result += str(temp.pop())<br><br>    <span class="hljs-keyword">return</span> result<br><br><span class="hljs-keyword">Dec</span> = int(<span class="hljs-keyword">input</span>(&#x27;Pls <span class="hljs-keyword">input</span> <span class="hljs-keyword">an</span> integer:&#x27;))<br><span class="hljs-keyword">print</span>(&#x27;Bin =&#x27;, DectoBin(<span class="hljs-keyword">Dec</span>))<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Latex-C1</title>
    <link href="/2016/08/10/Latex-C1/"/>
    <url>/2016/08/10/Latex-C1/</url>
    
    <content type="html"><![CDATA[<h1 id="Latex-Chapter-1"><a href="#Latex-Chapter-1" class="headerlink" title="Latex - Chapter 1"></a>Latex - Chapter 1</h1><h2 id="Chapter-1-Elementary-Knowledge"><a href="#Chapter-1-Elementary-Knowledge" class="headerlink" title="Chapter 1 : Elementary Knowledge"></a>Chapter 1 : Elementary Knowledge</h2><span id="more"></span><p>pronounciation: Lay-tech</p><ul><li>Continous many space is equal to one space.</li><li>A blank line is used to end the paragraph. Several blank line is same as one.</li><li>Escape character in latex is \. We use \ to get the reserved character, such as # $ % ^ &amp; _ { } ~ \</li><li>In latex, \\ is to get a new paragraph rather than \. </li></ul><p>Latex Commands : </p><ul><li>It is variable between capital and lower-case.</li><li>The Command starts with \, adds with letter, and ends up with space, number and other character.</li><li>{} will provide a space after the commands.</li><li>command{parameter}. </li></ul><p>Annotate : </p><ul><li>% is for annotation. </li><li>After %, the text, character in this line and the space in next line before the text will be neglected.</li></ul><p>Framework : </p><ol><li>The file must start with <strong>\documentclass{…}</strong></li><li>We can use package to add new commands, with the <strong>\usepackage{…}</strong></li><li>After introduction, we can use <strong>\begin{document}</strong> to begin the document.</li><li>After text, we use <strong>\end{document}</strong> to end.</li></ol><p>Document Arragement</p><ol><li><p>The type of the document will be provided from <strong>\documentclass[options]{class}</strong>.</p><p> In <strong>class</strong>, it state the type of document, i.e.</p><p><em><strong>article, report, book, slides</strong></em>. <em><strong>article</strong></em> is for journal, short report, program, invitation. <em><strong>report</strong></em> is for long report, short book and doctoral dissertation. <em><strong>book</strong></em> is only for long book. <em><strong>slides</strong></em> is for powerpoint. </p></li><li><p>In <strong>options</strong>, we need to clarify the attribute of the document. For example, <em><strong>[11pt, twoside, a4paper]</strong></em> We can set these parameters.</p><ul><li>The <strong>font size</strong> can be set as 10/11/12pt, <strong>default</strong> for 10pt. </li><li>The <strong>paper size</strong> can be set as a4paper/ a5paper/ letterpaper/ b5paper/ executivepaper/ legalpaper, <strong>default</strong> for letterpaper. </li><li><strong>fleqn</strong> is to make the mathematical formula at the left, rather than middle. <strong>leqno</strong> is to make the number of formula at the left. </li><li><strong>titlepage, notitlepage</strong> is to add a new page or not behind the document title. <strong>default</strong> in article for no new page, in contrast with that in book.</li><li><strong>onecolumn, twocolumn</strong> set the manner of the typeset with one or two column.</li><li><strong>twoside, oneside</strong> stand for the typeset with writting on both sides or one side. <strong>default</strong> in article and report is oneside, in reverse with that in book. <em><strong>But when it is printed, twoside and oneside is the same because it is only for typeset. So you need to set again for print.</strong></em></li><li><strong>openright, openany</strong> defines the start of the chapter only in report and book. In report, <strong>default</strong> for openany. In book, <strong>default</strong> for openright.</li></ul></li><li><p><strong>\usepackage[options]{package}</strong> to make package in. </p></li></ol><p>Page Styles : </p><ol><li><p>Command : <strong>\pagestyle{style}</strong></p><p>We can use this command to define the format of the header/footer.</p><p>The predefined set is plain, headings, empty.</p></li><li><p>We can use <strong>\thispagestyle{style}</strong> to define the page style of this page.</p></li></ol><p>Big Document : </p><ol><li><strong>\include{filename}</strong> add the filename.tex into the document. We need to know the LATEX will begin a new page before the filename.tex.</li><li><strong>\includeonly{filename,filename,filename,…}</strong> </li><li><strong>\input{filename}</strong> : simply include the file</li></ol><p>Fast Check : </p><p>​    <strong>\usepackage{syntonly}</strong></p><p>​    <strong>\syntaxonly</strong></p>]]></content>
    
    
    <categories>
      
      <category>Latex</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Latex</tag>
      
      <tag>basis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise-16</title>
    <link href="/2016/08/08/Exercise-16/"/>
    <url>/2016/08/08/Exercise-16/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-16-String-3"><a href="#Exercise-16-String-3" class="headerlink" title="Exercise 16 : String 3"></a>Exercise 16 : String 3</h1><p>Test : </p><ol><li><p>列表、元组和字符串同属于序列属性</p><p>共同特点 : </p><ol><li><p>都可以通过索引得到每一个元素</p></li><li><p>默认索引值从0开始，但是支持负数索引(反向排序)</p></li><li><p>可以通过分片的方法得到一个范围内的元素集合</p></li><li><p>有很多共同操作符</p><span id="more"></span></li></ol></li><li><p>将可迭代对象转换为列表、元组和字符串</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#list([iterable])</span><br><span class="hljs-comment">#tuple([iterable])</span><br><span class="hljs-comment">#str(obj)</span><br>a = list()<br>a<span class="hljs-regexp">//</span>[]<br>b = <span class="hljs-string">&#x27;I love FishC.com&#x27;</span><br>b = list(b)<br>b <span class="hljs-regexp">//</span>[<span class="hljs-string">&#x27;I&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;v&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;h&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;m&#x27;</span>]<br>c = (<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">21</span>, <span class="hljs-number">34</span>)<br>c = list(c)<br>c<span class="hljs-regexp">//</span>[<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">21</span>, <span class="hljs-number">34</span>]<br></code></pre></td></tr></table></figure></li><li><p>迭代 : 重复反馈过程的活动，其目的通常是为了接近并到达所需的目标或结果。每一次对过程的重复被称为一次”迭代”，而每一次迭代得到的结果会被用来作为下一次迭代的初始值。</p></li><li><p>max(‘I love you!’) 返回值y（按照ASCII码大小）</p></li><li><p>查找[类似字典按照键寻找值]</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gradle">name = input(<span class="hljs-string">&#x27;Pls input the name you look for : &#x27;</span>)<br>score = [[<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-number">95</span>], [<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-number">90</span>], [<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-number">85</span>], [<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-number">80</span>], [<span class="hljs-string">&#x27;E&#x27;</span>,<span class="hljs-number">100</span>]]<br>IsFind = <span class="hljs-keyword">False</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> in score:<br><span class="hljs-keyword">if</span> name in <span class="hljs-keyword">each</span>:<br><span class="hljs-keyword">print</span>(name + <span class="hljs-string">&#x27;的得分是: &#x27;</span>, <span class="hljs-keyword">each</span>[<span class="hljs-number">1</span>])<br>IsFind = <span class="hljs-keyword">True</span><br><span class="hljs-keyword">break</span><br><br><span class="hljs-keyword">if</span> IsFind == <span class="hljs-keyword">False</span>:<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;查找的名字不存在！&#x27;</span>)<br></code></pre></td></tr></table></figure></li></ol><p>Try : </p><ol><li><p>实现min()这个BIF</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">def</span> min1(x):<br>    least = x[<span class="hljs-number">0</span>]<br><br>    <span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> in x:<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">each</span> &lt; least:<br>            least = <span class="hljs-keyword">each</span><br><br>    <span class="hljs-keyword">return</span> least<br><br><span class="hljs-keyword">print</span>(min1(<span class="hljs-string">&#x27;123456789&#x27;</span>))<br></code></pre></td></tr></table></figure></li><li><p>sum()对于参数中含字符串会导致出错，现在写一个函数使其忽略字符串从而实现sum()的功能。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">def</span> sum1(x):<br>    result = <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> in x:<br>        <span class="hljs-keyword">if</span> isinstance(<span class="hljs-keyword">each</span>, <span class="hljs-keyword">int</span>) or isinstance(<span class="hljs-keyword">each</span>, <span class="hljs-keyword">float</span>):<br>            result += <span class="hljs-keyword">each</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">continue</span><br><br>    <span class="hljs-keyword">return</span> result<br><br><span class="hljs-keyword">print</span>(sum1([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-keyword">True</span>, <span class="hljs-string">&#x27;123&#x27;</span>]))<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise_15</title>
    <link href="/2016/08/07/Exercise-15/"/>
    <url>/2016/08/07/Exercise-15/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-15-String-2"><a href="#Exercise-15-String-2" class="headerlink" title="Exercise 15 : String 2"></a>Exercise 15 : String 2</h1><p>Test :</p><table><thead><tr><th align="center">sign</th><th align="center">explanation</th></tr></thead><tbody><tr><td align="center">%c</td><td align="center">格式化字符及ASCII码</td></tr><tr><td align="center">%s</td><td align="center">格式化字符串</td></tr><tr><td align="center">%d</td><td align="center">格式化整数</td></tr><tr><td align="center">%o</td><td align="center">格式化无符号八进制数</td></tr><tr><td align="center">%x</td><td align="center">格式化无符号十六进制数</td></tr><tr><td align="center">%X</td><td align="center">格式化无符号十六进制数(Capital)</td></tr><tr><td align="center">%f</td><td align="center">格式化定点数，可指定小数点后的精度</td></tr><tr><td align="center">%e</td><td align="center">用科学计数法格式化定点数</td></tr><tr><td align="center">%g</td><td align="center">根据值得大小确定使用%f还是%e</td></tr><tr><td align="center">%G</td><td align="center">根据值得大小确定使用%f还是%E</td></tr></tbody></table><span id="more"></span><ol><li><p>打印对比</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-string">&quot;&#123;&#123;1&#125;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;不打印&quot;</span>,<span class="hljs-string">&quot;打印&quot;</span>)<br><span class="hljs-string">&#x27;&#123;1&#125;&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-string">&quot;&#123;1&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;不打印&quot;</span>,<span class="hljs-string">&quot;打印&quot;</span>)<br><span class="hljs-string">&#x27;打印&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>关键字参数 : 绑定参数名和值</p><p>位置参数 : 需要数量一致，进行传递形参  </p></li><li><p>格式化format和%f</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-string">&#x27;&#123;0&#125;&#123;1:.2f&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;Pi = &#x27;</span>, <span class="hljs-number">3.1415</span>)<br><span class="hljs-string">&#x27;Pi = 3.14&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-string">&quot;Pi = %.2f&quot;</span> % <span class="hljs-number">3.1415</span><br><span class="hljs-string">&#x27;Pi = 3.14&#x27;</span><br></code></pre></td></tr></table></figure></li></ol><p>Try : 整数进制转换程序</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dart">q = True<br><span class="hljs-keyword">while</span> q:<br>    <span class="hljs-built_in">num</span> = input(<span class="hljs-string">&#x27;Pls key an integer in(input Q end program):&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">num</span> != <span class="hljs-string">&#x27;Q&#x27;</span>:<br>        <span class="hljs-built_in">num</span> = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">num</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;decimal -&gt; octal : %d -&gt; 0o%o&#x27;</span> % (<span class="hljs-built_in">num</span>, <span class="hljs-built_in">num</span>))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;decimal -&gt; hexidecimal : %d -&gt; 0a%x&#x27;</span> % (<span class="hljs-built_in">num</span>, <span class="hljs-built_in">num</span>))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;decimal -&gt; binary : %d -&gt;&#x27;</span> % <span class="hljs-built_in">num</span>, bin(<span class="hljs-built_in">num</span>))<br>    <span class="hljs-keyword">else</span>:<br>        q = False<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Recursion: Hanoi Tower</title>
    <link href="/2016/08/05/Python-recursion2/"/>
    <url>/2016/08/05/Python-recursion2/</url>
    
    <content type="html"><![CDATA[<h1 id="The-Tower-of-Hanoi"><a href="#The-Tower-of-Hanoi" class="headerlink" title="The Tower of Hanoi"></a>The Tower of Hanoi</h1><p>It consists of three rods, and a number of disks of different sizes which can slide onto any rod. The puzzle starts with the disks in a neat stack in ascending order of size on one rod, the smallest at the top, thus making a conical shape.</p><p>The objective of the puzzle is to move the entire stack to another rod, obeying the following simple rules:</p><ol><li>Only one disk can be moved at a time.</li><li>Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack i.e. a disk can only be moved if it is the uppermost disk on a stack.</li><li>No disk may be placed on top of a smaller disk.</li></ol><span id="more"></span><p>With three disks, the puzzle can be solved in seven moves. The minimum number of moves required to solve a Tower of Hanoi puzzle is 2[^n] - 1, where n is the number of disks.</p><p>Solution : </p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sas">def hanoi(n, <span class="hljs-meta">x</span>, y, z):<br>    # n is for number of disk, <span class="hljs-meta">x</span>,y,z represent the three stacks<br>    <span class="hljs-meta">if</span> n == 1:<br>        p<span class="hljs-meta">rint(</span><span class="hljs-meta">x</span>, <span class="hljs-string">&#x27; --&gt; &#x27;</span>, z)<br>    <span class="hljs-meta">else</span>:<br>        hanoi(n-1, <span class="hljs-meta">x</span>, z, y) # move n-1 disks <span class="hljs-meta">from</span> <span class="hljs-meta">x</span> to z<br>        p<span class="hljs-meta">rint(</span><span class="hljs-meta">x</span>, <span class="hljs-string">&#x27; --&gt; &#x27;</span>, z) # move the bottom disk <span class="hljs-meta">from</span> <span class="hljs-meta">x</span> to z<br>        hanoi(n-1, y, <span class="hljs-meta">x</span>, z) # move n-1 disks <span class="hljs-meta">from</span> y to z<br>        <br><br>n =<span class="hljs-meta"> int(</span>i<span class="hljs-meta">nput(</span><span class="hljs-string">&#x27;Pls enter the number of disk:&#x27;</span>))<br>hanoi(n, <span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>, <span class="hljs-string">&#x27;Z&#x27;</span>)<br></code></pre></td></tr></table></figure><p>Add the counts :</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sas"># move n disks <span class="hljs-meta">from</span> <span class="hljs-meta">x</span> to z<br>steps = 0<br>def move(n, <span class="hljs-meta">x</span>, y):<br>    global steps<br>    steps += 1<br>    p<span class="hljs-meta">rint(</span><span class="hljs-string">&#x27;Move&#x27;</span>, n, <span class="hljs-string">&#x27;disks&#x27;</span>, <span class="hljs-meta">x</span>, <span class="hljs-string">&#x27; --&gt; &#x27;</span>, y)<br>def hanoi(n, <span class="hljs-meta">x</span>, y, z):<br>    # n is for number of disk, <span class="hljs-meta">x</span>,y,z represent the three stacks<br>    <span class="hljs-meta">if</span> n == 1:<br>        move(n, <span class="hljs-meta">x</span>, z)<br>    <span class="hljs-meta">else</span>:<br>        hanoi(n-1, <span class="hljs-meta">x</span>, z, y) # move n-1 disks <span class="hljs-meta">from</span> <span class="hljs-meta">x</span> to y <span class="hljs-meta">by</span> z<br>        move(n, <span class="hljs-meta">x</span>, z) # move the bottom disk <span class="hljs-meta">from</span> <span class="hljs-meta">x</span> to z<br>        hanoi(n-1, y, <span class="hljs-meta">x</span>, z) # move n-1 disks <span class="hljs-meta">from</span> y to z <span class="hljs-meta">by</span> <span class="hljs-meta">x</span><br>       <br><br>n =<span class="hljs-meta"> int(</span>i<span class="hljs-meta">nput(</span><span class="hljs-string">&#x27;Pls enter the number of disk:&#x27;</span>))<br>hanoi(n, <span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>, <span class="hljs-string">&#x27;Z&#x27;</span>)<br>p<span class="hljs-meta">rint(</span><span class="hljs-string">&#x27;steps: &#x27;</span>, steps)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>classical mathematics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Recursion: Fibonacci Array</title>
    <link href="/2016/08/05/Python-recursion/"/>
    <url>/2016/08/05/Python-recursion/</url>
    
    <content type="html"><![CDATA[<h1 id="Fibonacci-Array"><a href="#Fibonacci-Array" class="headerlink" title="Fibonacci Array"></a>Fibonacci Array</h1><p>Fibonacci array (斐波那契数列)的编程实现</p><p>golden section/ratio 黄金分割/比 : 0.618</p><p>$A_n = A_{n-1} + A_{n-2} $</p><p>$\lim\limits_{n\to \infty} \frac{A_{n-1}}{A_n}=\frac{\sqrt{5}-1}{2} $</p><p>$ \begin{eqnarray}F(n)=         \begin{cases}  1, &amp;n=1 \cr 1, &amp;n=2 \cr F(n-1)+F(n-2), &amp;n&gt;2         \end{cases}\end{eqnarray} $<br>利用迭代和递归两种算法来求出n = 20 时，F(n)=? </p><span id="more"></span><p>Iteration : </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">def</span> Fibonacci(n):<br>    <span class="hljs-attribute">n1</span> = <span class="hljs-number">1</span><br>    <span class="hljs-attribute">n2</span> = <span class="hljs-number">1</span><br>    <span class="hljs-attribute">n3</span> = <span class="hljs-number">1</span><br><br>    <span class="hljs-attribute">if</span> n &lt; <span class="hljs-number">1</span>:<br>        <span class="hljs-attribute">print</span>(&#x27;输入有误!&#x27;)<br>        <span class="hljs-attribute">return</span> -<span class="hljs-number">1</span><br><br>    <span class="hljs-attribute">while</span> n &gt;  <span class="hljs-number">2</span>:<br>        <span class="hljs-attribute">n3</span> = n<span class="hljs-number">2</span> + n<span class="hljs-number">1</span><br>        <span class="hljs-attribute">n1</span> = n<span class="hljs-number">2</span><br>        <span class="hljs-attribute">n2</span> = n<span class="hljs-number">3</span><br>        <span class="hljs-attribute">n</span> -= <span class="hljs-number">1</span><br><br>    <span class="hljs-attribute">return</span> n<span class="hljs-number">3</span><br><br><span class="hljs-attribute">number</span> = int(input(&#x27;Please input an interger:&#x27;))<br><span class="hljs-attribute">result</span> = Fibonacci(number) <br><span class="hljs-attribute">print</span>(<span class="hljs-string">&quot;n=%d时斐波那契数列值为：%d&quot;</span> % (number, result))<br></code></pre></td></tr></table></figure><p>Recursion(divide and conquer algorithm) : </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Fibonacci</span>(<span class="hljs-params">n</span>):</span><br>    <span class="hljs-keyword">if</span> n &lt; <span class="hljs-number">1</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;输入有误!&#x27;</span>)<br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <br>    <span class="hljs-keyword">elif</span> n == <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> n==<span class="hljs-number">2</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> Fibonacci(n-<span class="hljs-number">1</span>) + Fibonacci(n-<span class="hljs-number">2</span>)<br><br>number = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Please input an interger:&#x27;</span>))<br>result = Fibonacci(number) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n=%d时斐波那契数列值为：%d&quot;</span> % (number, result))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>classical mathematics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Practice One</title>
    <link href="/2016/08/03/Practice-One/"/>
    <url>/2016/08/03/Practice-One/</url>
    
    <content type="html"><![CDATA[<h1 id="Practice-One"><a href="#Practice-One" class="headerlink" title="Practice One"></a>Practice One</h1><p>Question 1: How much three-digit number can we get from number 1,2,3,4 ? Here the three-digit number has no duplicate numbers and is not the same as each other.</p><p>Question 2 : How much three-digit number can we get from number 0,1,2,3 ? Here the three-digit number has no duplicate numbers and is not the same as each other.</p><span id="more"></span><h5 id="Question-1-How-much-three-digit-number-can-we-get-from-number-1-2-3-4-Here-the-three-digit-number-has-no-duplicate-numbers-and-is-not-the-same-as-each-other"><a href="#Question-1-How-much-three-digit-number-can-we-get-from-number-1-2-3-4-Here-the-three-digit-number-has-no-duplicate-numbers-and-is-not-the-same-as-each-other" class="headerlink" title="Question 1: How much three-digit number can we get from number 1,2,3,4 ? Here the three-digit number has no duplicate numbers and is not the same as each other."></a>Question 1: How much three-digit number can we get from number 1,2,3,4 ? Here the three-digit number has no duplicate numbers and is not the same as each other.</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">n</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>):<br>    <span class="hljs-attribute">for</span> j in range(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>):<br>        <span class="hljs-attribute">for</span> k in range(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>):<br>            <span class="hljs-attribute">if</span> i != j and j != k and i != k:<br>                <span class="hljs-attribute">a</span> = <span class="hljs-number">100</span>*i + <span class="hljs-number">10</span>*j +k<br>                <span class="hljs-attribute">print</span>(a)<br>                <span class="hljs-attribute">n</span> += <span class="hljs-number">1</span><br><span class="hljs-attribute">print</span>(n)<br></code></pre></td></tr></table></figure><h5 id="Question-2-How-much-three-digit-number-can-we-get-from-number-0-1-2-3-Here-the-three-digit-number-has-no-duplicate-numbers-and-is-not-the-same-as-each-other"><a href="#Question-2-How-much-three-digit-number-can-we-get-from-number-0-1-2-3-Here-the-three-digit-number-has-no-duplicate-numbers-and-is-not-the-same-as-each-other" class="headerlink" title="Question 2 : How much three-digit number can we get from number 0,1,2,3 ? Here the three-digit number has no duplicate numbers and is not the same as each other."></a>Question 2 : How much three-digit number can we get from number 0,1,2,3 ? Here the three-digit number has no duplicate numbers and is not the same as each other.</h5><p><strong>Hint : hundreds place must not be zero.</strong> </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">n</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>):<br>    <span class="hljs-attribute">for</span> j in range(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>):<br>        <span class="hljs-attribute">for</span> k in range(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>):<br>            <span class="hljs-attribute">if</span> i !=<span class="hljs-number">0</span>:<br>                <span class="hljs-attribute">if</span> i != j and j != k and i != k:<br>                    <span class="hljs-attribute">a</span> = <span class="hljs-number">100</span>*i + <span class="hljs-number">10</span>*j +k<br>                    <span class="hljs-attribute">print</span>(a)<br>                    <span class="hljs-attribute">n</span> += <span class="hljs-number">1</span><br><span class="hljs-attribute">print</span>(n)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>mathematics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise_14</title>
    <link href="/2016/08/03/Exercise-14/"/>
    <url>/2016/08/03/Exercise-14/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-14-String"><a href="#Exercise-14-String" class="headerlink" title="Exercise 14 : String"></a>Exercise 14 : String</h1><span id="more"></span><p>Test : </p><ol><li><p>Multi-line string : </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>str1 = <span class="hljs-string">&#x27;a\</span><br><span class="hljs-string">b\</span><br><span class="hljs-string">c2\</span><br><span class="hljs-string">d&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>str1<br><span class="hljs-string">&#x27;abc2d&#x27;</span><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>str2 = <span class="hljs-string">&#x27;&#x27;&#x27;a</span><br><span class="hljs-string">vfdsfbf&#x27;c</span><br><span class="hljs-string">sad&#x27;dadas</span><br><span class="hljs-string">ca&#x27;&#x27;&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>str2<br><span class="hljs-string">&quot;a\nvfdsfbf&#x27;c\nsad&#x27;dadas\nca&quot;</span><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>str3 =(<span class="hljs-string">&#x27;add2&#x27;</span><br>       <span class="hljs-string">&#x27;adsd2&#x27;</span><br>       <span class="hljs-string">&#x27;8dajk&#x27;</span><br>       <span class="hljs-string">&#x27;weew&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>str3<br><span class="hljs-string">&#x27;add2adsd28dajkweew&#x27;</span><br></code></pre></td></tr></table></figure><p>分别利用’’’进行开始和换行，还有(‘A’ 换行 ‘B’换行 ‘c’)，以及’A\ b\ D\ ‘</p></li><li><p>三引号字符串在不赋值的情况下用作跨行注释</p><p>单行注释利用 # 完成</p></li><li><p>file1 = open(‘C:\windows\temp\readme.txt’, ‘r’)表示以只读方式打开指定位置文件，但语句会报错 : </p><p><strong>原因为在字符串中\为转义字符，\t和\r分别强制代表TAB和Enter，因此报错。</strong> </p><p>我们采用在语句前加r从而避免这一问题，如 : </p><p>file1 = open(r’C:\windows\temp\readme.txt’, ‘r’)</p></li><li><p>按要求对下字符串进行操作 : </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">&gt;&gt;&gt; str1 = &#x27;<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;xbchen1994.github.io&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>Aaron资源打包<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>&#x27;<br></code></pre></td></tr></table></figure><p>[1]<strong>提取xbchen1994.github.io(正索引)</strong> </p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">&gt;&gt;&gt; str1[<span class="hljs-number">9</span>:<span class="hljs-number">29</span>]<br>&#x27;xbchen<span class="hljs-number">1994</span>.github.io&#x27;<br></code></pre></td></tr></table></figure><p>[2]<strong>提取xbchen1994.github.io(负索引)</strong> </p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&gt;&gt;&gt; str1[<span class="hljs-number">-51</span>:-<span class="hljs-number">31</span>]<br><span class="hljs-string">&#x27;xbchen1994.github.io&#x27;</span><br></code></pre></td></tr></table></figure><p>[3]<strong>正负索引一起时</strong> </p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&gt;&gt;&gt; str1[<span class="hljs-number">9</span>:-<span class="hljs-number">31</span>]<br><span class="hljs-string">&#x27;xbchen1994.github.io&#x27;</span><br>&gt;&gt;&gt; str1[<span class="hljs-number">-51</span>:<span class="hljs-number">29</span>]<br><span class="hljs-string">&#x27;xbchen1994.github.io&#x27;</span><br></code></pre></td></tr></table></figure><p>len(str1) = 60 因此正索引从左侧0开始数，负索引从右侧0开始数，从而得出的索引值即为最后结果。</p><p>str1[::3]从index=0开始，每隔3索引组成新字符串</p><p>str1[2::4]从index=2开始，每隔4索引组成新字符串</p><p>str1[::-1]反向索引，可以<em><strong>反转字符串</strong></em> </p></li></ol><p>Try : </p><ol><li><p>写一个密码安全性检查的脚本代码 : check.py</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">#密码安全性检查代码  </span><br><span class="hljs-meta">#  </span><br><span class="hljs-meta"># 低级密码要求：  </span><br><span class="hljs-meta">#   1. 密码由单纯的数字或字母组成  </span><br><span class="hljs-meta">#   2. 密码长度小于等于8位  </span><br><span class="hljs-meta">#  </span><br><span class="hljs-meta"># 中级密码要求：  </span><br><span class="hljs-meta">#   1. 密码必须由数字、字母或特殊字符（仅限：~!@#$%^&amp;*()_=-/,.?&lt;&gt;;:[]&#123;&#125;|\）任意两种组合  </span><br><span class="hljs-meta">#   2. 密码长度不能低于8位  </span><br><span class="hljs-meta">#  </span><br><span class="hljs-meta"># 高级密码要求：  </span><br><span class="hljs-meta">#   1. 密码必须由数字、字母及特殊字符（仅限：~!@#$%^&amp;*()_=-/,.?&lt;&gt;;:[]&#123;&#125;|\）三种组合  </span><br><span class="hljs-meta">#   2. 密码只能由字母开头  </span><br><span class="hljs-meta">#   3. 密码长度不能低于16位</span><br><br>symbols = r<span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;\~!@#$%^&amp;*()_=-/,.?&lt;&gt;;:[]&#123;&#125;|&#x27;</span><span class="hljs-string">&#x27;&#x27;</span><br>chars = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br>nums = <span class="hljs-string">&#x27;0123456789&#x27;</span><br><br>password = input(<span class="hljs-string">&#x27;Pls enter the password you need to check:&#x27;</span>)<br><br><span class="hljs-meta">#判断长度</span><br>length = len(password)<br><br><span class="hljs-keyword">while</span> (password.isspace() or length == <span class="hljs-number">0</span>):<br>    password = input(<span class="hljs-string">&#x27;You have entered the space, pls enter again.&#x27;</span>)<br><br><span class="hljs-keyword">if</span> length &lt;= <span class="hljs-number">8</span>:<br>    flag_len = <span class="hljs-number">1</span><br>elif <span class="hljs-number">8</span> &lt; length &lt;<span class="hljs-number">16</span>:<br>    flag_len = <span class="hljs-number">2</span><br><span class="hljs-keyword">else</span>:<br>    flag_len = <span class="hljs-number">3</span><br> <br>flag_con = <span class="hljs-number">0</span><br> <br><span class="hljs-meta"># 判断是否包含特殊字符</span><br><span class="hljs-keyword">for</span> each in password:<br>    <span class="hljs-keyword">if</span> each in symbols:<br>        flag_con += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">break</span><br>    <br><span class="hljs-meta"># 判断是否包含字母</span><br><span class="hljs-keyword">for</span> each in password:<br>    <span class="hljs-keyword">if</span> each in chars:<br>        flag_con += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">break</span><br> <br><span class="hljs-meta"># 判断是否包含数字</span><br><span class="hljs-keyword">for</span> each in password:<br>    <span class="hljs-keyword">if</span> each in nums:<br>        flag_con += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">break</span>    <br> <br><span class="hljs-meta"># 打印结果</span><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span> :<br>    print(<span class="hljs-string">&quot;您的密码安全级别评定为：&quot;</span>, end=<span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-keyword">if</span> flag_len == <span class="hljs-number">1</span> or flag_con == <span class="hljs-number">1</span> :<br>        print(<span class="hljs-string">&quot;低&quot;</span>)<br>    elif flag_len == <span class="hljs-number">2</span> or flag_con == <span class="hljs-number">2</span> :<br>        print(<span class="hljs-string">&quot;中&quot;</span>)<br>    <span class="hljs-keyword">else</span> :<br>        print(<span class="hljs-string">&quot;高&quot;</span>)<br>        print(<span class="hljs-string">&quot;请继续保持&quot;</span>)<br>        <span class="hljs-keyword">break</span><br> <br>    print(<span class="hljs-string">&quot;请按以下方式提升您的密码安全级别：\n\</span><br><span class="hljs-string">    \t1. 密码必须由数字、字母及特殊字符三种组合\n\</span><br><span class="hljs-string">    \t2. 密码只能由字母开头\n\</span><br><span class="hljs-string">    \t3. 密码长度不能低于16位&#x27;&quot;</span>)<br>    <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p>注意字符串前’r’的使用方法</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise_13</title>
    <link href="/2016/08/02/Exercise-13/"/>
    <url>/2016/08/02/Exercise-13/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-13-Tuple"><a href="#Exercise-13-Tuple" class="headerlink" title="Exercise 13 : Tuple"></a>Exercise 13 : Tuple</h1><span id="more"></span><p>Test : </p><ol><li><p>列表：一个大仓库，可以随时往里面添加和删除任何东西。</p><p>元组：封闭的列表，一旦定义，就不可改变。</p></li><li><p>当内容需要不能轻易被改写，使用元组</p><p>反之，频繁修改数据的话，使用列表</p></li><li><p><strong>元组可以使用的内置方法</strong> (?)</p></li><li><p>拼接只有一个元素的元组时，逗号和小括号必须同时存在</p></li><li><p>所有多对象的、逗号分隔的、没有明确用符号定义的这些集合默认的类型都是元组。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs haskell">&gt;&gt;&gt; h = x, y, z = <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span><br>&gt;&gt;&gt; <span class="hljs-class"><span class="hljs-keyword">type</span>(<span class="hljs-title">x</span>)</span><br>&lt;<span class="hljs-keyword">class</span> &#x27;int&#x27;&gt;<br>&gt;&gt;&gt; <span class="hljs-class"><span class="hljs-keyword">type</span>(<span class="hljs-title">h</span>)</span><br>&lt;<span class="hljs-keyword">class</span> &#x27;tuple&#x27;&gt;<br></code></pre></td></tr></table></figure></li><li><p>元组推导式/元组解析</p><p>不存在元组推导式，会变成<strong>生成器</strong>/类似于<em>迭代器</em> </p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1 = (x**<span class="hljs-number">2</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>))</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">type</span>(tuple1)</span><br>&lt;class &#x27;generator&#x27;&gt;<br></code></pre></td></tr></table></figure><p>python3中next()改为__next__()</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1 = (x**<span class="hljs-number">2</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>))</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1.__next__()</span><br>0<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1.__next__()</span><br>1<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1.__next__()</span><br>4<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1.__next__()</span><br>9<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1.__next__()</span><br>16<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1.__next__()</span><br>25<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1.__next__()</span><br>36<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1.__next__()</span><br>49<br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python">tuple1.__next__()</span><br>Traceback (most recent call last):<br>  File &quot;&lt;pyshell#9&gt;&quot;, line 1, in &lt;module&gt;<br>    tuple1.__next__()<br>StopIteration<br></code></pre></td></tr></table></figure><p>相当于在迭代中输出元素</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise_12</title>
    <link href="/2016/08/02/Exercise-12/"/>
    <url>/2016/08/02/Exercise-12/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-12-List-3"><a href="#Exercise-12-List-3" class="headerlink" title="Exercise 12 : List 3"></a>Exercise 12 : List 3</h1><span id="more"></span><ol><li><p>list1 = [1, [1, 2, [‘A’]], 3, 5, 8, 13, 18]</p><p>将’A’ 改成’B’</p><p>list1[1][2][0] = ‘B’</p></li><li><p>顺序排序列表 list.sort()</p></li><li><p>逆序排序列表 </p><p>list.sort()</p><p>list.reverse()</p><p>or</p><p>list.sort(reverse=True)</p></li><li><p>list.copy()拷贝原列表组成新列表(原列表改变不影响新列表)</p><p>list.clear()清空原列表变为[ ]空列表而非删除</p></li><li><p>列表解析</p><p>list1 = [x**2 for x in range(5)]</p><p># list1 = [0, 1, 4, 9, 16, 25]</p><p><strong>相当于</strong> </p><p>list1 = [ ]</p><p>for x in range(10):</p><p>​          list1.append(x**2)</p><p>将下面的列表解析输出结果和得出推导式</p><p>list1 = [(x, y) for x in range(10) for y in range(10) if x%2 == 0 if y%2==0]</p><p>得出的结果为0，2，4，6，8的组合，25个组合组成列表</p><p><strong>等价于</strong> </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">list1</span> =<span class="hljs-meta"> [ ]</span><br><span class="hljs-attribute">for</span> x in range(<span class="hljs-number">10</span>):<br>    <span class="hljs-attribute">for</span> y in range(<span class="hljs-number">10</span>):<br>        <span class="hljs-attribute">if</span> x%<span class="hljs-number">2</span> == <span class="hljs-number">0</span> and y%<span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>            <span class="hljs-attribute">list1</span>.append((x,y))<br><span class="hljs-attribute">print</span>(list<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise_10</title>
    <link href="/2016/08/02/Exercise-10/"/>
    <url>/2016/08/02/Exercise-10/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-10-List-1"><a href="#Exercise-10-List-1" class="headerlink" title="Exercise 10 : List 1"></a>Exercise 10 : List 1</h1><span id="more"></span><p>Test : </p><ol><li><p>list可以存放所有数据类型：</p><p>mix = [1, ‘A’, 2.1, [1,3,9]]</p></li><li><p>add the element :</p><p>a.append(‘A’)</p><p>b.extend([‘A’,’B’])</p><p>insert(1,’A’)，1为list中的次序</p></li><li><p>append() : 将参数作为元素添加到列表末尾</p><p>extend() : 将元素作为一个列表添加到列表末尾</p></li><li><p>member.append([‘A’, ‘B’])和member.extend([‘A’, ‘B’])不同</p><p>前者为在列表末尾添加一个列表[, , , [‘A’ , ‘B’ ]]</p><p>后者为在列表末尾加一个列表[, , , ‘A’, ‘B’ ]</p></li><li><p>name = [‘1’, ‘2’, ‘4’, ‘5’]在’2’ , ‘4’ 之间加入’3’</p><p>name.insert(2, ‘3’)</p></li></ol><p>Try : </p><ol><li><p>打印列表中的所有内容</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">a</span> = <span class="hljs-selector-attr">[1, 3, <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>,[1,3,4]</span>]<br><span class="hljs-keyword">for</span> each <span class="hljs-keyword">in</span> <span class="hljs-selector-tag">a</span>:<br>print(each)<br>要打印<span class="hljs-selector-attr">[1,3,4]</span>中的元素，使用<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(a[<span class="hljs-number">4</span>][<span class="hljs-number">0</span>/<span class="hljs-number">1</span>/<span class="hljs-number">2</span>])</span></span><br></code></pre></td></tr></table></figure><p>访问元素</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise_9</title>
    <link href="/2016/08/02/Exercise-9/"/>
    <url>/2016/08/02/Exercise-9/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-9-Branch-and-Leap-2"><a href="#Exercise-9-Branch-and-Leap-2" class="headerlink" title="Exercise 9 : Branch and Leap 2"></a>Exercise 9 : Branch and Leap 2</h1><span id="more"></span><p>Test : </p><ol><li><p>打印次数</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>, <span class="hljs-number">2</span>):<br><span class="hljs-attribute">print</span>(&#x27;A&#x27;)<br><span class="hljs-attribute">0</span>，<span class="hljs-number">2</span>，<span class="hljs-number">4</span>，<span class="hljs-number">6</span>，<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p>循环输出5次A</p></li><li><p>打印次数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">for <span class="hljs-selector-tag">i</span> in <span class="hljs-number">5</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;A&#x27;</span>)<br></code></pre></td></tr></table></figure><p>报错，因为成员资格运算符 in后加序列，而序列只有list, tuple, string三种</p></li><li><p>break 停止当前循环并结束循环体</p><p>continue 终止本轮循环并开始下一轮（在下一轮循环开始之前，需先测试循环条件）</p></li><li><p>range(10) </p><p>list(range(10))  输出结果为[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</p></li><li><p>2</p><p>3</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable"><span class="hljs-keyword">while</span></span> <span class="hljs-variable"><span class="hljs-literal">True</span></span>:<br><span class="hljs-variable"><span class="hljs-keyword">while</span></span> <span class="hljs-variable"><span class="hljs-literal">True</span></span>:<br><span class="hljs-variable">break</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-number">1</span>)</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-number">2</span>)</span><br><span class="hljs-variable">break</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-number">3</span>)</span><br></code></pre></td></tr></table></figure><p>break只能跳出一层循环</p></li><li><p>改进代码效率：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua">i = <span class="hljs-number">0</span><br><span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;ILoveFishC.com&#x27;</span><br><span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(<span class="hljs-built_in">string</span>) :<br>    <span class="hljs-built_in">print</span>(i)<br>    i += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>由于每次判断都需要调用len(string)故效率低，因此我们选择采用length = len(string)来提高效率。</p></li></ol><p>Try : </p><ol><li><p>设计一个验证用户密码程序，用户只有三次机会输入错误，不过如果用户输入的内容包含‘*’则不计算在内。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-built_in">count</span> = <span class="hljs-number">3</span><br>password = <span class="hljs-string">&#x27;abc123&#x27;</span><br><span class="hljs-keyword">while</span> coun<span class="hljs-variable">t:</span><br>    password2 = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Pls input a password:&#x27;</span>)<br>    <span class="hljs-keyword">if</span> password2 == password:<br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;You have entered the right password!&#x27;</span>)<br>        <span class="hljs-keyword">break</span><br>    elif <span class="hljs-string">&#x27;*&#x27;</span> in password2:<br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;There is none &#x27;*&#x27; in password, you have another&quot;</span>, <span class="hljs-built_in">count</span>,<span class="hljs-string">&#x27; opportunity(ies)! &#x27;</span>)<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;It is wrong! You have another&#x27;</span>, <span class="hljs-built_in">count</span>-<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;opportunity(ies)! &#x27;</span>)<br>    <span class="hljs-built_in">count</span> -= <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><strong>存在问题 : input的对象内部含’*‘会导致空str导入</strong>(待解决)</p></li><li><p>水仙花数问题(ABC = A^3 + B^3 + C^3 )</p><p>narcissistic number : </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">100</span>,<span class="hljs-number">1000</span>):<br>    <span class="hljs-attribute">a</span> = i//<span class="hljs-number">100</span>#注意用地板除//而非/<br>    <span class="hljs-attribute">b</span> = i//<span class="hljs-number">10</span> - a * <span class="hljs-number">10</span><br>    <span class="hljs-attribute">c</span> = i%<span class="hljs-number">10</span><br>    <span class="hljs-attribute">if</span> a ** <span class="hljs-number">3</span> + b ** <span class="hljs-number">3</span> + c ** <span class="hljs-number">3</span> == i:<br>        <span class="hljs-attribute">print</span>(i)<br>    <span class="hljs-attribute">i</span> += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">100</span>,<span class="hljs-number">1000</span>):<br>    <span class="hljs-attribute">summary</span> = <span class="hljs-number">0</span><br>    <span class="hljs-attribute">temp</span> = i<br>    <span class="hljs-attribute">while</span> temp:<br>        <span class="hljs-attribute">summary</span> = summary + (temp%<span class="hljs-number">10</span>) ** <span class="hljs-number">3</span><br>        <span class="hljs-attribute">temp</span> //=<span class="hljs-number">10</span><br>    <span class="hljs-attribute">if</span> summary == i:<br>        <span class="hljs-attribute">print</span>(i)<br></code></pre></td></tr></table></figure><p>两种不同的方法完成</p></li><li><p>红球3，黄球3，绿球6个。将12个球混合放入一个盒子中，从中任意摸出8个球，编程计算摸出球颜色搭配。</p></li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">a</span> <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>):<br>    <span class="hljs-keyword">for</span> <span class="hljs-selector-tag">b</span> <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>):<br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> range(<span class="hljs-number">2</span>,<span class="hljs-number">7</span>):<br>            <span class="hljs-keyword">if</span> <span class="hljs-selector-tag">a</span> + <span class="hljs-selector-tag">b</span> + c == <span class="hljs-number">8</span>:<br>                print(<span class="hljs-string">&#x27;red:&#x27;</span>, <span class="hljs-selector-tag">a</span> , <span class="hljs-string">&#x27; yellow:&#x27;</span>, <span class="hljs-selector-tag">b</span> ,<span class="hljs-string">&#x27; green:&#x27;</span>, c ,<span class="hljs-string">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise_8</title>
    <link href="/2016/08/02/Exercise-8/"/>
    <url>/2016/08/02/Exercise-8/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-8-Branch-and-Leap-1"><a href="#Exercise-8-Branch-and-Leap-1" class="headerlink" title="Exercise 8 : Branch and Leap 1"></a>Exercise 8 : Branch and Leap 1</h1><span id="more"></span><p>Test : </p><ol><li><p>if not (money &lt; 100) : if money &gt;= 100</p></li><li><p>assert condition(False)         #AssertionError</p></li><li><p>交换 a=1, b=2,c=3</p><p>a,b,c = c,a,b</p></li><li><p>(x &lt; y and [x] or [y])[0]</p><p>实现三元操作符功能 x if condition else y</p></li><li><p>成员资格运算符 : in 如果在序列中返回True，否则False</p></li></ol><p>Try : </p><ol><li><p>将以下代码使用三元操作符实现</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ceylon">x, y, z = <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span><br><span class="hljs-keyword">if</span> x &lt; y:<br><span class="hljs-keyword">small</span> = x<br><span class="hljs-keyword">if</span> z &lt; <span class="hljs-keyword">small</span>:<br><span class="hljs-keyword">small</span> = z<br>elif y &lt; z:<br><span class="hljs-keyword">small</span> = y<br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">small</span> = z<br>可以改成：<br><span class="hljs-keyword">small</span> = x <span class="hljs-keyword">if</span>(x &lt; y and x &lt; z) <span class="hljs-keyword">else</span> (y <span class="hljs-keyword">if</span> y&lt; z <span class="hljs-keyword">else</span> z)<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise_6</title>
    <link href="/2016/08/02/Exercise-6/"/>
    <url>/2016/08/02/Exercise-6/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-6-Operators"><a href="#Exercise-6-Operators" class="headerlink" title="Exercise 6 : Operators"></a>Exercise 6 : Operators</h1><span id="more"></span><p>Test : </p><ol><li><p>floor 除法 : 返回最近的整数</p><p>3.0 // 2.0          #1.0</p></li><li><p>a &lt; b &lt; c  等价于 a &lt; b and b &lt; c</p></li><li><p>5 ** -2                    #0.04</p></li><li><p>not 1 or 0 and 1 or 3 and 4 or 5 and 6 or 7 and 8 and 9</p><p>4 (preference : not &gt; and &gt; or )</p><p>and 和 or 均返回决定表达式结果的值</p><p>x and y ,x 为真，返回y；x为假，返回x</p><p>x or y, x为真，返回x；x为假，返回y</p><p>not x , x为真，返回False；x为假，返回True</p></li></ol><p>Try : </p><p>100以内的奇数：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">i</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">while</span> i&lt;<span class="hljs-number">100</span>:<br>    <span class="hljs-attribute">if</span> i%<span class="hljs-number">2</span> !=<span class="hljs-number">0</span>:<br>        <span class="hljs-attribute">print</span>(i, &#x27; &#x27;)<br>        <span class="hljs-attribute">i</span> += <span class="hljs-number">1</span><br>    <span class="hljs-attribute">else</span>:<br>        <span class="hljs-attribute">i</span> += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>中国剩余定理问题 : </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">i</span> = <span class="hljs-number">1</span><br><span class="hljs-attribute">while</span> i &lt; <span class="hljs-number">2000</span>:<br>    <span class="hljs-attribute">if</span> (i % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) and (i % <span class="hljs-number">3</span> == <span class="hljs-number">2</span>) and (i % <span class="hljs-number">5</span> == <span class="hljs-number">4</span>) and (i % <span class="hljs-number">6</span> == <span class="hljs-number">5</span>) and (i % <span class="hljs-number">7</span> == <span class="hljs-number">0</span>):<br>        <span class="hljs-attribute">print</span>(i)<br>        <span class="hljs-attribute">i</span> += <span class="hljs-number">1</span><br>    <span class="hljs-attribute">else</span>:<br>        <span class="hljs-attribute">i</span> += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">x</span> = <span class="hljs-number">7</span><br><span class="hljs-attribute">i</span> = <span class="hljs-number">1</span><br><span class="hljs-attribute">flag</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">while</span> i&lt;= <span class="hljs-number">1000</span>:<br>    <span class="hljs-attribute">if</span> (x%<span class="hljs-number">2</span> ==<span class="hljs-number">1</span>) and (x%<span class="hljs-number">3</span> == <span class="hljs-number">2</span>) and (x%<span class="hljs-number">5</span> == <span class="hljs-number">4</span>) and (x%<span class="hljs-number">6</span> == <span class="hljs-number">5</span>):<br>        <span class="hljs-attribute">flag</span> = <span class="hljs-number">1</span><br>    <span class="hljs-attribute">else</span>:<br>        <span class="hljs-attribute">x</span> = <span class="hljs-number">7</span> * (i+<span class="hljs-number">1</span>)<br>    <span class="hljs-attribute">i</span> += <span class="hljs-number">1</span><br><br><span class="hljs-attribute">if</span> flag == <span class="hljs-number">1</span>:<br>    <span class="hljs-attribute">print</span>(&#x27;阶梯数为：&#x27;, x)<br><span class="hljs-attribute">else</span>:<br>    <span class="hljs-attribute">print</span>(&#x27;No result!&#x27;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise_5</title>
    <link href="/2016/08/02/Exercise-5/"/>
    <url>/2016/08/02/Exercise-5/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-5-Primitive-Types"><a href="#Exercise-5-Primitive-Types" class="headerlink" title="Exercise 5 : Primitive Types"></a>Exercise 5 : Primitive Types</h1><span id="more"></span><p>Test : </p><ol><li><p>int     整型</p><p>bool 布尔型</p><p>float 浮点型</p><p>str      字符串</p></li><li><p>因为计算机为二进制，所以True(1)，False(0)</p></li><li><p>int() 向下取整(去除小数部分)</p></li><li><p><strong>int(x + 0.5)实现对x的四舍五入</strong> </p></li><li><p>type() : 获得关于类型的信息 返回&lt;class ‘ ‘&gt;</p><p>isinstance() : 更建议使用，isinstance(待检验的, 类型)，相同返回True，不同返回False</p></li><li><p><strong>python3 支持uft—8编码故可以使用中文名命名变量</strong> </p></li></ol><p>Try : </p><ol><li>判断闰年</li></ol><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs processing"><span class="hljs-built_in">year</span> = input(<span class="hljs-string">&#x27;Please enter a number of year : &#x27;</span>)<br><span class="hljs-keyword">while</span> not <span class="hljs-built_in">year</span>.isdigit():<br>    <span class="hljs-built_in">year</span> = input(<span class="hljs-string">&#x27;Pls enter an interger:&#x27;</span>)<br><br><span class="hljs-built_in">year</span> = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">year</span>)    <br><span class="hljs-keyword">if</span> <span class="hljs-built_in">year</span> % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;闰年&#x27;</span>)<br>elif <span class="hljs-built_in">year</span> % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> and <span class="hljs-built_in">year</span> % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;闰年&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;不是闰年&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">temp</span> = <span class="hljs-function"><span class="hljs-title">input</span>(<span class="hljs-string">&#x27;Please enter a year:&#x27;</span>)</span><br><span class="hljs-variable"><span class="hljs-keyword">while</span></span> <span class="hljs-variable"><span class="hljs-keyword">not</span></span> <span class="hljs-variable">temp.isdigit</span>():<br>    <span class="hljs-variable">temp</span> = <span class="hljs-function"><span class="hljs-title">input</span>(<span class="hljs-string">&#x27;Sorry, pls enter a interger:&#x27;</span>)</span><br><br><span class="hljs-variable">year</span> = <span class="hljs-function"><span class="hljs-title">int</span>(<span class="hljs-variable">temp</span>)</span><br><span class="hljs-variable"><span class="hljs-keyword">if</span></span> <span class="hljs-variable">year</span>/<span class="hljs-number">400</span> ==<span class="hljs-function"><span class="hljs-title">int</span>(<span class="hljs-variable">year</span>/<span class="hljs-number">400</span>):</span><br><span class="hljs-function">    <span class="hljs-title">print</span>(<span class="hljs-variable">temp</span> + <span class="hljs-string">&#x27;是闰年！&#x27;</span>)</span><br><span class="hljs-variable">elif</span> <span class="hljs-variable">year</span>/<span class="hljs-number">4</span> == <span class="hljs-function"><span class="hljs-title">int</span>(<span class="hljs-variable">year</span>/<span class="hljs-number">4</span>) <span class="hljs-variable"><span class="hljs-keyword">and</span></span> (<span class="hljs-variable">year</span>/<span class="hljs-number">100</span> <span class="hljs-variable">!</span>= <span class="hljs-title">int</span>(<span class="hljs-variable">year</span>/<span class="hljs-number">100</span>)):</span><br><span class="hljs-function">    <span class="hljs-title">print</span>(<span class="hljs-variable">temp</span> + <span class="hljs-string">&#x27;是闰年！&#x27;</span>)</span><br><span class="hljs-variable"><span class="hljs-keyword">else</span></span>:<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-variable">temp</span> + <span class="hljs-string">&#x27;不是闰年！&#x27;</span>)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Exercise</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Exercise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2016/06/29/hello-world/"/>
    <url>/2016/06/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
